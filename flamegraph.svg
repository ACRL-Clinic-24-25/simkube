<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1350" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1333.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1333.00"> </text><svg id="frames" x="10" width="1180" total_samples="357868"><g><title>libsystem_malloc.dylib`_free (42 samples, 0.01%)</title><rect x="0.0031%" y="1173" width="0.0117%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="42"/><text x="0.2531%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_free (92 samples, 0.03%)</title><rect x="0.0592%" y="1157" width="0.0257%" height="15" fill="rgb(217,0,24)" fg:x="212" fg:w="92"/><text x="0.3092%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (164 samples, 0.05%)</title><rect x="0.0849%" y="1157" width="0.0458%" height="15" fill="rgb(221,193,54)" fg:x="304" fg:w="164"/><text x="0.3349%" y="1167.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (165 samples, 0.05%)</title><rect x="0.1397%" y="1157" width="0.0461%" height="15" fill="rgb(248,212,6)" fg:x="500" fg:w="165"/><text x="0.3897%" y="1167.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (42 samples, 0.01%)</title><rect x="0.2764%" y="1125" width="0.0117%" height="15" fill="rgb(208,68,35)" fg:x="989" fg:w="42"/><text x="0.5264%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (74 samples, 0.02%)</title><rect x="0.3026%" y="1109" width="0.0207%" height="15" fill="rgb(232,128,0)" fg:x="1083" fg:w="74"/><text x="0.5526%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (41 samples, 0.01%)</title><rect x="0.3250%" y="1109" width="0.0115%" height="15" fill="rgb(207,160,47)" fg:x="1163" fg:w="41"/><text x="0.5750%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (132 samples, 0.04%)</title><rect x="0.3929%" y="1093" width="0.0369%" height="15" fill="rgb(228,23,34)" fg:x="1406" fg:w="132"/><text x="0.6429%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (225 samples, 0.06%)</title><rect x="0.4328%" y="1093" width="0.0629%" height="15" fill="rgb(218,30,26)" fg:x="1549" fg:w="225"/><text x="0.6828%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (183 samples, 0.05%)</title><rect x="0.4446%" y="1077" width="0.0511%" height="15" fill="rgb(220,122,19)" fg:x="1591" fg:w="183"/><text x="0.6946%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (108 samples, 0.03%)</title><rect x="0.4655%" y="1061" width="0.0302%" height="15" fill="rgb(250,228,42)" fg:x="1666" fg:w="108"/><text x="0.7155%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (170 samples, 0.05%)</title><rect x="0.4968%" y="1093" width="0.0475%" height="15" fill="rgb(240,193,28)" fg:x="1778" fg:w="170"/><text x="0.7468%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.03%)</title><rect x="0.5862%" y="1077" width="0.0263%" height="15" fill="rgb(216,20,37)" fg:x="2098" fg:w="94"/><text x="0.8362%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (93 samples, 0.03%)</title><rect x="0.6142%" y="1077" width="0.0260%" height="15" fill="rgb(206,188,39)" fg:x="2198" fg:w="93"/><text x="0.8642%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (74 samples, 0.02%)</title><rect x="0.6195%" y="1061" width="0.0207%" height="15" fill="rgb(217,207,13)" fg:x="2217" fg:w="74"/><text x="0.8695%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (94 samples, 0.03%)</title><rect x="0.6416%" y="1077" width="0.0263%" height="15" fill="rgb(231,73,38)" fg:x="2296" fg:w="94"/><text x="0.8916%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.01%)</title><rect x="0.6835%" y="1045" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="2446" fg:w="43"/><text x="0.9335%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (87 samples, 0.02%)</title><rect x="0.7036%" y="1045" width="0.0243%" height="15" fill="rgb(210,31,41)" fg:x="2518" fg:w="87"/><text x="0.9536%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (214 samples, 0.06%)</title><rect x="0.7279%" y="1045" width="0.0598%" height="15" fill="rgb(221,200,47)" fg:x="2605" fg:w="214"/><text x="0.9779%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (202 samples, 0.06%)</title><rect x="0.7313%" y="1029" width="0.0564%" height="15" fill="rgb(226,26,5)" fg:x="2617" fg:w="202"/><text x="0.9813%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (123 samples, 0.03%)</title><rect x="0.7534%" y="1013" width="0.0344%" height="15" fill="rgb(249,33,26)" fg:x="2696" fg:w="123"/><text x="1.0034%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (98 samples, 0.03%)</title><rect x="0.7603%" y="997" width="0.0274%" height="15" fill="rgb(235,183,28)" fg:x="2721" fg:w="98"/><text x="1.0103%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (440 samples, 0.12%)</title><rect x="0.6701%" y="1061" width="0.1230%" height="15" fill="rgb(221,5,38)" fg:x="2398" fg:w="440"/><text x="0.9201%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (474 samples, 0.13%)</title><rect x="0.6678%" y="1077" width="0.1325%" height="15" fill="rgb(247,18,42)" fg:x="2390" fg:w="474"/><text x="0.9178%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (93 samples, 0.03%)</title><rect x="0.8676%" y="1061" width="0.0260%" height="15" fill="rgb(241,131,45)" fg:x="3105" fg:w="93"/><text x="1.1176%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (45 samples, 0.01%)</title><rect x="0.9227%" y="1029" width="0.0126%" height="15" fill="rgb(249,31,29)" fg:x="3302" fg:w="45"/><text x="1.1727%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (222 samples, 0.06%)</title><rect x="0.8950%" y="1061" width="0.0620%" height="15" fill="rgb(225,111,53)" fg:x="3203" fg:w="222"/><text x="1.1450%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (174 samples, 0.05%)</title><rect x="0.9084%" y="1045" width="0.0486%" height="15" fill="rgb(238,160,17)" fg:x="3251" fg:w="174"/><text x="1.1584%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (78 samples, 0.02%)</title><rect x="0.9353%" y="1029" width="0.0218%" height="15" fill="rgb(214,148,48)" fg:x="3347" fg:w="78"/><text x="1.1853%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (79 samples, 0.02%)</title><rect x="0.9582%" y="1061" width="0.0221%" height="15" fill="rgb(232,36,49)" fg:x="3429" fg:w="79"/><text x="1.2082%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (200 samples, 0.06%)</title><rect x="1.0934%" y="1045" width="0.0559%" height="15" fill="rgb(209,103,24)" fg:x="3913" fg:w="200"/><text x="1.3434%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (41 samples, 0.01%)</title><rect x="1.1560%" y="1029" width="0.0115%" height="15" fill="rgb(229,88,8)" fg:x="4137" fg:w="41"/><text x="1.4060%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (71 samples, 0.02%)</title><rect x="1.1907%" y="1013" width="0.0198%" height="15" fill="rgb(213,181,19)" fg:x="4261" fg:w="71"/><text x="1.4407%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (338 samples, 0.09%)</title><rect x="1.1524%" y="1045" width="0.0944%" height="15" fill="rgb(254,191,54)" fg:x="4124" fg:w="338"/><text x="1.4024%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (261 samples, 0.07%)</title><rect x="1.1739%" y="1029" width="0.0729%" height="15" fill="rgb(241,83,37)" fg:x="4201" fg:w="261"/><text x="1.4239%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (130 samples, 0.04%)</title><rect x="1.2105%" y="1013" width="0.0363%" height="15" fill="rgb(233,36,39)" fg:x="4332" fg:w="130"/><text x="1.4605%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (314 samples, 0.09%)</title><rect x="1.2499%" y="1045" width="0.0877%" height="15" fill="rgb(226,3,54)" fg:x="4473" fg:w="314"/><text x="1.4999%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.01%)</title><rect x="1.3444%" y="1029" width="0.0103%" height="15" fill="rgb(245,192,40)" fg:x="4811" fg:w="37"/><text x="1.5944%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (72 samples, 0.02%)</title><rect x="1.3547%" y="1029" width="0.0201%" height="15" fill="rgb(238,167,29)" fg:x="4848" fg:w="72"/><text x="1.6047%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (36 samples, 0.01%)</title><rect x="1.3647%" y="1013" width="0.0101%" height="15" fill="rgb(232,182,51)" fg:x="4884" fg:w="36"/><text x="1.6147%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (230 samples, 0.06%)</title><rect x="1.4667%" y="1013" width="0.0643%" height="15" fill="rgb(231,60,39)" fg:x="5249" fg:w="230"/><text x="1.7167%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (44 samples, 0.01%)</title><rect x="1.5522%" y="981" width="0.0123%" height="15" fill="rgb(208,69,12)" fg:x="5555" fg:w="44"/><text x="1.8022%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (209 samples, 0.06%)</title><rect x="1.5330%" y="1013" width="0.0584%" height="15" fill="rgb(235,93,37)" fg:x="5486" fg:w="209"/><text x="1.7830%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (180 samples, 0.05%)</title><rect x="1.5411%" y="997" width="0.0503%" height="15" fill="rgb(213,116,39)" fg:x="5515" fg:w="180"/><text x="1.7911%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (96 samples, 0.03%)</title><rect x="1.5645%" y="981" width="0.0268%" height="15" fill="rgb(222,207,29)" fg:x="5599" fg:w="96"/><text x="1.8145%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (330 samples, 0.09%)</title><rect x="1.5922%" y="1013" width="0.0922%" height="15" fill="rgb(206,96,30)" fg:x="5698" fg:w="330"/><text x="1.8422%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (125 samples, 0.03%)</title><rect x="1.7115%" y="997" width="0.0349%" height="15" fill="rgb(218,138,4)" fg:x="6125" fg:w="125"/><text x="1.9615%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (59 samples, 0.02%)</title><rect x="1.7300%" y="981" width="0.0165%" height="15" fill="rgb(250,191,14)" fg:x="6191" fg:w="59"/><text x="1.9800%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.01%)</title><rect x="1.7479%" y="997" width="0.0106%" height="15" fill="rgb(239,60,40)" fg:x="6255" fg:w="38"/><text x="1.9979%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (156 samples, 0.04%)</title><rect x="1.8389%" y="981" width="0.0436%" height="15" fill="rgb(206,27,48)" fg:x="6581" fg:w="156"/><text x="2.0889%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (76 samples, 0.02%)</title><rect x="1.9127%" y="949" width="0.0212%" height="15" fill="rgb(225,35,8)" fg:x="6845" fg:w="76"/><text x="2.1627%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (285 samples, 0.08%)</title><rect x="1.8848%" y="981" width="0.0796%" height="15" fill="rgb(250,213,24)" fg:x="6745" fg:w="285"/><text x="2.1348%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (240 samples, 0.07%)</title><rect x="1.8973%" y="965" width="0.0671%" height="15" fill="rgb(247,123,22)" fg:x="6790" fg:w="240"/><text x="2.1473%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (109 samples, 0.03%)</title><rect x="1.9340%" y="949" width="0.0305%" height="15" fill="rgb(231,138,38)" fg:x="6921" fg:w="109"/><text x="2.1840%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (317 samples, 0.09%)</title><rect x="1.9658%" y="981" width="0.0886%" height="15" fill="rgb(231,145,46)" fg:x="7035" fg:w="317"/><text x="2.2158%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (741 samples, 0.21%)</title><rect x="2.0544%" y="981" width="0.2071%" height="15" fill="rgb(251,118,11)" fg:x="7352" fg:w="741"/><text x="2.3044%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (664 samples, 0.19%)</title><rect x="2.0759%" y="965" width="0.1855%" height="15" fill="rgb(217,147,25)" fg:x="7429" fg:w="664"/><text x="2.3259%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (399 samples, 0.11%)</title><rect x="2.1500%" y="949" width="0.1115%" height="15" fill="rgb(247,81,37)" fg:x="7694" fg:w="399"/><text x="2.4000%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (327 samples, 0.09%)</title><rect x="2.1701%" y="933" width="0.0914%" height="15" fill="rgb(209,12,38)" fg:x="7766" fg:w="327"/><text x="2.4201%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,877 samples, 0.52%)</title><rect x="1.7585%" y="997" width="0.5245%" height="15" fill="rgb(227,1,9)" fg:x="6293" fg:w="1877"/><text x="2.0085%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (39 samples, 0.01%)</title><rect x="2.2978%" y="981" width="0.0109%" height="15" fill="rgb(248,47,43)" fg:x="8223" fg:w="39"/><text x="2.5478%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (98 samples, 0.03%)</title><rect x="2.2830%" y="997" width="0.0274%" height="15" fill="rgb(221,10,30)" fg:x="8170" fg:w="98"/><text x="2.5330%" y="1007.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,255 samples, 0.63%)</title><rect x="1.6844%" y="1013" width="0.6301%" height="15" fill="rgb(210,229,1)" fg:x="6028" fg:w="2255"/><text x="1.9344%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.01%)</title><rect x="2.3701%" y="997" width="0.0145%" height="15" fill="rgb(222,148,37)" fg:x="8482" fg:w="52"/><text x="2.6201%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (174 samples, 0.05%)</title><rect x="2.3861%" y="997" width="0.0486%" height="15" fill="rgb(234,67,33)" fg:x="8539" fg:w="174"/><text x="2.6361%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (131 samples, 0.04%)</title><rect x="2.3981%" y="981" width="0.0366%" height="15" fill="rgb(247,98,35)" fg:x="8582" fg:w="131"/><text x="2.6481%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (69 samples, 0.02%)</title><rect x="2.4154%" y="965" width="0.0193%" height="15" fill="rgb(247,138,52)" fg:x="8644" fg:w="69"/><text x="2.6654%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (84 samples, 0.02%)</title><rect x="2.4367%" y="997" width="0.0235%" height="15" fill="rgb(213,79,30)" fg:x="8720" fg:w="84"/><text x="2.6867%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="2.4805%" y="981" width="0.0112%" height="15" fill="rgb(246,177,23)" fg:x="8877" fg:w="40"/><text x="2.7305%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (96 samples, 0.03%)</title><rect x="2.4917%" y="981" width="0.0268%" height="15" fill="rgb(230,62,27)" fg:x="8917" fg:w="96"/><text x="2.7417%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (83 samples, 0.02%)</title><rect x="2.4953%" y="965" width="0.0232%" height="15" fill="rgb(216,154,8)" fg:x="8930" fg:w="83"/><text x="2.7453%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.02%)</title><rect x="2.5222%" y="981" width="0.0215%" height="15" fill="rgb(244,35,45)" fg:x="9026" fg:w="77"/><text x="2.7722%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (202 samples, 0.06%)</title><rect x="2.5437%" y="981" width="0.0564%" height="15" fill="rgb(251,115,12)" fg:x="9103" fg:w="202"/><text x="2.7937%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (175 samples, 0.05%)</title><rect x="2.5512%" y="965" width="0.0489%" height="15" fill="rgb(240,54,50)" fg:x="9130" fg:w="175"/><text x="2.8012%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (118 samples, 0.03%)</title><rect x="2.5671%" y="949" width="0.0330%" height="15" fill="rgb(233,84,52)" fg:x="9187" fg:w="118"/><text x="2.8171%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (105 samples, 0.03%)</title><rect x="2.5708%" y="933" width="0.0293%" height="15" fill="rgb(207,117,47)" fg:x="9200" fg:w="105"/><text x="2.8208%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (523 samples, 0.15%)</title><rect x="2.4601%" y="997" width="0.1461%" height="15" fill="rgb(249,43,39)" fg:x="8804" fg:w="523"/><text x="2.7101%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (184 samples, 0.05%)</title><rect x="2.6063%" y="997" width="0.0514%" height="15" fill="rgb(209,38,44)" fg:x="9327" fg:w="184"/><text x="2.8563%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (156 samples, 0.04%)</title><rect x="2.6141%" y="981" width="0.0436%" height="15" fill="rgb(236,212,23)" fg:x="9355" fg:w="156"/><text x="2.8641%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (111 samples, 0.03%)</title><rect x="2.6267%" y="965" width="0.0310%" height="15" fill="rgb(242,79,21)" fg:x="9400" fg:w="111"/><text x="2.8767%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (104 samples, 0.03%)</title><rect x="2.6286%" y="949" width="0.0291%" height="15" fill="rgb(211,96,35)" fg:x="9407" fg:w="104"/><text x="2.8786%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,250 samples, 0.35%)</title><rect x="2.3145%" y="1013" width="0.3493%" height="15" fill="rgb(253,215,40)" fg:x="8283" fg:w="1250"/><text x="2.5645%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (856 samples, 0.24%)</title><rect x="2.6638%" y="1013" width="0.2392%" height="15" fill="rgb(211,81,21)" fg:x="9533" fg:w="856"/><text x="2.9138%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (767 samples, 0.21%)</title><rect x="2.6887%" y="997" width="0.2143%" height="15" fill="rgb(208,190,38)" fg:x="9622" fg:w="767"/><text x="2.9387%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (483 samples, 0.13%)</title><rect x="2.7681%" y="981" width="0.1350%" height="15" fill="rgb(235,213,38)" fg:x="9906" fg:w="483"/><text x="3.0181%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (412 samples, 0.12%)</title><rect x="2.7879%" y="965" width="0.1151%" height="15" fill="rgb(237,122,38)" fg:x="9977" fg:w="412"/><text x="3.0379%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,529 samples, 1.54%)</title><rect x="1.3801%" y="1029" width="1.5450%" height="15" fill="rgb(244,218,35)" fg:x="4939" fg:w="5529"/><text x="1.6301%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="2.9251%" y="1029" width="0.0159%" height="15" fill="rgb(240,68,47)" fg:x="10468" fg:w="57"/><text x="3.1751%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (5,739 samples, 1.60%)</title><rect x="1.3376%" y="1045" width="1.6037%" height="15" fill="rgb(210,16,53)" fg:x="4787" fg:w="5739"/><text x="1.5876%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.01%)</title><rect x="2.9687%" y="1029" width="0.0129%" height="15" fill="rgb(235,124,12)" fg:x="10624" fg:w="46"/><text x="3.2187%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.03%)</title><rect x="2.9824%" y="1029" width="0.0293%" height="15" fill="rgb(224,169,11)" fg:x="10673" fg:w="105"/><text x="3.2324%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (83 samples, 0.02%)</title><rect x="2.9885%" y="1013" width="0.0232%" height="15" fill="rgb(250,166,2)" fg:x="10695" fg:w="83"/><text x="3.2385%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.01%)</title><rect x="2.9997%" y="997" width="0.0120%" height="15" fill="rgb(242,216,29)" fg:x="10735" fg:w="43"/><text x="3.2497%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (102 samples, 0.03%)</title><rect x="3.0128%" y="1029" width="0.0285%" height="15" fill="rgb(230,116,27)" fg:x="10782" fg:w="102"/><text x="3.2628%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (200 samples, 0.06%)</title><rect x="3.0413%" y="1029" width="0.0559%" height="15" fill="rgb(228,99,48)" fg:x="10884" fg:w="200"/><text x="3.2913%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (179 samples, 0.05%)</title><rect x="3.0472%" y="1013" width="0.0500%" height="15" fill="rgb(253,11,6)" fg:x="10905" fg:w="179"/><text x="3.2972%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (100 samples, 0.03%)</title><rect x="3.0693%" y="997" width="0.0279%" height="15" fill="rgb(247,143,39)" fg:x="10984" fg:w="100"/><text x="3.3193%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (88 samples, 0.02%)</title><rect x="3.0726%" y="981" width="0.0246%" height="15" fill="rgb(236,97,10)" fg:x="10996" fg:w="88"/><text x="3.3226%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (579 samples, 0.16%)</title><rect x="2.9413%" y="1045" width="0.1618%" height="15" fill="rgb(233,208,19)" fg:x="10526" fg:w="579"/><text x="3.1913%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (886 samples, 0.25%)</title><rect x="3.1031%" y="1045" width="0.2476%" height="15" fill="rgb(216,164,2)" fg:x="11105" fg:w="886"/><text x="3.3531%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (788 samples, 0.22%)</title><rect x="3.1305%" y="1029" width="0.2202%" height="15" fill="rgb(220,129,5)" fg:x="11203" fg:w="788"/><text x="3.3805%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (483 samples, 0.13%)</title><rect x="3.2157%" y="1013" width="0.1350%" height="15" fill="rgb(242,17,10)" fg:x="11508" fg:w="483"/><text x="3.4657%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (413 samples, 0.12%)</title><rect x="3.2353%" y="997" width="0.1154%" height="15" fill="rgb(242,107,0)" fg:x="11578" fg:w="413"/><text x="3.4853%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (38 samples, 0.01%)</title><rect x="3.3507%" y="1045" width="0.0106%" height="15" fill="rgb(251,28,31)" fg:x="11991" fg:w="38"/><text x="3.6007%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcpy (42 samples, 0.01%)</title><rect x="3.3613%" y="1045" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="12029" fg:w="42"/><text x="3.6113%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,589 samples, 2.40%)</title><rect x="0.9825%" y="1061" width="2.4000%" height="15" fill="rgb(215,21,27)" fg:x="3516" fg:w="8589"/><text x="1.2325%" y="1071.50">sk..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (321 samples, 0.09%)</title><rect x="3.3825%" y="1061" width="0.0897%" height="15" fill="rgb(232,23,21)" fg:x="12105" fg:w="321"/><text x="3.6325%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (238 samples, 0.07%)</title><rect x="3.4057%" y="1045" width="0.0665%" height="15" fill="rgb(244,5,23)" fg:x="12188" fg:w="238"/><text x="3.6557%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (177 samples, 0.05%)</title><rect x="3.4228%" y="1029" width="0.0495%" height="15" fill="rgb(226,81,46)" fg:x="12249" fg:w="177"/><text x="3.6728%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (155 samples, 0.04%)</title><rect x="3.4289%" y="1013" width="0.0433%" height="15" fill="rgb(247,70,30)" fg:x="12271" fg:w="155"/><text x="3.6789%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,596 samples, 2.68%)</title><rect x="0.8003%" y="1077" width="2.6814%" height="15" fill="rgb(212,68,19)" fg:x="2864" fg:w="9596"/><text x="1.0503%" y="1087.50">sk..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (376 samples, 0.11%)</title><rect x="3.4817%" y="1077" width="0.1051%" height="15" fill="rgb(240,187,13)" fg:x="12460" fg:w="376"/><text x="3.7317%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (328 samples, 0.09%)</title><rect x="3.4951%" y="1061" width="0.0917%" height="15" fill="rgb(223,113,26)" fg:x="12508" fg:w="328"/><text x="3.7451%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (187 samples, 0.05%)</title><rect x="3.5345%" y="1045" width="0.0523%" height="15" fill="rgb(206,192,2)" fg:x="12649" fg:w="187"/><text x="3.7845%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (163 samples, 0.05%)</title><rect x="3.5412%" y="1029" width="0.0455%" height="15" fill="rgb(241,108,4)" fg:x="12673" fg:w="163"/><text x="3.7912%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,936 samples, 3.06%)</title><rect x="0.5443%" y="1093" width="3.0559%" height="15" fill="rgb(247,173,49)" fg:x="1948" fg:w="10936"/><text x="0.7943%" y="1103.50">sk-..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (482 samples, 0.13%)</title><rect x="3.6002%" y="1093" width="0.1347%" height="15" fill="rgb(224,114,35)" fg:x="12884" fg:w="482"/><text x="3.8502%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (426 samples, 0.12%)</title><rect x="3.6159%" y="1077" width="0.1190%" height="15" fill="rgb(245,159,27)" fg:x="12940" fg:w="426"/><text x="3.8659%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (260 samples, 0.07%)</title><rect x="3.6622%" y="1061" width="0.0727%" height="15" fill="rgb(245,172,44)" fg:x="13106" fg:w="260"/><text x="3.9122%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (207 samples, 0.06%)</title><rect x="3.6771%" y="1045" width="0.0578%" height="15" fill="rgb(236,23,11)" fg:x="13159" fg:w="207"/><text x="3.9271%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,215 samples, 3.41%)</title><rect x="0.3364%" y="1109" width="3.4133%" height="15" fill="rgb(205,117,38)" fg:x="1204" fg:w="12215"/><text x="0.5864%" y="1119.50">sk-..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (241 samples, 0.07%)</title><rect x="3.7497%" y="1109" width="0.0673%" height="15" fill="rgb(237,72,25)" fg:x="13419" fg:w="241"/><text x="3.9997%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (191 samples, 0.05%)</title><rect x="3.7637%" y="1093" width="0.0534%" height="15" fill="rgb(244,70,9)" fg:x="13469" fg:w="191"/><text x="4.0137%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (130 samples, 0.04%)</title><rect x="3.7807%" y="1077" width="0.0363%" height="15" fill="rgb(217,125,39)" fg:x="13530" fg:w="130"/><text x="4.0307%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (111 samples, 0.03%)</title><rect x="3.7860%" y="1061" width="0.0310%" height="15" fill="rgb(235,36,10)" fg:x="13549" fg:w="111"/><text x="4.0360%" y="1071.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (12,648 samples, 3.53%)</title><rect x="0.2881%" y="1125" width="3.5343%" height="15" fill="rgb(251,123,47)" fg:x="1031" fg:w="12648"/><text x="0.5381%" y="1135.50">sk-..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.01%)</title><rect x="3.8268%" y="1109" width="0.0109%" height="15" fill="rgb(221,13,13)" fg:x="13695" fg:w="39"/><text x="4.0768%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (92 samples, 0.03%)</title><rect x="3.8377%" y="1109" width="0.0257%" height="15" fill="rgb(238,131,9)" fg:x="13734" fg:w="92"/><text x="4.0877%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (197 samples, 0.06%)</title><rect x="3.8634%" y="1109" width="0.0550%" height="15" fill="rgb(211,50,8)" fg:x="13826" fg:w="197"/><text x="4.1134%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (177 samples, 0.05%)</title><rect x="3.8690%" y="1093" width="0.0495%" height="15" fill="rgb(245,182,24)" fg:x="13846" fg:w="177"/><text x="4.1190%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (109 samples, 0.03%)</title><rect x="3.8880%" y="1077" width="0.0305%" height="15" fill="rgb(242,14,37)" fg:x="13914" fg:w="109"/><text x="4.1380%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (95 samples, 0.03%)</title><rect x="3.8919%" y="1061" width="0.0265%" height="15" fill="rgb(246,228,12)" fg:x="13928" fg:w="95"/><text x="4.1419%" y="1071.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (364 samples, 0.10%)</title><rect x="3.8224%" y="1125" width="0.1017%" height="15" fill="rgb(213,55,15)" fg:x="13679" fg:w="364"/><text x="4.0724%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,278 samples, 3.71%)</title><rect x="0.2146%" y="1141" width="3.7103%" height="15" fill="rgb(209,9,3)" fg:x="768" fg:w="13278"/><text x="0.4646%" y="1151.50">sk-g..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.01%)</title><rect x="4.0185%" y="1061" width="0.0101%" height="15" fill="rgb(230,59,30)" fg:x="14381" fg:w="36"/><text x="4.2685%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.01%)</title><rect x="4.1105%" y="997" width="0.0103%" height="15" fill="rgb(209,121,21)" fg:x="14710" fg:w="37"/><text x="4.3605%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (64 samples, 0.02%)</title><rect x="4.1208%" y="997" width="0.0179%" height="15" fill="rgb(220,109,13)" fg:x="14747" fg:w="64"/><text x="4.3708%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (61 samples, 0.02%)</title><rect x="4.1216%" y="981" width="0.0170%" height="15" fill="rgb(232,18,1)" fg:x="14750" fg:w="61"/><text x="4.3716%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (191 samples, 0.05%)</title><rect x="4.0870%" y="1013" width="0.0534%" height="15" fill="rgb(215,41,42)" fg:x="14626" fg:w="191"/><text x="4.3370%" y="1023.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (228 samples, 0.06%)</title><rect x="4.0780%" y="1029" width="0.0637%" height="15" fill="rgb(224,123,36)" fg:x="14594" fg:w="228"/><text x="4.3280%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (58 samples, 0.02%)</title><rect x="4.1574%" y="1013" width="0.0162%" height="15" fill="rgb(240,125,3)" fg:x="14878" fg:w="58"/><text x="4.4074%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (139 samples, 0.04%)</title><rect x="4.1418%" y="1029" width="0.0388%" height="15" fill="rgb(205,98,50)" fg:x="14822" fg:w="139"/><text x="4.3918%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (102 samples, 0.03%)</title><rect x="4.1806%" y="1029" width="0.0285%" height="15" fill="rgb(205,185,37)" fg:x="14961" fg:w="102"/><text x="4.4306%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (95 samples, 0.03%)</title><rect x="4.1825%" y="1013" width="0.0265%" height="15" fill="rgb(238,207,15)" fg:x="14968" fg:w="95"/><text x="4.4325%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (69 samples, 0.02%)</title><rect x="4.1898%" y="997" width="0.0193%" height="15" fill="rgb(213,199,42)" fg:x="14994" fg:w="69"/><text x="4.4398%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (57 samples, 0.02%)</title><rect x="4.1932%" y="981" width="0.0159%" height="15" fill="rgb(235,201,11)" fg:x="15006" fg:w="57"/><text x="4.4432%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (609 samples, 0.17%)</title><rect x="4.0417%" y="1045" width="0.1702%" height="15" fill="rgb(207,46,11)" fg:x="14464" fg:w="609"/><text x="4.2917%" y="1055.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (629 samples, 0.18%)</title><rect x="4.0384%" y="1061" width="0.1758%" height="15" fill="rgb(241,35,35)" fg:x="14452" fg:w="629"/><text x="4.2884%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (71 samples, 0.02%)</title><rect x="4.2141%" y="1061" width="0.0198%" height="15" fill="rgb(243,32,47)" fg:x="15081" fg:w="71"/><text x="4.4641%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (122 samples, 0.03%)</title><rect x="4.2340%" y="1061" width="0.0341%" height="15" fill="rgb(247,202,23)" fg:x="15152" fg:w="122"/><text x="4.4840%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (95 samples, 0.03%)</title><rect x="4.2415%" y="1045" width="0.0265%" height="15" fill="rgb(219,102,11)" fg:x="15179" fg:w="95"/><text x="4.4915%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (63 samples, 0.02%)</title><rect x="4.2504%" y="1029" width="0.0176%" height="15" fill="rgb(243,110,44)" fg:x="15211" fg:w="63"/><text x="4.5004%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.01%)</title><rect x="4.2541%" y="1013" width="0.0140%" height="15" fill="rgb(222,74,54)" fg:x="15224" fg:w="50"/><text x="4.5041%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (968 samples, 0.27%)</title><rect x="4.0001%" y="1077" width="0.2705%" height="15" fill="rgb(216,99,12)" fg:x="14315" fg:w="968"/><text x="4.2501%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (45 samples, 0.01%)</title><rect x="4.2706%" y="1077" width="0.0126%" height="15" fill="rgb(226,22,26)" fg:x="15283" fg:w="45"/><text x="4.5206%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.01%)</title><rect x="4.2728%" y="1061" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="15291" fg:w="37"/><text x="4.5228%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,115 samples, 0.31%)</title><rect x="3.9730%" y="1093" width="0.3116%" height="15" fill="rgb(213,25,53)" fg:x="14218" fg:w="1115"/><text x="4.2230%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,214 samples, 0.34%)</title><rect x="3.9568%" y="1109" width="0.3392%" height="15" fill="rgb(252,105,26)" fg:x="14160" fg:w="1214"/><text x="4.2068%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (75 samples, 0.02%)</title><rect x="4.2960%" y="1109" width="0.0210%" height="15" fill="rgb(220,39,43)" fg:x="15374" fg:w="75"/><text x="4.5460%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (66 samples, 0.02%)</title><rect x="4.2985%" y="1093" width="0.0184%" height="15" fill="rgb(229,68,48)" fg:x="15383" fg:w="66"/><text x="4.5485%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (49 samples, 0.01%)</title><rect x="4.3033%" y="1077" width="0.0137%" height="15" fill="rgb(252,8,32)" fg:x="15400" fg:w="49"/><text x="4.5533%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (38 samples, 0.01%)</title><rect x="4.3063%" y="1061" width="0.0106%" height="15" fill="rgb(223,20,43)" fg:x="15411" fg:w="38"/><text x="4.5563%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,377 samples, 0.38%)</title><rect x="3.9339%" y="1125" width="0.3848%" height="15" fill="rgb(229,81,49)" fg:x="14078" fg:w="1377"/><text x="4.1839%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (44 samples, 0.01%)</title><rect x="4.3186%" y="1125" width="0.0123%" height="15" fill="rgb(236,28,36)" fg:x="15455" fg:w="44"/><text x="4.5686%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.01%)</title><rect x="4.3206%" y="1109" width="0.0103%" height="15" fill="rgb(249,185,26)" fg:x="15462" fg:w="37"/><text x="4.5706%" y="1119.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (1,452 samples, 0.41%)</title><rect x="3.9257%" y="1141" width="0.4057%" height="15" fill="rgb(249,174,33)" fg:x="14049" fg:w="1452"/><text x="4.1757%" y="1151.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (65 samples, 0.02%)</title><rect x="4.3315%" y="1141" width="0.0182%" height="15" fill="rgb(233,201,37)" fg:x="15501" fg:w="65"/><text x="4.5815%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,894 samples, 4.16%)</title><rect x="0.1883%" y="1157" width="4.1619%" height="15" fill="rgb(221,78,26)" fg:x="674" fg:w="14894"/><text x="0.4383%" y="1167.50">sk-ge..</text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.05%)</title><rect x="4.3580%" y="1141" width="0.0495%" height="15" fill="rgb(250,127,30)" fg:x="15596" fg:w="177"/><text x="4.6080%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (50 samples, 0.01%)</title><rect x="4.4315%" y="1109" width="0.0140%" height="15" fill="rgb(230,49,44)" fg:x="15859" fg:w="50"/><text x="4.6815%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (136 samples, 0.04%)</title><rect x="4.4628%" y="1093" width="0.0380%" height="15" fill="rgb(229,67,23)" fg:x="15971" fg:w="136"/><text x="4.7128%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (149 samples, 0.04%)</title><rect x="4.5008%" y="1093" width="0.0416%" height="15" fill="rgb(249,83,47)" fg:x="16107" fg:w="149"/><text x="4.7508%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (79 samples, 0.02%)</title><rect x="4.5821%" y="1077" width="0.0221%" height="15" fill="rgb(215,43,3)" fg:x="16398" fg:w="79"/><text x="4.8321%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.01%)</title><rect x="4.5908%" y="1061" width="0.0134%" height="15" fill="rgb(238,154,13)" fg:x="16429" fg:w="48"/><text x="4.8408%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (197 samples, 0.06%)</title><rect x="4.5542%" y="1093" width="0.0550%" height="15" fill="rgb(219,56,2)" fg:x="16298" fg:w="197"/><text x="4.8042%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (139 samples, 0.04%)</title><rect x="4.6372%" y="1077" width="0.0388%" height="15" fill="rgb(233,0,4)" fg:x="16595" fg:w="139"/><text x="4.8872%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (251 samples, 0.07%)</title><rect x="4.6760%" y="1077" width="0.0701%" height="15" fill="rgb(235,30,7)" fg:x="16734" fg:w="251"/><text x="4.9260%" y="1087.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (48 samples, 0.01%)</title><rect x="4.7545%" y="1077" width="0.0134%" height="15" fill="rgb(250,79,13)" fg:x="17015" fg:w="48"/><text x="5.0045%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (243 samples, 0.07%)</title><rect x="4.8107%" y="1061" width="0.0679%" height="15" fill="rgb(211,146,34)" fg:x="17216" fg:w="243"/><text x="5.0607%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (196 samples, 0.05%)</title><rect x="4.8238%" y="1045" width="0.0548%" height="15" fill="rgb(228,22,38)" fg:x="17263" fg:w="196"/><text x="5.0738%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (62 samples, 0.02%)</title><rect x="4.8613%" y="1029" width="0.0173%" height="15" fill="rgb(235,168,5)" fg:x="17397" fg:w="62"/><text x="5.1113%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (412 samples, 0.12%)</title><rect x="4.7694%" y="1077" width="0.1151%" height="15" fill="rgb(221,155,16)" fg:x="17068" fg:w="412"/><text x="5.0194%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (226 samples, 0.06%)</title><rect x="4.9158%" y="1061" width="0.0632%" height="15" fill="rgb(215,215,53)" fg:x="17592" fg:w="226"/><text x="5.1658%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (297 samples, 0.08%)</title><rect x="4.9789%" y="1061" width="0.0830%" height="15" fill="rgb(223,4,10)" fg:x="17818" fg:w="297"/><text x="5.2289%" y="1071.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (75 samples, 0.02%)</title><rect x="5.0725%" y="1061" width="0.0210%" height="15" fill="rgb(234,103,6)" fg:x="18153" fg:w="75"/><text x="5.3225%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (57 samples, 0.02%)</title><rect x="5.2352%" y="1013" width="0.0159%" height="15" fill="rgb(227,97,0)" fg:x="18735" fg:w="57"/><text x="5.4852%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (414 samples, 0.12%)</title><rect x="5.1497%" y="1045" width="0.1157%" height="15" fill="rgb(234,150,53)" fg:x="18429" fg:w="414"/><text x="5.3997%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (276 samples, 0.08%)</title><rect x="5.1882%" y="1029" width="0.0771%" height="15" fill="rgb(228,201,54)" fg:x="18567" fg:w="276"/><text x="5.4382%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (51 samples, 0.01%)</title><rect x="5.2511%" y="1013" width="0.0143%" height="15" fill="rgb(222,22,37)" fg:x="18792" fg:w="51"/><text x="5.5011%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (696 samples, 0.19%)</title><rect x="5.0949%" y="1061" width="0.1945%" height="15" fill="rgb(237,53,32)" fg:x="18233" fg:w="696"/><text x="5.3449%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (66 samples, 0.02%)</title><rect x="5.2709%" y="1045" width="0.0184%" height="15" fill="rgb(233,25,53)" fg:x="18863" fg:w="66"/><text x="5.5209%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (86 samples, 0.02%)</title><rect x="5.3073%" y="1029" width="0.0240%" height="15" fill="rgb(210,40,34)" fg:x="18993" fg:w="86"/><text x="5.5573%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (42 samples, 0.01%)</title><rect x="5.3414%" y="1013" width="0.0117%" height="15" fill="rgb(241,220,44)" fg:x="19115" fg:w="42"/><text x="5.5914%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (64 samples, 0.02%)</title><rect x="5.3369%" y="1029" width="0.0179%" height="15" fill="rgb(235,28,35)" fg:x="19099" fg:w="64"/><text x="5.5869%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (240 samples, 0.07%)</title><rect x="5.2894%" y="1061" width="0.0671%" height="15" fill="rgb(210,56,17)" fg:x="18929" fg:w="240"/><text x="5.5394%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (185 samples, 0.05%)</title><rect x="5.3047%" y="1045" width="0.0517%" height="15" fill="rgb(224,130,29)" fg:x="18984" fg:w="185"/><text x="5.5547%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (60 samples, 0.02%)</title><rect x="5.3858%" y="1045" width="0.0168%" height="15" fill="rgb(235,212,8)" fg:x="19274" fg:w="60"/><text x="5.6358%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (421 samples, 0.12%)</title><rect x="5.4026%" y="1045" width="0.1176%" height="15" fill="rgb(223,33,50)" fg:x="19334" fg:w="421"/><text x="5.6526%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (37 samples, 0.01%)</title><rect x="5.5275%" y="1045" width="0.0103%" height="15" fill="rgb(219,149,13)" fg:x="19781" fg:w="37"/><text x="5.7775%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (346 samples, 0.10%)</title><rect x="5.5940%" y="1029" width="0.0967%" height="15" fill="rgb(250,156,29)" fg:x="20019" fg:w="346"/><text x="5.8440%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (252 samples, 0.07%)</title><rect x="5.6202%" y="1013" width="0.0704%" height="15" fill="rgb(216,193,19)" fg:x="20113" fg:w="252"/><text x="5.8702%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (82 samples, 0.02%)</title><rect x="5.6677%" y="997" width="0.0229%" height="15" fill="rgb(216,135,14)" fg:x="20283" fg:w="82"/><text x="5.9177%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (590 samples, 0.16%)</title><rect x="5.5437%" y="1045" width="0.1649%" height="15" fill="rgb(241,47,5)" fg:x="19839" fg:w="590"/><text x="5.7937%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.01%)</title><rect x="5.6957%" y="1029" width="0.0129%" height="15" fill="rgb(233,42,35)" fg:x="20383" fg:w="46"/><text x="5.9457%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (76 samples, 0.02%)</title><rect x="5.7384%" y="1029" width="0.0212%" height="15" fill="rgb(231,13,6)" fg:x="20536" fg:w="76"/><text x="5.9884%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.02%)</title><rect x="5.7728%" y="1013" width="0.0168%" height="15" fill="rgb(207,181,40)" fg:x="20659" fg:w="60"/><text x="6.0228%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.01%)</title><rect x="5.7784%" y="997" width="0.0112%" height="15" fill="rgb(254,173,49)" fg:x="20679" fg:w="40"/><text x="6.0284%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (109 samples, 0.03%)</title><rect x="5.7644%" y="1029" width="0.0305%" height="15" fill="rgb(221,1,38)" fg:x="20629" fg:w="109"/><text x="6.0144%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (156 samples, 0.04%)</title><rect x="5.7977%" y="1013" width="0.0436%" height="15" fill="rgb(206,124,46)" fg:x="20748" fg:w="156"/><text x="6.0477%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (39 samples, 0.01%)</title><rect x="5.8413%" y="1013" width="0.0109%" height="15" fill="rgb(249,21,11)" fg:x="20904" fg:w="39"/><text x="6.0913%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (65 samples, 0.02%)</title><rect x="5.8522%" y="1013" width="0.0182%" height="15" fill="rgb(222,201,40)" fg:x="20943" fg:w="65"/><text x="6.1022%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (44 samples, 0.01%)</title><rect x="5.8720%" y="1013" width="0.0123%" height="15" fill="rgb(235,61,29)" fg:x="21014" fg:w="44"/><text x="6.1220%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (56 samples, 0.02%)</title><rect x="5.8946%" y="997" width="0.0156%" height="15" fill="rgb(219,207,3)" fg:x="21095" fg:w="56"/><text x="6.1446%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (439 samples, 0.12%)</title><rect x="5.9103%" y="997" width="0.1227%" height="15" fill="rgb(222,56,46)" fg:x="21151" fg:w="439"/><text x="6.1603%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (81 samples, 0.02%)</title><rect x="6.0402%" y="997" width="0.0226%" height="15" fill="rgb(239,76,54)" fg:x="21616" fg:w="81"/><text x="6.2902%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (185 samples, 0.05%)</title><rect x="6.1053%" y="981" width="0.0517%" height="15" fill="rgb(231,124,27)" fg:x="21849" fg:w="185"/><text x="6.3553%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (140 samples, 0.04%)</title><rect x="6.1179%" y="965" width="0.0391%" height="15" fill="rgb(249,195,6)" fg:x="21894" fg:w="140"/><text x="6.3679%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (368 samples, 0.10%)</title><rect x="6.0673%" y="997" width="0.1028%" height="15" fill="rgb(237,174,47)" fg:x="21713" fg:w="368"/><text x="6.3173%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.01%)</title><rect x="6.1595%" y="981" width="0.0106%" height="15" fill="rgb(206,201,31)" fg:x="22043" fg:w="38"/><text x="6.4095%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (70 samples, 0.02%)</title><rect x="6.2006%" y="981" width="0.0196%" height="15" fill="rgb(231,57,52)" fg:x="22190" fg:w="70"/><text x="6.4506%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (93 samples, 0.03%)</title><rect x="6.2202%" y="981" width="0.0260%" height="15" fill="rgb(248,177,22)" fg:x="22260" fg:w="93"/><text x="6.4702%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (155 samples, 0.04%)</title><rect x="6.2766%" y="965" width="0.0433%" height="15" fill="rgb(215,211,37)" fg:x="22462" fg:w="155"/><text x="6.5266%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (112 samples, 0.03%)</title><rect x="6.2886%" y="949" width="0.0313%" height="15" fill="rgb(241,128,51)" fg:x="22505" fg:w="112"/><text x="6.5386%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (249 samples, 0.07%)</title><rect x="6.2593%" y="981" width="0.0696%" height="15" fill="rgb(227,165,31)" fg:x="22400" fg:w="249"/><text x="6.5093%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (116 samples, 0.03%)</title><rect x="6.3470%" y="965" width="0.0324%" height="15" fill="rgb(228,167,24)" fg:x="22714" fg:w="116"/><text x="6.5970%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (67 samples, 0.02%)</title><rect x="6.3794%" y="965" width="0.0187%" height="15" fill="rgb(228,143,12)" fg:x="22830" fg:w="67"/><text x="6.6294%" y="975.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (58 samples, 0.02%)</title><rect x="6.4032%" y="965" width="0.0162%" height="15" fill="rgb(249,149,8)" fg:x="22915" fg:w="58"/><text x="6.6532%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (317 samples, 0.09%)</title><rect x="6.4437%" y="949" width="0.0886%" height="15" fill="rgb(243,35,44)" fg:x="23060" fg:w="317"/><text x="6.6937%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (63 samples, 0.02%)</title><rect x="6.5373%" y="949" width="0.0176%" height="15" fill="rgb(246,89,9)" fg:x="23395" fg:w="63"/><text x="6.7873%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (257 samples, 0.07%)</title><rect x="6.5865%" y="933" width="0.0718%" height="15" fill="rgb(233,213,13)" fg:x="23571" fg:w="257"/><text x="6.8365%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (165 samples, 0.05%)</title><rect x="6.6122%" y="917" width="0.0461%" height="15" fill="rgb(233,141,41)" fg:x="23663" fg:w="165"/><text x="6.8622%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (428 samples, 0.12%)</title><rect x="6.5572%" y="949" width="0.1196%" height="15" fill="rgb(239,167,4)" fg:x="23466" fg:w="428"/><text x="6.8072%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (52 samples, 0.01%)</title><rect x="6.6622%" y="933" width="0.0145%" height="15" fill="rgb(209,217,16)" fg:x="23842" fg:w="52"/><text x="6.9122%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (925 samples, 0.26%)</title><rect x="6.4292%" y="965" width="0.2585%" height="15" fill="rgb(219,88,35)" fg:x="23008" fg:w="925"/><text x="6.6792%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (39 samples, 0.01%)</title><rect x="6.6768%" y="949" width="0.0109%" height="15" fill="rgb(220,193,23)" fg:x="23894" fg:w="39"/><text x="6.9268%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,286 samples, 0.36%)</title><rect x="6.3289%" y="981" width="0.3594%" height="15" fill="rgb(230,90,52)" fg:x="22649" fg:w="1286"/><text x="6.5789%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (74 samples, 0.02%)</title><rect x="6.6977%" y="965" width="0.0207%" height="15" fill="rgb(252,106,19)" fg:x="23969" fg:w="74"/><text x="6.9477%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (107 samples, 0.03%)</title><rect x="6.7273%" y="949" width="0.0299%" height="15" fill="rgb(206,74,20)" fg:x="24075" fg:w="107"/><text x="6.9773%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (74 samples, 0.02%)</title><rect x="6.7366%" y="933" width="0.0207%" height="15" fill="rgb(230,138,44)" fg:x="24108" fg:w="74"/><text x="6.9866%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (43 samples, 0.01%)</title><rect x="6.7452%" y="917" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="24139" fg:w="43"/><text x="6.9952%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (149 samples, 0.04%)</title><rect x="6.7204%" y="965" width="0.0416%" height="15" fill="rgb(242,16,51)" fg:x="24050" fg:w="149"/><text x="6.9704%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,147 samples, 0.88%)</title><rect x="5.8843%" y="1013" width="0.8794%" height="15" fill="rgb(248,9,4)" fg:x="21058" fg:w="3147"/><text x="6.1343%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,116 samples, 0.59%)</title><rect x="6.1724%" y="997" width="0.5913%" height="15" fill="rgb(210,31,22)" fg:x="22089" fg:w="2116"/><text x="6.4224%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (260 samples, 0.07%)</title><rect x="6.6910%" y="981" width="0.0727%" height="15" fill="rgb(239,54,39)" fg:x="23945" fg:w="260"/><text x="6.9410%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,469 samples, 0.97%)</title><rect x="5.7949%" y="1029" width="0.9694%" height="15" fill="rgb(230,99,41)" fg:x="20738" fg:w="3469"/><text x="6.0449%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,255 samples, 2.31%)</title><rect x="4.4597%" y="1109" width="2.3067%" height="15" fill="rgb(253,106,12)" fg:x="15960" fg:w="8255"/><text x="4.7097%" y="1119.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,720 samples, 2.16%)</title><rect x="4.6092%" y="1093" width="2.1572%" height="15" fill="rgb(213,46,41)" fg:x="16495" fg:w="7720"/><text x="4.8592%" y="1103.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,735 samples, 1.88%)</title><rect x="4.8845%" y="1077" width="1.8820%" height="15" fill="rgb(215,133,35)" fg:x="17480" fg:w="6735"/><text x="5.1345%" y="1087.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,044 samples, 1.41%)</title><rect x="5.3570%" y="1061" width="1.4095%" height="15" fill="rgb(213,28,5)" fg:x="19171" fg:w="5044"/><text x="5.6070%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,783 samples, 1.06%)</title><rect x="5.7094%" y="1045" width="1.0571%" height="15" fill="rgb(215,77,49)" fg:x="20432" fg:w="3783"/><text x="5.9594%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,372 samples, 2.34%)</title><rect x="4.4284%" y="1125" width="2.3394%" height="15" fill="rgb(248,100,22)" fg:x="15848" fg:w="8372"/><text x="4.6784%" y="1135.50">s..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (187 samples, 0.05%)</title><rect x="6.7866%" y="1109" width="0.0523%" height="15" fill="rgb(208,67,9)" fg:x="24287" fg:w="187"/><text x="7.0366%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (238 samples, 0.07%)</title><rect x="6.8436%" y="1109" width="0.0665%" height="15" fill="rgb(219,133,21)" fg:x="24491" fg:w="238"/><text x="7.0936%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.01%)</title><rect x="6.9101%" y="1109" width="0.0145%" height="15" fill="rgb(246,46,29)" fg:x="24729" fg:w="52"/><text x="7.1601%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (127 samples, 0.04%)</title><rect x="6.9598%" y="1093" width="0.0355%" height="15" fill="rgb(246,185,52)" fg:x="24907" fg:w="127"/><text x="7.2098%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (179 samples, 0.05%)</title><rect x="6.9992%" y="1093" width="0.0500%" height="15" fill="rgb(252,136,11)" fg:x="25048" fg:w="179"/><text x="7.2492%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (55 samples, 0.02%)</title><rect x="7.1205%" y="1029" width="0.0154%" height="15" fill="rgb(219,138,53)" fg:x="25482" fg:w="55"/><text x="7.3705%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (271 samples, 0.08%)</title><rect x="7.0987%" y="1061" width="0.0757%" height="15" fill="rgb(211,51,23)" fg:x="25404" fg:w="271"/><text x="7.3487%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (233 samples, 0.07%)</title><rect x="7.1093%" y="1045" width="0.0651%" height="15" fill="rgb(247,221,28)" fg:x="25442" fg:w="233"/><text x="7.3593%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (138 samples, 0.04%)</title><rect x="7.1359%" y="1029" width="0.0386%" height="15" fill="rgb(251,222,45)" fg:x="25537" fg:w="138"/><text x="7.3859%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (351 samples, 0.10%)</title><rect x="7.0825%" y="1077" width="0.0981%" height="15" fill="rgb(217,162,53)" fg:x="25346" fg:w="351"/><text x="7.3325%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (486 samples, 0.14%)</title><rect x="7.0506%" y="1093" width="0.1358%" height="15" fill="rgb(229,93,14)" fg:x="25232" fg:w="486"/><text x="7.3006%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (939 samples, 0.26%)</title><rect x="6.9319%" y="1109" width="0.2624%" height="15" fill="rgb(209,67,49)" fg:x="24807" fg:w="939"/><text x="7.1819%" y="1119.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (41 samples, 0.01%)</title><rect x="7.1943%" y="1109" width="0.0115%" height="15" fill="rgb(213,87,29)" fg:x="25746" fg:w="41"/><text x="7.4443%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (88 samples, 0.02%)</title><rect x="7.2219%" y="1109" width="0.0246%" height="15" fill="rgb(205,151,52)" fg:x="25845" fg:w="88"/><text x="7.4719%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (154 samples, 0.04%)</title><rect x="7.2683%" y="1093" width="0.0430%" height="15" fill="rgb(253,215,39)" fg:x="26011" fg:w="154"/><text x="7.5183%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (65 samples, 0.02%)</title><rect x="7.3114%" y="1093" width="0.0182%" height="15" fill="rgb(221,220,41)" fg:x="26165" fg:w="65"/><text x="7.5614%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (54 samples, 0.02%)</title><rect x="7.4041%" y="1029" width="0.0151%" height="15" fill="rgb(218,133,21)" fg:x="26497" fg:w="54"/><text x="7.6541%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (188 samples, 0.05%)</title><rect x="7.3921%" y="1061" width="0.0525%" height="15" fill="rgb(221,193,43)" fg:x="26454" fg:w="188"/><text x="7.6421%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (167 samples, 0.05%)</title><rect x="7.3980%" y="1045" width="0.0467%" height="15" fill="rgb(240,128,52)" fg:x="26475" fg:w="167"/><text x="7.6480%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (91 samples, 0.03%)</title><rect x="7.4192%" y="1029" width="0.0254%" height="15" fill="rgb(253,114,12)" fg:x="26551" fg:w="91"/><text x="7.6692%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (258 samples, 0.07%)</title><rect x="7.3798%" y="1077" width="0.0721%" height="15" fill="rgb(215,223,47)" fg:x="26410" fg:w="258"/><text x="7.6298%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (411 samples, 0.11%)</title><rect x="7.3435%" y="1093" width="0.1148%" height="15" fill="rgb(248,225,23)" fg:x="26280" fg:w="411"/><text x="7.5935%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (75 samples, 0.02%)</title><rect x="7.4737%" y="1077" width="0.0210%" height="15" fill="rgb(250,108,0)" fg:x="26746" fg:w="75"/><text x="7.7237%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (112 samples, 0.03%)</title><rect x="7.4947%" y="1077" width="0.0313%" height="15" fill="rgb(228,208,7)" fg:x="26821" fg:w="112"/><text x="7.7447%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.03%)</title><rect x="7.5260%" y="1077" width="0.0257%" height="15" fill="rgb(244,45,10)" fg:x="26933" fg:w="92"/><text x="7.7760%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (44 samples, 0.01%)</title><rect x="7.5592%" y="1077" width="0.0123%" height="15" fill="rgb(207,125,25)" fg:x="27052" fg:w="44"/><text x="7.8092%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (108 samples, 0.03%)</title><rect x="7.5888%" y="1061" width="0.0302%" height="15" fill="rgb(210,195,18)" fg:x="27158" fg:w="108"/><text x="7.8388%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (70 samples, 0.02%)</title><rect x="7.6190%" y="1061" width="0.0196%" height="15" fill="rgb(249,80,12)" fg:x="27266" fg:w="70"/><text x="7.8690%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (38 samples, 0.01%)</title><rect x="7.7355%" y="997" width="0.0106%" height="15" fill="rgb(221,65,9)" fg:x="27683" fg:w="38"/><text x="7.9855%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (156 samples, 0.04%)</title><rect x="7.7252%" y="1029" width="0.0436%" height="15" fill="rgb(235,49,36)" fg:x="27646" fg:w="156"/><text x="7.9752%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (133 samples, 0.04%)</title><rect x="7.7316%" y="1013" width="0.0372%" height="15" fill="rgb(225,32,20)" fg:x="27669" fg:w="133"/><text x="7.9816%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (81 samples, 0.02%)</title><rect x="7.7462%" y="997" width="0.0226%" height="15" fill="rgb(215,141,46)" fg:x="27721" fg:w="81"/><text x="7.9962%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (257 samples, 0.07%)</title><rect x="7.7059%" y="1045" width="0.0718%" height="15" fill="rgb(250,160,47)" fg:x="27577" fg:w="257"/><text x="7.9559%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (470 samples, 0.13%)</title><rect x="7.6559%" y="1061" width="0.1313%" height="15" fill="rgb(216,222,40)" fg:x="27398" fg:w="470"/><text x="7.9059%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.01%)</title><rect x="7.8149%" y="1045" width="0.0137%" height="15" fill="rgb(234,217,39)" fg:x="27967" fg:w="49"/><text x="8.0649%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.01%)</title><rect x="7.8286%" y="1045" width="0.0137%" height="15" fill="rgb(207,178,40)" fg:x="28016" fg:w="49"/><text x="8.0786%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.04%)</title><rect x="7.8423%" y="1045" width="0.0400%" height="15" fill="rgb(221,136,13)" fg:x="28065" fg:w="143"/><text x="8.0923%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (66 samples, 0.02%)</title><rect x="7.9144%" y="1029" width="0.0184%" height="15" fill="rgb(249,199,10)" fg:x="28323" fg:w="66"/><text x="8.1644%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (202 samples, 0.06%)</title><rect x="7.9848%" y="997" width="0.0564%" height="15" fill="rgb(249,222,13)" fg:x="28575" fg:w="202"/><text x="8.2348%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (150 samples, 0.04%)</title><rect x="7.9993%" y="981" width="0.0419%" height="15" fill="rgb(244,185,38)" fg:x="28627" fg:w="150"/><text x="8.2493%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (78 samples, 0.02%)</title><rect x="8.0194%" y="965" width="0.0218%" height="15" fill="rgb(236,202,9)" fg:x="28699" fg:w="78"/><text x="8.2694%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (257 samples, 0.07%)</title><rect x="7.9742%" y="1013" width="0.0718%" height="15" fill="rgb(250,229,37)" fg:x="28537" fg:w="257"/><text x="8.2242%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (347 samples, 0.10%)</title><rect x="7.9515%" y="1029" width="0.0970%" height="15" fill="rgb(206,174,23)" fg:x="28456" fg:w="347"/><text x="8.2015%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (143 samples, 0.04%)</title><rect x="8.0831%" y="1013" width="0.0400%" height="15" fill="rgb(211,33,43)" fg:x="28927" fg:w="143"/><text x="8.3331%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (206 samples, 0.06%)</title><rect x="8.1290%" y="1013" width="0.0576%" height="15" fill="rgb(245,58,50)" fg:x="29091" fg:w="206"/><text x="8.3790%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (218 samples, 0.06%)</title><rect x="8.1865%" y="1013" width="0.0609%" height="15" fill="rgb(244,68,36)" fg:x="29297" fg:w="218"/><text x="8.4365%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (62 samples, 0.02%)</title><rect x="8.2609%" y="1013" width="0.0173%" height="15" fill="rgb(232,229,15)" fg:x="29563" fg:w="62"/><text x="8.5109%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 0.02%)</title><rect x="8.3045%" y="997" width="0.0224%" height="15" fill="rgb(254,30,23)" fg:x="29719" fg:w="80"/><text x="8.5545%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (202 samples, 0.06%)</title><rect x="8.3268%" y="997" width="0.0564%" height="15" fill="rgb(235,160,14)" fg:x="29799" fg:w="202"/><text x="8.5768%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (117 samples, 0.03%)</title><rect x="8.3833%" y="997" width="0.0327%" height="15" fill="rgb(212,155,44)" fg:x="30001" fg:w="117"/><text x="8.6333%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (108 samples, 0.03%)</title><rect x="8.4160%" y="997" width="0.0302%" height="15" fill="rgb(226,2,50)" fg:x="30118" fg:w="108"/><text x="8.6660%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (46 samples, 0.01%)</title><rect x="8.4559%" y="997" width="0.0129%" height="15" fill="rgb(234,177,6)" fg:x="30261" fg:w="46"/><text x="8.7059%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (261 samples, 0.07%)</title><rect x="8.6185%" y="933" width="0.0729%" height="15" fill="rgb(217,24,9)" fg:x="30843" fg:w="261"/><text x="8.8685%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (534 samples, 0.15%)</title><rect x="8.5909%" y="965" width="0.1492%" height="15" fill="rgb(220,13,46)" fg:x="30744" fg:w="534"/><text x="8.8409%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (474 samples, 0.13%)</title><rect x="8.6076%" y="949" width="0.1325%" height="15" fill="rgb(239,221,27)" fg:x="30804" fg:w="474"/><text x="8.8576%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (174 samples, 0.05%)</title><rect x="8.6915%" y="933" width="0.0486%" height="15" fill="rgb(222,198,25)" fg:x="31104" fg:w="174"/><text x="8.9415%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (677 samples, 0.19%)</title><rect x="8.5643%" y="981" width="0.1892%" height="15" fill="rgb(211,99,13)" fg:x="30649" fg:w="677"/><text x="8.8143%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (45 samples, 0.01%)</title><rect x="8.7409%" y="965" width="0.0126%" height="15" fill="rgb(232,111,31)" fg:x="31281" fg:w="45"/><text x="8.9909%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,033 samples, 0.29%)</title><rect x="8.4766%" y="997" width="0.2887%" height="15" fill="rgb(245,82,37)" fg:x="30335" fg:w="1033"/><text x="8.7266%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (42 samples, 0.01%)</title><rect x="8.7535%" y="981" width="0.0117%" height="15" fill="rgb(227,149,46)" fg:x="31326" fg:w="42"/><text x="9.0035%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (60 samples, 0.02%)</title><rect x="8.7652%" y="997" width="0.0168%" height="15" fill="rgb(218,36,50)" fg:x="31368" fg:w="60"/><text x="9.0152%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.01%)</title><rect x="8.8133%" y="981" width="0.0120%" height="15" fill="rgb(226,80,48)" fg:x="31540" fg:w="43"/><text x="9.0633%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (331 samples, 0.09%)</title><rect x="8.8253%" y="981" width="0.0925%" height="15" fill="rgb(238,224,15)" fg:x="31583" fg:w="331"/><text x="9.0753%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.01%)</title><rect x="8.9178%" y="981" width="0.0103%" height="15" fill="rgb(241,136,10)" fg:x="31914" fg:w="37"/><text x="9.1678%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.02%)</title><rect x="8.9282%" y="981" width="0.0201%" height="15" fill="rgb(208,32,45)" fg:x="31951" fg:w="72"/><text x="9.1782%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (41 samples, 0.01%)</title><rect x="8.9511%" y="981" width="0.0115%" height="15" fill="rgb(207,135,9)" fg:x="32033" fg:w="41"/><text x="9.2011%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.01%)</title><rect x="8.9840%" y="965" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="32151" fg:w="37"/><text x="9.2340%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.02%)</title><rect x="9.0005%" y="965" width="0.0165%" height="15" fill="rgb(245,177,15)" fg:x="32210" fg:w="59"/><text x="9.2505%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (144 samples, 0.04%)</title><rect x="9.0391%" y="933" width="0.0402%" height="15" fill="rgb(206,64,50)" fg:x="32348" fg:w="144"/><text x="9.2891%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 0.04%)</title><rect x="9.0416%" y="917" width="0.0377%" height="15" fill="rgb(234,36,40)" fg:x="32357" fg:w="135"/><text x="9.2916%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (99 samples, 0.03%)</title><rect x="9.0517%" y="901" width="0.0277%" height="15" fill="rgb(213,64,8)" fg:x="32393" fg:w="99"/><text x="9.3017%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (171 samples, 0.05%)</title><rect x="9.0335%" y="949" width="0.0478%" height="15" fill="rgb(210,75,36)" fg:x="32328" fg:w="171"/><text x="9.2835%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (221 samples, 0.06%)</title><rect x="9.0209%" y="965" width="0.0618%" height="15" fill="rgb(229,88,21)" fg:x="32283" fg:w="221"/><text x="9.2709%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (489 samples, 0.14%)</title><rect x="8.9698%" y="981" width="0.1366%" height="15" fill="rgb(252,204,47)" fg:x="32100" fg:w="489"/><text x="9.2198%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (81 samples, 0.02%)</title><rect x="9.0838%" y="965" width="0.0226%" height="15" fill="rgb(208,77,27)" fg:x="32508" fg:w="81"/><text x="9.3338%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (62 samples, 0.02%)</title><rect x="9.0891%" y="949" width="0.0173%" height="15" fill="rgb(221,76,26)" fg:x="32527" fg:w="62"/><text x="9.3391%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (92 samples, 0.03%)</title><rect x="9.1226%" y="965" width="0.0257%" height="15" fill="rgb(225,139,18)" fg:x="32647" fg:w="92"/><text x="9.3726%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (317 samples, 0.09%)</title><rect x="9.1483%" y="965" width="0.0886%" height="15" fill="rgb(230,137,11)" fg:x="32739" fg:w="317"/><text x="9.3983%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.05%)</title><rect x="9.2369%" y="965" width="0.0464%" height="15" fill="rgb(212,28,1)" fg:x="33056" fg:w="166"/><text x="9.4869%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (57 samples, 0.02%)</title><rect x="9.2942%" y="965" width="0.0159%" height="15" fill="rgb(248,164,17)" fg:x="33261" fg:w="57"/><text x="9.5442%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.02%)</title><rect x="9.3347%" y="949" width="0.0156%" height="15" fill="rgb(222,171,42)" fg:x="33406" fg:w="56"/><text x="9.5847%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (168 samples, 0.05%)</title><rect x="9.3504%" y="949" width="0.0469%" height="15" fill="rgb(243,84,45)" fg:x="33462" fg:w="168"/><text x="9.6004%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (241 samples, 0.07%)</title><rect x="9.3973%" y="949" width="0.0673%" height="15" fill="rgb(252,49,23)" fg:x="33630" fg:w="241"/><text x="9.6473%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (143 samples, 0.04%)</title><rect x="9.4647%" y="949" width="0.0400%" height="15" fill="rgb(215,19,7)" fg:x="33871" fg:w="143"/><text x="9.7147%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (56 samples, 0.02%)</title><rect x="9.5155%" y="949" width="0.0156%" height="15" fill="rgb(238,81,41)" fg:x="34053" fg:w="56"/><text x="9.7655%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (60 samples, 0.02%)</title><rect x="9.6675%" y="885" width="0.0168%" height="15" fill="rgb(210,199,37)" fg:x="34597" fg:w="60"/><text x="9.9175%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (173 samples, 0.05%)</title><rect x="9.6508%" y="917" width="0.0483%" height="15" fill="rgb(244,192,49)" fg:x="34537" fg:w="173"/><text x="9.9008%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (137 samples, 0.04%)</title><rect x="9.6608%" y="901" width="0.0383%" height="15" fill="rgb(226,211,11)" fg:x="34573" fg:w="137"/><text x="9.9108%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (53 samples, 0.01%)</title><rect x="9.6843%" y="885" width="0.0148%" height="15" fill="rgb(236,162,54)" fg:x="34657" fg:w="53"/><text x="9.9343%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (332 samples, 0.09%)</title><rect x="9.6231%" y="933" width="0.0928%" height="15" fill="rgb(220,229,9)" fg:x="34438" fg:w="332"/><text x="9.8731%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (54 samples, 0.02%)</title><rect x="9.7008%" y="917" width="0.0151%" height="15" fill="rgb(250,87,22)" fg:x="34716" fg:w="54"/><text x="9.9508%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (684 samples, 0.19%)</title><rect x="9.5362%" y="949" width="0.1911%" height="15" fill="rgb(239,43,17)" fg:x="34127" fg:w="684"/><text x="9.7862%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (41 samples, 0.01%)</title><rect x="9.7159%" y="933" width="0.0115%" height="15" fill="rgb(231,177,25)" fg:x="34770" fg:w="41"/><text x="9.9659%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (85 samples, 0.02%)</title><rect x="9.7855%" y="933" width="0.0238%" height="15" fill="rgb(219,179,1)" fg:x="35019" fg:w="85"/><text x="10.0355%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (140 samples, 0.04%)</title><rect x="9.8092%" y="933" width="0.0391%" height="15" fill="rgb(238,219,53)" fg:x="35104" fg:w="140"/><text x="10.0592%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.02%)</title><rect x="9.8483%" y="933" width="0.0215%" height="15" fill="rgb(232,167,36)" fg:x="35244" fg:w="77"/><text x="10.0983%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.04%)</title><rect x="9.8698%" y="933" width="0.0369%" height="15" fill="rgb(244,19,51)" fg:x="35321" fg:w="132"/><text x="10.1198%" y="943.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (68 samples, 0.02%)</title><rect x="9.9104%" y="933" width="0.0190%" height="15" fill="rgb(224,6,22)" fg:x="35466" fg:w="68"/><text x="10.1604%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (48 samples, 0.01%)</title><rect x="9.9159%" y="917" width="0.0134%" height="15" fill="rgb(224,145,5)" fg:x="35486" fg:w="48"/><text x="10.1659%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (44 samples, 0.01%)</title><rect x="9.9570%" y="917" width="0.0123%" height="15" fill="rgb(234,130,49)" fg:x="35633" fg:w="44"/><text x="10.2070%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (91 samples, 0.03%)</title><rect x="10.0283%" y="853" width="0.0254%" height="15" fill="rgb(254,6,2)" fg:x="35888" fg:w="91"/><text x="10.2783%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (257 samples, 0.07%)</title><rect x="10.0062%" y="885" width="0.0718%" height="15" fill="rgb(208,96,46)" fg:x="35809" fg:w="257"/><text x="10.2562%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (209 samples, 0.06%)</title><rect x="10.0196%" y="869" width="0.0584%" height="15" fill="rgb(239,3,39)" fg:x="35857" fg:w="209"/><text x="10.2696%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (87 samples, 0.02%)</title><rect x="10.0537%" y="853" width="0.0243%" height="15" fill="rgb(233,210,1)" fg:x="35979" fg:w="87"/><text x="10.3037%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (289 samples, 0.08%)</title><rect x="9.9992%" y="901" width="0.0808%" height="15" fill="rgb(244,137,37)" fg:x="35784" fg:w="289"/><text x="10.2492%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (346 samples, 0.10%)</title><rect x="9.9841%" y="917" width="0.0967%" height="15" fill="rgb(240,136,2)" fg:x="35730" fg:w="346"/><text x="10.2341%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.01%)</title><rect x="10.1138%" y="901" width="0.0123%" height="15" fill="rgb(239,18,37)" fg:x="36194" fg:w="44"/><text x="10.3638%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (101 samples, 0.03%)</title><rect x="10.1755%" y="853" width="0.0282%" height="15" fill="rgb(218,185,22)" fg:x="36415" fg:w="101"/><text x="10.4255%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (85 samples, 0.02%)</title><rect x="10.1800%" y="837" width="0.0238%" height="15" fill="rgb(225,218,4)" fg:x="36431" fg:w="85"/><text x="10.4300%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (53 samples, 0.01%)</title><rect x="10.1890%" y="821" width="0.0148%" height="15" fill="rgb(230,182,32)" fg:x="36463" fg:w="53"/><text x="10.4390%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (125 samples, 0.03%)</title><rect x="10.1708%" y="869" width="0.0349%" height="15" fill="rgb(242,56,43)" fg:x="36398" fg:w="125"/><text x="10.4208%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (167 samples, 0.05%)</title><rect x="10.1607%" y="885" width="0.0467%" height="15" fill="rgb(233,99,24)" fg:x="36362" fg:w="167"/><text x="10.4107%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (558 samples, 0.16%)</title><rect x="10.1314%" y="901" width="0.1559%" height="15" fill="rgb(234,209,42)" fg:x="36257" fg:w="558"/><text x="10.3814%" y="911.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (281 samples, 0.08%)</title><rect x="10.2088%" y="885" width="0.0785%" height="15" fill="rgb(227,7,12)" fg:x="36534" fg:w="281"/><text x="10.4588%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (266 samples, 0.07%)</title><rect x="10.2130%" y="869" width="0.0743%" height="15" fill="rgb(245,203,43)" fg:x="36549" fg:w="266"/><text x="10.4630%" y="879.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,238 samples, 0.35%)</title><rect x="9.9436%" y="933" width="0.3459%" height="15" fill="rgb(238,205,33)" fg:x="35585" fg:w="1238"/><text x="10.1936%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (734 samples, 0.21%)</title><rect x="10.0844%" y="917" width="0.2051%" height="15" fill="rgb(231,56,7)" fg:x="36089" fg:w="734"/><text x="10.3344%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (88 samples, 0.02%)</title><rect x="10.3155%" y="917" width="0.0246%" height="15" fill="rgb(244,186,29)" fg:x="36916" fg:w="88"/><text x="10.5655%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (115 samples, 0.03%)</title><rect x="10.3499%" y="917" width="0.0321%" height="15" fill="rgb(234,111,31)" fg:x="37039" fg:w="115"/><text x="10.5999%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 0.05%)</title><rect x="10.3820%" y="917" width="0.0492%" height="15" fill="rgb(241,149,10)" fg:x="37154" fg:w="176"/><text x="10.6320%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (47 samples, 0.01%)</title><rect x="10.4399%" y="917" width="0.0131%" height="15" fill="rgb(249,206,44)" fg:x="37361" fg:w="47"/><text x="10.6899%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.02%)</title><rect x="10.4659%" y="901" width="0.0235%" height="15" fill="rgb(251,153,30)" fg:x="37454" fg:w="84"/><text x="10.7159%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (115 samples, 0.03%)</title><rect x="10.4893%" y="901" width="0.0321%" height="15" fill="rgb(239,152,38)" fg:x="37538" fg:w="115"/><text x="10.7393%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (219 samples, 0.06%)</title><rect x="10.5279%" y="901" width="0.0612%" height="15" fill="rgb(249,139,47)" fg:x="37676" fg:w="219"/><text x="10.7779%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.01%)</title><rect x="10.6279%" y="885" width="0.0103%" height="15" fill="rgb(244,64,35)" fg:x="38034" fg:w="37"/><text x="10.8779%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (66 samples, 0.02%)</title><rect x="10.6953%" y="837" width="0.0184%" height="15" fill="rgb(216,46,15)" fg:x="38275" fg:w="66"/><text x="10.9453%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (360 samples, 0.10%)</title><rect x="10.6634%" y="869" width="0.1006%" height="15" fill="rgb(250,74,19)" fg:x="38161" fg:w="360"/><text x="10.9134%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (307 samples, 0.09%)</title><rect x="10.6782%" y="853" width="0.0858%" height="15" fill="rgb(249,42,33)" fg:x="38214" fg:w="307"/><text x="10.9282%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (180 samples, 0.05%)</title><rect x="10.7137%" y="837" width="0.0503%" height="15" fill="rgb(242,149,17)" fg:x="38341" fg:w="180"/><text x="10.9637%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (463 samples, 0.13%)</title><rect x="10.6444%" y="885" width="0.1294%" height="15" fill="rgb(244,29,21)" fg:x="38093" fg:w="463"/><text x="10.8944%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (642 samples, 0.18%)</title><rect x="10.6017%" y="901" width="0.1794%" height="15" fill="rgb(220,130,37)" fg:x="37940" fg:w="642"/><text x="10.8517%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (37 samples, 0.01%)</title><rect x="10.7811%" y="901" width="0.0103%" height="15" fill="rgb(211,67,2)" fg:x="38582" fg:w="37"/><text x="11.0311%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,420 samples, 0.40%)</title><rect x="10.4530%" y="917" width="0.3968%" height="15" fill="rgb(235,68,52)" fg:x="37408" fg:w="1420"/><text x="10.7030%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (209 samples, 0.06%)</title><rect x="10.7914%" y="901" width="0.0584%" height="15" fill="rgb(246,142,3)" fg:x="38619" fg:w="209"/><text x="11.0414%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (144 samples, 0.04%)</title><rect x="10.8096%" y="885" width="0.0402%" height="15" fill="rgb(241,25,7)" fg:x="38684" fg:w="144"/><text x="11.0596%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (5,555 samples, 1.55%)</title><rect x="9.3101%" y="965" width="1.5522%" height="15" fill="rgb(242,119,39)" fg:x="33318" fg:w="5555"/><text x="9.5601%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4,030 samples, 1.13%)</title><rect x="9.7363%" y="949" width="1.1261%" height="15" fill="rgb(241,98,45)" fg:x="34843" fg:w="4030"/><text x="9.9863%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2,050 samples, 0.57%)</title><rect x="10.2895%" y="933" width="0.5728%" height="15" fill="rgb(254,28,30)" fg:x="36823" fg:w="2050"/><text x="10.5395%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 0.01%)</title><rect x="10.8498%" y="917" width="0.0126%" height="15" fill="rgb(241,142,54)" fg:x="38828" fg:w="45"/><text x="11.0998%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (9,299 samples, 2.60%)</title><rect x="8.2782%" y="1013" width="2.5984%" height="15" fill="rgb(222,85,15)" fg:x="29625" fg:w="9299"/><text x="8.5282%" y="1023.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7,495 samples, 2.09%)</title><rect x="8.7823%" y="997" width="2.0943%" height="15" fill="rgb(210,85,47)" fg:x="31429" fg:w="7495"/><text x="9.0323%" y="1007.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6,335 samples, 1.77%)</title><rect x="9.1064%" y="981" width="1.7702%" height="15" fill="rgb(224,206,25)" fg:x="32589" fg:w="6335"/><text x="9.3564%" y="991.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (51 samples, 0.01%)</title><rect x="10.8624%" y="965" width="0.0143%" height="15" fill="rgb(243,201,19)" fg:x="38873" fg:w="51"/><text x="11.1124%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (10,694 samples, 2.99%)</title><rect x="7.8990%" y="1045" width="2.9883%" height="15" fill="rgb(236,59,4)" fg:x="28268" fg:w="10694"/><text x="8.1490%" y="1055.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10,130 samples, 2.83%)</title><rect x="8.0566%" y="1029" width="2.8307%" height="15" fill="rgb(254,179,45)" fg:x="28832" fg:w="10130"/><text x="8.3066%" y="1039.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 0.01%)</title><rect x="10.8766%" y="1013" width="0.0106%" height="15" fill="rgb(226,14,10)" fg:x="38924" fg:w="38"/><text x="11.1266%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (53 samples, 0.01%)</title><rect x="10.9004%" y="1029" width="0.0148%" height="15" fill="rgb(244,27,41)" fg:x="39009" fg:w="53"/><text x="11.1504%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (40 samples, 0.01%)</title><rect x="10.9373%" y="1013" width="0.0112%" height="15" fill="rgb(235,35,32)" fg:x="39141" fg:w="40"/><text x="11.1873%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (52 samples, 0.01%)</title><rect x="10.9811%" y="997" width="0.0145%" height="15" fill="rgb(218,68,31)" fg:x="39298" fg:w="52"/><text x="11.2311%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (110 samples, 0.03%)</title><rect x="10.9663%" y="1013" width="0.0307%" height="15" fill="rgb(207,120,37)" fg:x="39245" fg:w="110"/><text x="11.2163%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (337 samples, 0.09%)</title><rect x="10.9286%" y="1029" width="0.0942%" height="15" fill="rgb(227,98,0)" fg:x="39110" fg:w="337"/><text x="11.1786%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (86 samples, 0.02%)</title><rect x="10.9987%" y="1013" width="0.0240%" height="15" fill="rgb(207,7,3)" fg:x="39361" fg:w="86"/><text x="11.2487%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (68 samples, 0.02%)</title><rect x="11.0038%" y="997" width="0.0190%" height="15" fill="rgb(206,98,19)" fg:x="39379" fg:w="68"/><text x="11.2538%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (12,360 samples, 3.45%)</title><rect x="7.5715%" y="1077" width="3.4538%" height="15" fill="rgb(217,5,26)" fg:x="27096" fg:w="12360"/><text x="7.8215%" y="1087.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11,548 samples, 3.23%)</title><rect x="7.7984%" y="1061" width="3.2269%" height="15" fill="rgb(235,190,38)" fg:x="27908" fg:w="11548"/><text x="8.0484%" y="1071.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (494 samples, 0.14%)</title><rect x="10.8873%" y="1045" width="0.1380%" height="15" fill="rgb(247,86,24)" fg:x="38962" fg:w="494"/><text x="11.1373%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (13,546 samples, 3.79%)</title><rect x="7.2471%" y="1109" width="3.7852%" height="15" fill="rgb(205,101,16)" fg:x="25935" fg:w="13546"/><text x="7.4971%" y="1119.50">sk-g..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12,761 samples, 3.57%)</title><rect x="7.4664%" y="1093" width="3.5658%" height="15" fill="rgb(246,168,33)" fg:x="26720" fg:w="12761"/><text x="7.7164%" y="1103.50">sk-g..</text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15,255 samples, 4.26%)</title><rect x="6.7715%" y="1125" width="4.2627%" height="15" fill="rgb(231,114,1)" fg:x="24233" fg:w="15255"/><text x="7.0215%" y="1135.50">sk-ge..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (36 samples, 0.01%)</title><rect x="11.0373%" y="1109" width="0.0101%" height="15" fill="rgb(207,184,53)" fg:x="39499" fg:w="36"/><text x="11.2873%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (73 samples, 0.02%)</title><rect x="11.0558%" y="1093" width="0.0204%" height="15" fill="rgb(224,95,51)" fg:x="39565" fg:w="73"/><text x="11.3058%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (80 samples, 0.02%)</title><rect x="11.0985%" y="1077" width="0.0224%" height="15" fill="rgb(212,188,45)" fg:x="39718" fg:w="80"/><text x="11.3485%" y="1087.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (59 samples, 0.02%)</title><rect x="11.1209%" y="1077" width="0.0165%" height="15" fill="rgb(223,154,38)" fg:x="39798" fg:w="59"/><text x="11.3709%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (124 samples, 0.03%)</title><rect x="11.1586%" y="1061" width="0.0346%" height="15" fill="rgb(251,22,52)" fg:x="39933" fg:w="124"/><text x="11.4086%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (119 samples, 0.03%)</title><rect x="11.2318%" y="1029" width="0.0333%" height="15" fill="rgb(229,209,22)" fg:x="40195" fg:w="119"/><text x="11.4818%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (38 samples, 0.01%)</title><rect x="11.2874%" y="1013" width="0.0106%" height="15" fill="rgb(234,138,34)" fg:x="40394" fg:w="38"/><text x="11.5374%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (99 samples, 0.03%)</title><rect x="11.3031%" y="997" width="0.0277%" height="15" fill="rgb(212,95,11)" fg:x="40450" fg:w="99"/><text x="11.5531%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (102 samples, 0.03%)</title><rect x="11.3307%" y="997" width="0.0285%" height="15" fill="rgb(240,179,47)" fg:x="40549" fg:w="102"/><text x="11.5807%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.02%)</title><rect x="11.3433%" y="981" width="0.0159%" height="15" fill="rgb(240,163,11)" fg:x="40594" fg:w="57"/><text x="11.5933%" y="991.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (238 samples, 0.07%)</title><rect x="11.2980%" y="1013" width="0.0665%" height="15" fill="rgb(236,37,12)" fg:x="40432" fg:w="238"/><text x="11.5480%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (122 samples, 0.03%)</title><rect x="11.3645%" y="1013" width="0.0341%" height="15" fill="rgb(232,164,16)" fg:x="40670" fg:w="122"/><text x="11.6145%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.02%)</title><rect x="11.3986%" y="1013" width="0.0235%" height="15" fill="rgb(244,205,15)" fg:x="40792" fg:w="84"/><text x="11.6486%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (561 samples, 0.16%)</title><rect x="11.2676%" y="1029" width="0.1568%" height="15" fill="rgb(223,117,47)" fg:x="40323" fg:w="561"/><text x="11.5176%" y="1039.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (744 samples, 0.21%)</title><rect x="11.2298%" y="1045" width="0.2079%" height="15" fill="rgb(244,107,35)" fg:x="40188" fg:w="744"/><text x="11.4798%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.03%)</title><rect x="11.4467%" y="1045" width="0.0277%" height="15" fill="rgb(205,140,8)" fg:x="40964" fg:w="99"/><text x="11.6967%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1,003 samples, 0.28%)</title><rect x="11.1952%" y="1061" width="0.2803%" height="15" fill="rgb(228,84,46)" fg:x="40064" fg:w="1003"/><text x="11.4452%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.03%)</title><rect x="11.4755%" y="1061" width="0.0305%" height="15" fill="rgb(254,188,9)" fg:x="41067" fg:w="109"/><text x="11.7255%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1,339 samples, 0.37%)</title><rect x="11.1373%" y="1077" width="0.3742%" height="15" fill="rgb(206,112,54)" fg:x="39857" fg:w="1339"/><text x="11.3873%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.03%)</title><rect x="11.5115%" y="1077" width="0.0251%" height="15" fill="rgb(216,84,49)" fg:x="41196" fg:w="90"/><text x="11.7615%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1,663 samples, 0.46%)</title><rect x="11.0764%" y="1093" width="0.4647%" height="15" fill="rgb(214,194,35)" fg:x="39639" fg:w="1663"/><text x="11.3264%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="11.5411%" y="1093" width="0.0212%" height="15" fill="rgb(249,28,3)" fg:x="41302" fg:w="76"/><text x="11.7911%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1,855 samples, 0.52%)</title><rect x="11.0474%" y="1109" width="0.5183%" height="15" fill="rgb(222,56,52)" fg:x="39535" fg:w="1855"/><text x="11.2974%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (51 samples, 0.01%)</title><rect x="11.5735%" y="1093" width="0.0143%" height="15" fill="rgb(245,217,50)" fg:x="41418" fg:w="51"/><text x="11.8235%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (123 samples, 0.03%)</title><rect x="11.6023%" y="1077" width="0.0344%" height="15" fill="rgb(213,201,24)" fg:x="41521" fg:w="123"/><text x="11.8523%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (155 samples, 0.04%)</title><rect x="11.6367%" y="1077" width="0.0433%" height="15" fill="rgb(248,116,28)" fg:x="41644" fg:w="155"/><text x="11.8867%" y="1087.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (39 samples, 0.01%)</title><rect x="11.6811%" y="1077" width="0.0109%" height="15" fill="rgb(219,72,43)" fg:x="41803" fg:w="39"/><text x="11.9311%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (90 samples, 0.03%)</title><rect x="11.7149%" y="1061" width="0.0251%" height="15" fill="rgb(209,138,14)" fg:x="41924" fg:w="90"/><text x="11.9649%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (62 samples, 0.02%)</title><rect x="11.7228%" y="1045" width="0.0173%" height="15" fill="rgb(222,18,33)" fg:x="41952" fg:w="62"/><text x="11.9728%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (181 samples, 0.05%)</title><rect x="11.6931%" y="1077" width="0.0506%" height="15" fill="rgb(213,199,7)" fg:x="41846" fg:w="181"/><text x="11.9431%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (128 samples, 0.04%)</title><rect x="11.7655%" y="1061" width="0.0358%" height="15" fill="rgb(250,110,10)" fg:x="42105" fg:w="128"/><text x="12.0155%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (293 samples, 0.08%)</title><rect x="11.8013%" y="1061" width="0.0819%" height="15" fill="rgb(248,123,6)" fg:x="42233" fg:w="293"/><text x="12.0513%" y="1071.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (43 samples, 0.01%)</title><rect x="11.8915%" y="1061" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="42556" fg:w="43"/><text x="12.1415%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (172 samples, 0.05%)</title><rect x="11.9625%" y="1045" width="0.0481%" height="15" fill="rgb(211,154,13)" fg:x="42810" fg:w="172"/><text x="12.2125%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (102 samples, 0.03%)</title><rect x="11.9821%" y="1029" width="0.0285%" height="15" fill="rgb(225,148,7)" fg:x="42880" fg:w="102"/><text x="12.2321%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (409 samples, 0.11%)</title><rect x="11.9047%" y="1061" width="0.1143%" height="15" fill="rgb(220,160,43)" fg:x="42603" fg:w="409"/><text x="12.1547%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (266 samples, 0.07%)</title><rect x="12.0536%" y="1045" width="0.0743%" height="15" fill="rgb(213,52,39)" fg:x="43136" fg:w="266"/><text x="12.3036%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (346 samples, 0.10%)</title><rect x="12.1279%" y="1045" width="0.0967%" height="15" fill="rgb(243,137,7)" fg:x="43402" fg:w="346"/><text x="12.3779%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (108 samples, 0.03%)</title><rect x="12.2341%" y="1045" width="0.0302%" height="15" fill="rgb(230,79,13)" fg:x="43782" fg:w="108"/><text x="12.4841%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (55 samples, 0.02%)</title><rect x="12.4135%" y="997" width="0.0154%" height="15" fill="rgb(247,105,23)" fg:x="44424" fg:w="55"/><text x="12.6635%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (421 samples, 0.12%)</title><rect x="12.3336%" y="1029" width="0.1176%" height="15" fill="rgb(223,179,41)" fg:x="44138" fg:w="421"/><text x="12.5836%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (272 samples, 0.08%)</title><rect x="12.3752%" y="1013" width="0.0760%" height="15" fill="rgb(218,9,34)" fg:x="44287" fg:w="272"/><text x="12.6252%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (80 samples, 0.02%)</title><rect x="12.4289%" y="997" width="0.0224%" height="15" fill="rgb(222,106,8)" fg:x="44479" fg:w="80"/><text x="12.6789%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (728 samples, 0.20%)</title><rect x="12.2682%" y="1045" width="0.2034%" height="15" fill="rgb(211,220,0)" fg:x="43904" fg:w="728"/><text x="12.5182%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (51 samples, 0.01%)</title><rect x="12.4574%" y="1029" width="0.0143%" height="15" fill="rgb(229,52,16)" fg:x="44581" fg:w="51"/><text x="12.7074%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (69 samples, 0.02%)</title><rect x="12.5074%" y="1029" width="0.0193%" height="15" fill="rgb(212,155,18)" fg:x="44760" fg:w="69"/><text x="12.7574%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (594 samples, 0.17%)</title><rect x="12.5267%" y="1029" width="0.1660%" height="15" fill="rgb(242,21,14)" fg:x="44829" fg:w="594"/><text x="12.7767%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (52 samples, 0.01%)</title><rect x="12.7027%" y="1029" width="0.0145%" height="15" fill="rgb(222,19,48)" fg:x="45459" fg:w="52"/><text x="12.9527%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (51 samples, 0.01%)</title><rect x="12.8559%" y="981" width="0.0143%" height="15" fill="rgb(232,45,27)" fg:x="46007" fg:w="51"/><text x="13.1059%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (352 samples, 0.10%)</title><rect x="12.7866%" y="1013" width="0.0984%" height="15" fill="rgb(249,103,42)" fg:x="45759" fg:w="352"/><text x="13.0366%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (246 samples, 0.07%)</title><rect x="12.8162%" y="997" width="0.0687%" height="15" fill="rgb(246,81,33)" fg:x="45865" fg:w="246"/><text x="13.0662%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (53 samples, 0.01%)</title><rect x="12.8701%" y="981" width="0.0148%" height="15" fill="rgb(252,33,42)" fg:x="46058" fg:w="53"/><text x="13.1201%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (638 samples, 0.18%)</title><rect x="12.7268%" y="1029" width="0.1783%" height="15" fill="rgb(209,212,41)" fg:x="45545" fg:w="638"/><text x="12.9768%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (55 samples, 0.02%)</title><rect x="12.8897%" y="1013" width="0.0154%" height="15" fill="rgb(207,154,6)" fg:x="46128" fg:w="55"/><text x="13.1397%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (190 samples, 0.05%)</title><rect x="12.9391%" y="1013" width="0.0531%" height="15" fill="rgb(223,64,47)" fg:x="46305" fg:w="190"/><text x="13.1891%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (141 samples, 0.04%)</title><rect x="12.9922%" y="1013" width="0.0394%" height="15" fill="rgb(211,161,38)" fg:x="46495" fg:w="141"/><text x="13.2422%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (75 samples, 0.02%)</title><rect x="13.0336%" y="1013" width="0.0210%" height="15" fill="rgb(219,138,40)" fg:x="46643" fg:w="75"/><text x="13.2836%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.02%)</title><rect x="13.0749%" y="997" width="0.0198%" height="15" fill="rgb(241,228,46)" fg:x="46791" fg:w="71"/><text x="13.3249%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.02%)</title><rect x="13.0797%" y="981" width="0.0151%" height="15" fill="rgb(223,209,38)" fg:x="46808" fg:w="54"/><text x="13.3297%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (150 samples, 0.04%)</title><rect x="13.0570%" y="1013" width="0.0419%" height="15" fill="rgb(236,164,45)" fg:x="46727" fg:w="150"/><text x="13.3070%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (50 samples, 0.01%)</title><rect x="13.1143%" y="997" width="0.0140%" height="15" fill="rgb(231,15,5)" fg:x="46932" fg:w="50"/><text x="13.3643%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (460 samples, 0.13%)</title><rect x="13.1283%" y="997" width="0.1285%" height="15" fill="rgb(252,35,15)" fg:x="46982" fg:w="460"/><text x="13.3783%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (89 samples, 0.02%)</title><rect x="13.2624%" y="997" width="0.0249%" height="15" fill="rgb(248,181,18)" fg:x="47462" fg:w="89"/><text x="13.5124%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (174 samples, 0.05%)</title><rect x="13.3345%" y="981" width="0.0486%" height="15" fill="rgb(233,39,42)" fg:x="47720" fg:w="174"/><text x="13.5845%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (115 samples, 0.03%)</title><rect x="13.3510%" y="965" width="0.0321%" height="15" fill="rgb(238,110,33)" fg:x="47779" fg:w="115"/><text x="13.6010%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (344 samples, 0.10%)</title><rect x="13.2974%" y="997" width="0.0961%" height="15" fill="rgb(233,195,10)" fg:x="47587" fg:w="344"/><text x="13.5474%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (197 samples, 0.06%)</title><rect x="13.4323%" y="981" width="0.0550%" height="15" fill="rgb(254,105,3)" fg:x="48070" fg:w="197"/><text x="13.6823%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (171 samples, 0.05%)</title><rect x="13.4874%" y="981" width="0.0478%" height="15" fill="rgb(221,225,9)" fg:x="48267" fg:w="171"/><text x="13.7374%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (90 samples, 0.03%)</title><rect x="13.5455%" y="981" width="0.0251%" height="15" fill="rgb(224,227,45)" fg:x="48475" fg:w="90"/><text x="13.7955%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (154 samples, 0.04%)</title><rect x="13.6100%" y="965" width="0.0430%" height="15" fill="rgb(229,198,43)" fg:x="48706" fg:w="154"/><text x="13.8600%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (103 samples, 0.03%)</title><rect x="13.6243%" y="949" width="0.0288%" height="15" fill="rgb(206,209,35)" fg:x="48757" fg:w="103"/><text x="13.8743%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (308 samples, 0.09%)</title><rect x="13.5746%" y="981" width="0.0861%" height="15" fill="rgb(245,195,53)" fg:x="48579" fg:w="308"/><text x="13.8246%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (435 samples, 0.12%)</title><rect x="13.6869%" y="965" width="0.1216%" height="15" fill="rgb(240,92,26)" fg:x="48981" fg:w="435"/><text x="13.9369%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.01%)</title><rect x="13.8196%" y="965" width="0.0129%" height="15" fill="rgb(207,40,23)" fg:x="49456" fg:w="46"/><text x="14.0696%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (44 samples, 0.01%)</title><rect x="13.9537%" y="917" width="0.0123%" height="15" fill="rgb(223,111,35)" fg:x="49936" fg:w="44"/><text x="14.2037%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (365 samples, 0.10%)</title><rect x="13.8777%" y="949" width="0.1020%" height="15" fill="rgb(229,147,28)" fg:x="49664" fg:w="365"/><text x="14.1277%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (249 samples, 0.07%)</title><rect x="13.9102%" y="933" width="0.0696%" height="15" fill="rgb(211,29,28)" fg:x="49780" fg:w="249"/><text x="14.1602%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (49 samples, 0.01%)</title><rect x="13.9660%" y="917" width="0.0137%" height="15" fill="rgb(228,72,33)" fg:x="49980" fg:w="49"/><text x="14.2160%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (576 samples, 0.16%)</title><rect x="13.8353%" y="965" width="0.1610%" height="15" fill="rgb(205,214,31)" fg:x="49512" fg:w="576"/><text x="14.0853%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (44 samples, 0.01%)</title><rect x="13.9839%" y="949" width="0.0123%" height="15" fill="rgb(224,111,15)" fg:x="50044" fg:w="44"/><text x="14.2339%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,616 samples, 2.41%)</title><rect x="11.6006%" y="1093" width="2.4076%" height="15" fill="rgb(253,21,26)" fg:x="41515" fg:w="8616"/><text x="11.8506%" y="1103.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,104 samples, 2.26%)</title><rect x="11.7437%" y="1077" width="2.2645%" height="15" fill="rgb(245,139,43)" fg:x="42027" fg:w="8104"/><text x="11.9937%" y="1087.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,119 samples, 1.99%)</title><rect x="12.0190%" y="1061" width="1.9893%" height="15" fill="rgb(252,170,7)" fg:x="43012" fg:w="7119"/><text x="12.2690%" y="1071.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,499 samples, 1.54%)</title><rect x="12.4716%" y="1045" width="1.5366%" height="15" fill="rgb(231,118,14)" fg:x="44632" fg:w="5499"/><text x="12.7216%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,948 samples, 1.10%)</title><rect x="12.9050%" y="1029" width="1.1032%" height="15" fill="rgb(238,83,0)" fg:x="46183" fg:w="3948"/><text x="13.1550%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,254 samples, 0.91%)</title><rect x="13.0990%" y="1013" width="0.9093%" height="15" fill="rgb(221,39,39)" fg:x="46877" fg:w="3254"/><text x="13.3490%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,200 samples, 0.61%)</title><rect x="13.3935%" y="997" width="0.6148%" height="15" fill="rgb(222,119,46)" fg:x="47931" fg:w="2200"/><text x="13.6435%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,244 samples, 0.35%)</title><rect x="13.6606%" y="981" width="0.3476%" height="15" fill="rgb(222,165,49)" fg:x="48887" fg:w="1244"/><text x="13.9106%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (43 samples, 0.01%)</title><rect x="13.9962%" y="965" width="0.0120%" height="15" fill="rgb(219,113,52)" fg:x="50088" fg:w="43"/><text x="14.2462%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,723 samples, 2.44%)</title><rect x="11.5724%" y="1109" width="2.4375%" height="15" fill="rgb(214,7,15)" fg:x="41414" fg:w="8723"/><text x="11.8224%" y="1119.50">sk..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.02%)</title><rect x="14.0353%" y="1077" width="0.0156%" height="15" fill="rgb(235,32,4)" fg:x="50228" fg:w="56"/><text x="14.2853%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.01%)</title><rect x="14.0373%" y="1061" width="0.0137%" height="15" fill="rgb(238,90,54)" fg:x="50235" fg:w="49"/><text x="14.2873%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (67 samples, 0.02%)</title><rect x="14.0963%" y="1061" width="0.0187%" height="15" fill="rgb(213,208,19)" fg:x="50446" fg:w="67"/><text x="14.3463%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.01%)</title><rect x="14.1030%" y="1045" width="0.0120%" height="15" fill="rgb(233,156,4)" fg:x="50470" fg:w="43"/><text x="14.3530%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (199 samples, 0.06%)</title><rect x="14.0630%" y="1077" width="0.0556%" height="15" fill="rgb(207,194,5)" fg:x="50327" fg:w="199"/><text x="14.3130%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (322 samples, 0.09%)</title><rect x="14.0295%" y="1093" width="0.0900%" height="15" fill="rgb(206,111,30)" fg:x="50207" fg:w="322"/><text x="14.2795%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.01%)</title><rect x="14.1449%" y="1077" width="0.0123%" height="15" fill="rgb(243,70,54)" fg:x="50620" fg:w="44"/><text x="14.3949%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="14.1577%" y="1077" width="0.0154%" height="15" fill="rgb(242,28,8)" fg:x="50666" fg:w="55"/><text x="14.4077%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.01%)</title><rect x="14.1616%" y="1061" width="0.0115%" height="15" fill="rgb(219,106,18)" fg:x="50680" fg:w="41"/><text x="14.4116%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (95 samples, 0.03%)</title><rect x="14.1952%" y="1077" width="0.0265%" height="15" fill="rgb(244,222,10)" fg:x="50800" fg:w="95"/><text x="14.4452%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (67 samples, 0.02%)</title><rect x="14.2030%" y="1061" width="0.0187%" height="15" fill="rgb(236,179,52)" fg:x="50828" fg:w="67"/><text x="14.4530%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (68 samples, 0.02%)</title><rect x="14.2463%" y="1061" width="0.0190%" height="15" fill="rgb(213,23,39)" fg:x="50983" fg:w="68"/><text x="14.4963%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (54 samples, 0.02%)</title><rect x="14.2676%" y="1061" width="0.0151%" height="15" fill="rgb(238,48,10)" fg:x="51059" fg:w="54"/><text x="14.5176%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (114 samples, 0.03%)</title><rect x="14.2983%" y="1045" width="0.0319%" height="15" fill="rgb(251,196,23)" fg:x="51169" fg:w="114"/><text x="14.5483%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (90 samples, 0.03%)</title><rect x="14.3050%" y="1029" width="0.0251%" height="15" fill="rgb(250,152,24)" fg:x="51193" fg:w="90"/><text x="14.5550%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (47 samples, 0.01%)</title><rect x="14.3170%" y="1013" width="0.0131%" height="15" fill="rgb(209,150,17)" fg:x="51236" fg:w="47"/><text x="14.5670%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (68 samples, 0.02%)</title><rect x="14.4341%" y="1029" width="0.0190%" height="15" fill="rgb(234,202,34)" fg:x="51655" fg:w="68"/><text x="14.6841%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.01%)</title><rect x="14.4419%" y="1013" width="0.0112%" height="15" fill="rgb(253,148,53)" fg:x="51683" fg:w="40"/><text x="14.6919%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (392 samples, 0.11%)</title><rect x="14.3503%" y="1045" width="0.1095%" height="15" fill="rgb(218,129,16)" fg:x="51355" fg:w="392"/><text x="14.6003%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (641 samples, 0.18%)</title><rect x="14.2882%" y="1061" width="0.1791%" height="15" fill="rgb(216,85,19)" fg:x="51133" fg:w="641"/><text x="14.5382%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (68 samples, 0.02%)</title><rect x="14.4743%" y="1061" width="0.0190%" height="15" fill="rgb(235,228,7)" fg:x="51799" fg:w="68"/><text x="14.7243%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (101 samples, 0.03%)</title><rect x="14.5431%" y="1045" width="0.0282%" height="15" fill="rgb(245,175,0)" fg:x="52045" fg:w="101"/><text x="14.7931%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.01%)</title><rect x="14.5746%" y="1045" width="0.0145%" height="15" fill="rgb(208,168,36)" fg:x="52158" fg:w="52"/><text x="14.8246%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.01%)</title><rect x="14.5791%" y="1029" width="0.0101%" height="15" fill="rgb(246,171,24)" fg:x="52174" fg:w="36"/><text x="14.8291%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (165 samples, 0.05%)</title><rect x="14.5897%" y="1045" width="0.0461%" height="15" fill="rgb(215,142,24)" fg:x="52212" fg:w="165"/><text x="14.8397%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.05%)</title><rect x="14.6409%" y="1045" width="0.0453%" height="15" fill="rgb(250,187,7)" fg:x="52395" fg:w="162"/><text x="14.8909%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (210 samples, 0.06%)</title><rect x="14.6861%" y="1045" width="0.0587%" height="15" fill="rgb(228,66,33)" fg:x="52557" fg:w="210"/><text x="14.9361%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (171 samples, 0.05%)</title><rect x="14.6970%" y="1029" width="0.0478%" height="15" fill="rgb(234,215,21)" fg:x="52596" fg:w="171"/><text x="14.9470%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (134 samples, 0.04%)</title><rect x="14.7948%" y="1029" width="0.0374%" height="15" fill="rgb(222,191,20)" fg:x="52946" fg:w="134"/><text x="15.0448%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (45 samples, 0.01%)</title><rect x="14.8817%" y="997" width="0.0126%" height="15" fill="rgb(245,79,54)" fg:x="53257" fg:w="45"/><text x="15.1317%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (71 samples, 0.02%)</title><rect x="14.9150%" y="981" width="0.0198%" height="15" fill="rgb(240,10,37)" fg:x="53376" fg:w="71"/><text x="15.1650%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (328 samples, 0.09%)</title><rect x="14.8792%" y="1013" width="0.0917%" height="15" fill="rgb(214,192,32)" fg:x="53248" fg:w="328"/><text x="15.1292%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (265 samples, 0.07%)</title><rect x="14.8968%" y="997" width="0.0740%" height="15" fill="rgb(209,36,54)" fg:x="53311" fg:w="265"/><text x="15.1468%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (129 samples, 0.04%)</title><rect x="14.9348%" y="981" width="0.0360%" height="15" fill="rgb(220,10,11)" fg:x="53447" fg:w="129"/><text x="15.1848%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (63 samples, 0.02%)</title><rect x="15.0634%" y="997" width="0.0176%" height="15" fill="rgb(221,106,17)" fg:x="53907" fg:w="63"/><text x="15.3134%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (361 samples, 0.10%)</title><rect x="14.9910%" y="1013" width="0.1009%" height="15" fill="rgb(251,142,44)" fg:x="53648" fg:w="361"/><text x="15.2410%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (872 samples, 0.24%)</title><rect x="14.8541%" y="1029" width="0.2437%" height="15" fill="rgb(238,13,15)" fg:x="53158" fg:w="872"/><text x="15.1041%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (52 samples, 0.01%)</title><rect x="15.1031%" y="1029" width="0.0145%" height="15" fill="rgb(208,107,27)" fg:x="54049" fg:w="52"/><text x="15.3531%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (81 samples, 0.02%)</title><rect x="15.1615%" y="1013" width="0.0226%" height="15" fill="rgb(205,136,37)" fg:x="54258" fg:w="81"/><text x="15.4115%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (54 samples, 0.02%)</title><rect x="15.1844%" y="1013" width="0.0151%" height="15" fill="rgb(250,205,27)" fg:x="54340" fg:w="54"/><text x="15.4344%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (97 samples, 0.03%)</title><rect x="15.1995%" y="1013" width="0.0271%" height="15" fill="rgb(210,80,43)" fg:x="54394" fg:w="97"/><text x="15.4495%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="15.2316%" y="1013" width="0.0215%" height="15" fill="rgb(247,160,36)" fg:x="54509" fg:w="77"/><text x="15.4816%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (193 samples, 0.05%)</title><rect x="15.2531%" y="1013" width="0.0539%" height="15" fill="rgb(234,13,49)" fg:x="54586" fg:w="193"/><text x="15.5031%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (141 samples, 0.04%)</title><rect x="15.2676%" y="997" width="0.0394%" height="15" fill="rgb(234,122,0)" fg:x="54638" fg:w="141"/><text x="15.5176%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (151 samples, 0.04%)</title><rect x="15.3459%" y="997" width="0.0422%" height="15" fill="rgb(207,146,38)" fg:x="54918" fg:w="151"/><text x="15.5959%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (72 samples, 0.02%)</title><rect x="15.3903%" y="997" width="0.0201%" height="15" fill="rgb(207,177,25)" fg:x="55077" fg:w="72"/><text x="15.6403%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (71 samples, 0.02%)</title><rect x="15.4104%" y="997" width="0.0198%" height="15" fill="rgb(211,178,42)" fg:x="55149" fg:w="71"/><text x="15.6604%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (61 samples, 0.02%)</title><rect x="15.4797%" y="949" width="0.0170%" height="15" fill="rgb(230,69,54)" fg:x="55397" fg:w="61"/><text x="15.7297%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (265 samples, 0.07%)</title><rect x="15.4526%" y="981" width="0.0740%" height="15" fill="rgb(214,135,41)" fg:x="55300" fg:w="265"/><text x="15.7026%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (216 samples, 0.06%)</title><rect x="15.4663%" y="965" width="0.0604%" height="15" fill="rgb(237,67,25)" fg:x="55349" fg:w="216"/><text x="15.7163%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (107 samples, 0.03%)</title><rect x="15.4968%" y="949" width="0.0299%" height="15" fill="rgb(222,189,50)" fg:x="55458" fg:w="107"/><text x="15.7468%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (37 samples, 0.01%)</title><rect x="15.5292%" y="981" width="0.0103%" height="15" fill="rgb(245,148,34)" fg:x="55574" fg:w="37"/><text x="15.7792%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (45 samples, 0.01%)</title><rect x="15.6404%" y="965" width="0.0126%" height="15" fill="rgb(222,29,6)" fg:x="55972" fg:w="45"/><text x="15.8904%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (85 samples, 0.02%)</title><rect x="15.6541%" y="965" width="0.0238%" height="15" fill="rgb(221,189,43)" fg:x="56021" fg:w="85"/><text x="15.9041%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.02%)</title><rect x="15.6628%" y="949" width="0.0151%" height="15" fill="rgb(207,36,27)" fg:x="56052" fg:w="54"/><text x="15.9128%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (521 samples, 0.15%)</title><rect x="15.5468%" y="981" width="0.1456%" height="15" fill="rgb(217,90,24)" fg:x="55637" fg:w="521"/><text x="15.7968%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (967 samples, 0.27%)</title><rect x="15.4303%" y="997" width="0.2702%" height="15" fill="rgb(224,66,35)" fg:x="55220" fg:w="967"/><text x="15.6803%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (138 samples, 0.04%)</title><rect x="15.7091%" y="997" width="0.0386%" height="15" fill="rgb(221,13,50)" fg:x="56218" fg:w="138"/><text x="15.9591%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (84 samples, 0.02%)</title><rect x="15.7242%" y="981" width="0.0235%" height="15" fill="rgb(236,68,49)" fg:x="56272" fg:w="84"/><text x="15.9742%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (156 samples, 0.04%)</title><rect x="15.7960%" y="981" width="0.0436%" height="15" fill="rgb(229,146,28)" fg:x="56529" fg:w="156"/><text x="16.0460%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.01%)</title><rect x="15.8396%" y="981" width="0.0103%" height="15" fill="rgb(225,31,38)" fg:x="56685" fg:w="37"/><text x="16.0896%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (106 samples, 0.03%)</title><rect x="15.8500%" y="981" width="0.0296%" height="15" fill="rgb(250,208,3)" fg:x="56722" fg:w="106"/><text x="16.1000%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (92 samples, 0.03%)</title><rect x="15.8539%" y="965" width="0.0257%" height="15" fill="rgb(246,54,23)" fg:x="56736" fg:w="92"/><text x="16.1039%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (64 samples, 0.02%)</title><rect x="15.8617%" y="949" width="0.0179%" height="15" fill="rgb(243,76,11)" fg:x="56764" fg:w="64"/><text x="16.1117%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.01%)</title><rect x="15.8695%" y="933" width="0.0101%" height="15" fill="rgb(245,21,50)" fg:x="56792" fg:w="36"/><text x="16.1195%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (150 samples, 0.04%)</title><rect x="15.8802%" y="981" width="0.0419%" height="15" fill="rgb(228,9,43)" fg:x="56830" fg:w="150"/><text x="16.1302%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (139 samples, 0.04%)</title><rect x="15.9249%" y="981" width="0.0388%" height="15" fill="rgb(208,100,47)" fg:x="56990" fg:w="139"/><text x="16.1749%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (267 samples, 0.07%)</title><rect x="15.9637%" y="981" width="0.0746%" height="15" fill="rgb(232,26,8)" fg:x="57129" fg:w="267"/><text x="16.2137%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (210 samples, 0.06%)</title><rect x="15.9796%" y="965" width="0.0587%" height="15" fill="rgb(216,166,38)" fg:x="57186" fg:w="210"/><text x="16.2296%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (110 samples, 0.03%)</title><rect x="16.0917%" y="965" width="0.0307%" height="15" fill="rgb(251,202,51)" fg:x="57587" fg:w="110"/><text x="16.3417%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (37 samples, 0.01%)</title><rect x="16.1316%" y="965" width="0.0103%" height="15" fill="rgb(254,216,34)" fg:x="57730" fg:w="37"/><text x="16.3816%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.03%)</title><rect x="16.1420%" y="965" width="0.0268%" height="15" fill="rgb(251,32,27)" fg:x="57767" fg:w="96"/><text x="16.3920%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (80 samples, 0.02%)</title><rect x="16.1752%" y="949" width="0.0224%" height="15" fill="rgb(208,127,28)" fg:x="57886" fg:w="80"/><text x="16.4252%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.02%)</title><rect x="16.1791%" y="933" width="0.0184%" height="15" fill="rgb(224,137,22)" fg:x="57900" fg:w="66"/><text x="16.4291%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (71 samples, 0.02%)</title><rect x="16.2012%" y="949" width="0.0198%" height="15" fill="rgb(254,70,32)" fg:x="57979" fg:w="71"/><text x="16.4512%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (191 samples, 0.05%)</title><rect x="16.1688%" y="965" width="0.0534%" height="15" fill="rgb(229,75,37)" fg:x="57863" fg:w="191"/><text x="16.4188%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (163 samples, 0.05%)</title><rect x="16.2247%" y="965" width="0.0455%" height="15" fill="rgb(252,64,23)" fg:x="58063" fg:w="163"/><text x="16.4747%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (123 samples, 0.03%)</title><rect x="16.2359%" y="949" width="0.0344%" height="15" fill="rgb(232,162,48)" fg:x="58103" fg:w="123"/><text x="16.4859%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (36 samples, 0.01%)</title><rect x="16.3029%" y="949" width="0.0101%" height="15" fill="rgb(246,160,12)" fg:x="58343" fg:w="36"/><text x="16.5529%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.01%)</title><rect x="16.3253%" y="933" width="0.0106%" height="15" fill="rgb(247,166,0)" fg:x="58423" fg:w="38"/><text x="16.5753%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (55 samples, 0.02%)</title><rect x="16.3359%" y="933" width="0.0154%" height="15" fill="rgb(249,219,21)" fg:x="58461" fg:w="55"/><text x="16.5859%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="16.3395%" y="917" width="0.0117%" height="15" fill="rgb(205,209,3)" fg:x="58474" fg:w="42"/><text x="16.5895%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (299 samples, 0.08%)</title><rect x="16.2702%" y="965" width="0.0836%" height="15" fill="rgb(243,44,1)" fg:x="58226" fg:w="299"/><text x="16.5202%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (132 samples, 0.04%)</title><rect x="16.3169%" y="949" width="0.0369%" height="15" fill="rgb(206,159,16)" fg:x="58393" fg:w="132"/><text x="16.5669%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.02%)</title><rect x="16.4080%" y="933" width="0.0170%" height="15" fill="rgb(244,77,30)" fg:x="58719" fg:w="61"/><text x="16.6580%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (69 samples, 0.02%)</title><rect x="16.4253%" y="933" width="0.0193%" height="15" fill="rgb(218,69,12)" fg:x="58781" fg:w="69"/><text x="16.6753%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (36 samples, 0.01%)</title><rect x="16.4804%" y="885" width="0.0101%" height="15" fill="rgb(212,87,7)" fg:x="58978" fg:w="36"/><text x="16.7304%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (156 samples, 0.04%)</title><rect x="16.4625%" y="917" width="0.0436%" height="15" fill="rgb(245,114,25)" fg:x="58914" fg:w="156"/><text x="16.7125%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (124 samples, 0.03%)</title><rect x="16.4714%" y="901" width="0.0346%" height="15" fill="rgb(210,61,42)" fg:x="58946" fg:w="124"/><text x="16.7214%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.02%)</title><rect x="16.4904%" y="885" width="0.0156%" height="15" fill="rgb(211,52,33)" fg:x="59014" fg:w="56"/><text x="16.7404%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (67 samples, 0.02%)</title><rect x="16.5083%" y="917" width="0.0187%" height="15" fill="rgb(234,58,33)" fg:x="59078" fg:w="67"/><text x="16.7583%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.02%)</title><rect x="16.6237%" y="901" width="0.0184%" height="15" fill="rgb(220,115,36)" fg:x="59491" fg:w="66"/><text x="16.8737%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.01%)</title><rect x="16.6318%" y="885" width="0.0103%" height="15" fill="rgb(243,153,54)" fg:x="59520" fg:w="37"/><text x="16.8818%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (420 samples, 0.12%)</title><rect x="16.5343%" y="917" width="0.1174%" height="15" fill="rgb(251,47,18)" fg:x="59171" fg:w="420"/><text x="16.7843%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (776 samples, 0.22%)</title><rect x="16.4446%" y="933" width="0.2168%" height="15" fill="rgb(242,102,42)" fg:x="58850" fg:w="776"/><text x="16.6946%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (38 samples, 0.01%)</title><rect x="16.6698%" y="933" width="0.0106%" height="15" fill="rgb(234,31,38)" fg:x="59656" fg:w="38"/><text x="16.9198%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (129 samples, 0.04%)</title><rect x="16.7257%" y="917" width="0.0360%" height="15" fill="rgb(221,117,51)" fg:x="59856" fg:w="129"/><text x="16.9757%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.03%)</title><rect x="16.7676%" y="917" width="0.0293%" height="15" fill="rgb(212,20,18)" fg:x="60006" fg:w="105"/><text x="17.0176%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (83 samples, 0.02%)</title><rect x="16.7738%" y="901" width="0.0232%" height="15" fill="rgb(245,133,36)" fg:x="60028" fg:w="83"/><text x="17.0238%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (65 samples, 0.02%)</title><rect x="16.7788%" y="885" width="0.0182%" height="15" fill="rgb(212,6,19)" fg:x="60046" fg:w="65"/><text x="17.0288%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (197 samples, 0.06%)</title><rect x="16.7978%" y="917" width="0.0550%" height="15" fill="rgb(218,1,36)" fg:x="60114" fg:w="197"/><text x="17.0478%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 0.03%)</title><rect x="16.8557%" y="917" width="0.0316%" height="15" fill="rgb(246,84,54)" fg:x="60321" fg:w="113"/><text x="17.1057%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (223 samples, 0.06%)</title><rect x="16.8872%" y="917" width="0.0623%" height="15" fill="rgb(242,110,6)" fg:x="60434" fg:w="223"/><text x="17.1372%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (165 samples, 0.05%)</title><rect x="16.9034%" y="901" width="0.0461%" height="15" fill="rgb(214,47,5)" fg:x="60492" fg:w="165"/><text x="17.1534%" y="911.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (39 samples, 0.01%)</title><rect x="16.9697%" y="917" width="0.0109%" height="15" fill="rgb(218,159,25)" fg:x="60729" fg:w="39"/><text x="17.2197%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (142 samples, 0.04%)</title><rect x="17.0261%" y="901" width="0.0397%" height="15" fill="rgb(215,211,28)" fg:x="60931" fg:w="142"/><text x="17.2761%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (76 samples, 0.02%)</title><rect x="17.0672%" y="901" width="0.0212%" height="15" fill="rgb(238,59,32)" fg:x="61078" fg:w="76"/><text x="17.3172%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (157 samples, 0.04%)</title><rect x="17.0915%" y="901" width="0.0439%" height="15" fill="rgb(226,82,3)" fg:x="61165" fg:w="157"/><text x="17.3415%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (139 samples, 0.04%)</title><rect x="17.1454%" y="885" width="0.0388%" height="15" fill="rgb(240,164,32)" fg:x="61358" fg:w="139"/><text x="17.3954%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (110 samples, 0.03%)</title><rect x="17.1535%" y="869" width="0.0307%" height="15" fill="rgb(232,46,7)" fg:x="61387" fg:w="110"/><text x="17.4035%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.01%)</title><rect x="17.1714%" y="853" width="0.0129%" height="15" fill="rgb(229,129,53)" fg:x="61451" fg:w="46"/><text x="17.4214%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (39 samples, 0.01%)</title><rect x="17.2184%" y="869" width="0.0109%" height="15" fill="rgb(234,188,29)" fg:x="61619" fg:w="39"/><text x="17.4684%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (148 samples, 0.04%)</title><rect x="17.1918%" y="885" width="0.0414%" height="15" fill="rgb(246,141,4)" fg:x="61524" fg:w="148"/><text x="17.4418%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (357 samples, 0.10%)</title><rect x="17.1354%" y="901" width="0.0998%" height="15" fill="rgb(229,23,39)" fg:x="61322" fg:w="357"/><text x="17.3854%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (177 samples, 0.05%)</title><rect x="17.2399%" y="901" width="0.0495%" height="15" fill="rgb(206,12,3)" fg:x="61696" fg:w="177"/><text x="17.4899%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (126 samples, 0.04%)</title><rect x="17.2541%" y="885" width="0.0352%" height="15" fill="rgb(252,226,20)" fg:x="61747" fg:w="126"/><text x="17.5041%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.02%)</title><rect x="17.3204%" y="885" width="0.0162%" height="15" fill="rgb(216,123,35)" fg:x="61984" fg:w="58"/><text x="17.5704%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (52 samples, 0.01%)</title><rect x="17.3366%" y="885" width="0.0145%" height="15" fill="rgb(212,68,40)" fg:x="62042" fg:w="52"/><text x="17.5866%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="17.3394%" y="869" width="0.0117%" height="15" fill="rgb(254,125,32)" fg:x="62052" fg:w="42"/><text x="17.5894%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.02%)</title><rect x="17.3888%" y="853" width="0.0196%" height="15" fill="rgb(253,97,22)" fg:x="62229" fg:w="70"/><text x="17.6388%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.02%)</title><rect x="17.3927%" y="837" width="0.0156%" height="15" fill="rgb(241,101,14)" fg:x="62243" fg:w="56"/><text x="17.6427%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (78 samples, 0.02%)</title><rect x="17.4159%" y="853" width="0.0218%" height="15" fill="rgb(238,103,29)" fg:x="62326" fg:w="78"/><text x="17.6659%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (201 samples, 0.06%)</title><rect x="17.3829%" y="869" width="0.0562%" height="15" fill="rgb(233,195,47)" fg:x="62208" fg:w="201"/><text x="17.6329%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (43 samples, 0.01%)</title><rect x="17.4766%" y="853" width="0.0120%" height="15" fill="rgb(246,218,30)" fg:x="62543" fg:w="43"/><text x="17.7266%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="17.4785%" y="837" width="0.0101%" height="15" fill="rgb(219,145,47)" fg:x="62550" fg:w="36"/><text x="17.7285%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (233 samples, 0.07%)</title><rect x="17.4500%" y="869" width="0.0651%" height="15" fill="rgb(243,12,26)" fg:x="62448" fg:w="233"/><text x="17.7000%" y="879.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (83 samples, 0.02%)</title><rect x="17.4919%" y="853" width="0.0232%" height="15" fill="rgb(214,87,16)" fg:x="62598" fg:w="83"/><text x="17.7419%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (838 samples, 0.23%)</title><rect x="17.2893%" y="901" width="0.2342%" height="15" fill="rgb(208,99,42)" fg:x="61873" fg:w="838"/><text x="17.5393%" y="911.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (589 samples, 0.16%)</title><rect x="17.3589%" y="885" width="0.1646%" height="15" fill="rgb(253,99,2)" fg:x="62122" fg:w="589"/><text x="17.6089%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (93 samples, 0.03%)</title><rect x="17.5615%" y="885" width="0.0260%" height="15" fill="rgb(220,168,23)" fg:x="62847" fg:w="93"/><text x="17.8115%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (38 samples, 0.01%)</title><rect x="17.5875%" y="885" width="0.0106%" height="15" fill="rgb(242,38,24)" fg:x="62940" fg:w="38"/><text x="17.8375%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.02%)</title><rect x="17.6258%" y="869" width="0.0221%" height="15" fill="rgb(225,182,9)" fg:x="63077" fg:w="79"/><text x="17.8758%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.01%)</title><rect x="17.6571%" y="869" width="0.0106%" height="15" fill="rgb(243,178,37)" fg:x="63189" fg:w="38"/><text x="17.9071%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (36 samples, 0.01%)</title><rect x="17.6889%" y="837" width="0.0101%" height="15" fill="rgb(232,139,19)" fg:x="63303" fg:w="36"/><text x="17.9389%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (53 samples, 0.01%)</title><rect x="17.7110%" y="821" width="0.0148%" height="15" fill="rgb(225,201,24)" fg:x="63382" fg:w="53"/><text x="17.9610%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (246 samples, 0.07%)</title><rect x="17.6842%" y="853" width="0.0687%" height="15" fill="rgb(221,47,46)" fg:x="63286" fg:w="246"/><text x="17.9342%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (183 samples, 0.05%)</title><rect x="17.7018%" y="837" width="0.0511%" height="15" fill="rgb(249,23,13)" fg:x="63349" fg:w="183"/><text x="17.9518%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (97 samples, 0.03%)</title><rect x="17.7258%" y="821" width="0.0271%" height="15" fill="rgb(219,9,5)" fg:x="63435" fg:w="97"/><text x="17.9758%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (53 samples, 0.01%)</title><rect x="17.8387%" y="837" width="0.0148%" height="15" fill="rgb(254,171,16)" fg:x="63839" fg:w="53"/><text x="18.0887%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (320 samples, 0.09%)</title><rect x="17.7705%" y="853" width="0.0894%" height="15" fill="rgb(230,171,20)" fg:x="63595" fg:w="320"/><text x="18.0205%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (709 samples, 0.20%)</title><rect x="17.6677%" y="869" width="0.1981%" height="15" fill="rgb(210,71,41)" fg:x="63227" fg:w="709"/><text x="17.9177%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="17.8708%" y="869" width="0.0159%" height="15" fill="rgb(206,173,20)" fg:x="63954" fg:w="57"/><text x="18.1208%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (78 samples, 0.02%)</title><rect x="17.9164%" y="853" width="0.0218%" height="15" fill="rgb(233,88,34)" fg:x="64117" fg:w="78"/><text x="18.1664%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (115 samples, 0.03%)</title><rect x="17.9466%" y="853" width="0.0321%" height="15" fill="rgb(223,209,46)" fg:x="64225" fg:w="115"/><text x="18.1966%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="17.9787%" y="853" width="0.0226%" height="15" fill="rgb(250,43,18)" fg:x="64340" fg:w="81"/><text x="18.2287%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (194 samples, 0.05%)</title><rect x="18.0013%" y="853" width="0.0542%" height="15" fill="rgb(208,13,10)" fg:x="64421" fg:w="194"/><text x="18.2513%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (146 samples, 0.04%)</title><rect x="18.0147%" y="837" width="0.0408%" height="15" fill="rgb(212,200,36)" fg:x="64469" fg:w="146"/><text x="18.2647%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.02%)</title><rect x="18.0790%" y="837" width="0.0212%" height="15" fill="rgb(225,90,30)" fg:x="64699" fg:w="76"/><text x="18.3290%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (195 samples, 0.05%)</title><rect x="18.1002%" y="837" width="0.0545%" height="15" fill="rgb(236,182,39)" fg:x="64775" fg:w="195"/><text x="18.3502%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (165 samples, 0.05%)</title><rect x="18.1547%" y="837" width="0.0461%" height="15" fill="rgb(212,144,35)" fg:x="64970" fg:w="165"/><text x="18.4047%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (142 samples, 0.04%)</title><rect x="18.1612%" y="821" width="0.0397%" height="15" fill="rgb(228,63,44)" fg:x="64993" fg:w="142"/><text x="18.4112%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,153 samples, 0.32%)</title><rect x="17.8868%" y="869" width="0.3222%" height="15" fill="rgb(228,109,6)" fg:x="64011" fg:w="1153"/><text x="18.1368%" y="879.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (510 samples, 0.14%)</title><rect x="18.0664%" y="853" width="0.1425%" height="15" fill="rgb(238,117,24)" fg:x="64654" fg:w="510"/><text x="18.3164%" y="863.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (47 samples, 0.01%)</title><rect x="18.2260%" y="869" width="0.0131%" height="15" fill="rgb(242,26,26)" fg:x="65225" fg:w="47"/><text x="18.4760%" y="879.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2,501 samples, 0.70%)</title><rect x="17.5445%" y="901" width="0.6989%" height="15" fill="rgb(221,92,48)" fg:x="62786" fg:w="2501"/><text x="17.7945%" y="911.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (2,240 samples, 0.63%)</title><rect x="17.6174%" y="885" width="0.6259%" height="15" fill="rgb(209,209,32)" fg:x="63047" fg:w="2240"/><text x="17.8674%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (151 samples, 0.04%)</title><rect x="18.2861%" y="885" width="0.0422%" height="15" fill="rgb(221,70,22)" fg:x="65440" fg:w="151"/><text x="18.5361%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (72 samples, 0.02%)</title><rect x="18.3707%" y="869" width="0.0201%" height="15" fill="rgb(248,145,5)" fg:x="65743" fg:w="72"/><text x="18.6207%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (68 samples, 0.02%)</title><rect x="18.4071%" y="853" width="0.0190%" height="15" fill="rgb(226,116,26)" fg:x="65873" fg:w="68"/><text x="18.6571%" y="863.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (177 samples, 0.05%)</title><rect x="18.4350%" y="853" width="0.0495%" height="15" fill="rgb(244,5,17)" fg:x="65973" fg:w="177"/><text x="18.6850%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.02%)</title><rect x="18.5029%" y="837" width="0.0170%" height="15" fill="rgb(252,159,33)" fg:x="66216" fg:w="61"/><text x="18.7529%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (367 samples, 0.10%)</title><rect x="18.5200%" y="837" width="0.1026%" height="15" fill="rgb(206,71,0)" fg:x="66277" fg:w="367"/><text x="18.7700%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (555 samples, 0.16%)</title><rect x="18.4845%" y="853" width="0.1551%" height="15" fill="rgb(233,118,54)" fg:x="66150" fg:w="555"/><text x="18.7345%" y="863.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (61 samples, 0.02%)</title><rect x="18.6225%" y="837" width="0.0170%" height="15" fill="rgb(234,83,48)" fg:x="66644" fg:w="61"/><text x="18.8725%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (889 samples, 0.25%)</title><rect x="18.3962%" y="869" width="0.2484%" height="15" fill="rgb(228,3,54)" fg:x="65834" fg:w="889"/><text x="18.6462%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.02%)</title><rect x="18.6446%" y="869" width="0.0159%" height="15" fill="rgb(226,155,13)" fg:x="66723" fg:w="57"/><text x="18.8946%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (1,198 samples, 0.33%)</title><rect x="18.3283%" y="885" width="0.3348%" height="15" fill="rgb(241,28,37)" fg:x="65591" fg:w="1198"/><text x="18.5783%" y="895.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (6,030 samples, 1.68%)</title><rect x="16.9806%" y="917" width="1.6850%" height="15" fill="rgb(233,93,10)" fg:x="60768" fg:w="6030"/><text x="17.2306%" y="927.50"></text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (1,478 samples, 0.41%)</title><rect x="18.2525%" y="901" width="0.4130%" height="15" fill="rgb(225,113,19)" fg:x="65320" fg:w="1478"/><text x="18.5025%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,110 samples, 1.99%)</title><rect x="16.6805%" y="933" width="1.9868%" height="15" fill="rgb(241,2,18)" fg:x="59694" fg:w="7110"/><text x="16.9305%" y="943.50">s..</text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (49 samples, 0.01%)</title><rect x="18.6784%" y="933" width="0.0137%" height="15" fill="rgb(228,207,21)" fg:x="66844" fg:w="49"/><text x="18.9284%" y="943.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8,333 samples, 2.33%)</title><rect x="16.3711%" y="965" width="2.3285%" height="15" fill="rgb(213,211,35)" fg:x="58587" fg:w="8333"/><text x="16.6211%" y="975.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (8,209 samples, 2.29%)</title><rect x="16.4058%" y="949" width="2.2939%" height="15" fill="rgb(209,83,10)" fg:x="58711" fg:w="8209"/><text x="16.6558%" y="959.50">s..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (93 samples, 0.03%)</title><rect x="18.7239%" y="949" width="0.0260%" height="15" fill="rgb(209,164,1)" fg:x="67007" fg:w="93"/><text x="18.9739%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (40 samples, 0.01%)</title><rect x="18.8078%" y="933" width="0.0112%" height="15" fill="rgb(213,184,43)" fg:x="67307" fg:w="40"/><text x="19.0578%" y="943.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (297 samples, 0.08%)</title><rect x="18.8455%" y="917" width="0.0830%" height="15" fill="rgb(231,61,34)" fg:x="67442" fg:w="297"/><text x="19.0955%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_free (40 samples, 0.01%)</title><rect x="18.9640%" y="901" width="0.0112%" height="15" fill="rgb(235,75,3)" fg:x="67866" fg:w="40"/><text x="19.2140%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.02%)</title><rect x="18.9852%" y="901" width="0.0240%" height="15" fill="rgb(220,106,47)" fg:x="67942" fg:w="86"/><text x="19.2352%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (367 samples, 0.10%)</title><rect x="19.0140%" y="901" width="0.1026%" height="15" fill="rgb(210,196,33)" fg:x="68045" fg:w="367"/><text x="19.2640%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (89 samples, 0.02%)</title><rect x="19.1682%" y="885" width="0.0249%" height="15" fill="rgb(229,154,42)" fg:x="68597" fg:w="89"/><text x="19.4182%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (53 samples, 0.01%)</title><rect x="19.1931%" y="885" width="0.0148%" height="15" fill="rgb(228,114,26)" fg:x="68686" fg:w="53"/><text x="19.4431%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.02%)</title><rect x="19.2320%" y="869" width="0.0168%" height="15" fill="rgb(208,144,1)" fg:x="68825" fg:w="60"/><text x="19.4820%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96 samples, 0.03%)</title><rect x="19.2683%" y="853" width="0.0268%" height="15" fill="rgb(239,112,37)" fg:x="68955" fg:w="96"/><text x="19.5183%" y="863.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.01%)</title><rect x="19.3409%" y="805" width="0.0101%" height="15" fill="rgb(210,96,50)" fg:x="69215" fg:w="36"/><text x="19.5909%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="19.3325%" y="821" width="0.0215%" height="15" fill="rgb(222,178,2)" fg:x="69185" fg:w="77"/><text x="19.5825%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (128 samples, 0.04%)</title><rect x="19.3191%" y="837" width="0.0358%" height="15" fill="rgb(226,74,18)" fg:x="69137" fg:w="128"/><text x="19.5691%" y="847.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (241 samples, 0.07%)</title><rect x="19.2951%" y="853" width="0.0673%" height="15" fill="rgb(225,67,54)" fg:x="69051" fg:w="241"/><text x="19.5451%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (416 samples, 0.12%)</title><rect x="19.2487%" y="869" width="0.1162%" height="15" fill="rgb(251,92,32)" fg:x="68885" fg:w="416"/><text x="19.4987%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (554 samples, 0.15%)</title><rect x="19.2127%" y="885" width="0.1548%" height="15" fill="rgb(228,149,22)" fg:x="68756" fg:w="554"/><text x="19.4627%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (137 samples, 0.04%)</title><rect x="19.4010%" y="869" width="0.0383%" height="15" fill="rgb(243,54,13)" fg:x="69430" fg:w="137"/><text x="19.6510%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (66 samples, 0.02%)</title><rect x="19.4809%" y="853" width="0.0184%" height="15" fill="rgb(243,180,28)" fg:x="69716" fg:w="66"/><text x="19.7309%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="19.5206%" y="837" width="0.0117%" height="15" fill="rgb(208,167,24)" fg:x="69858" fg:w="42"/><text x="19.7706%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.01%)</title><rect x="19.5323%" y="837" width="0.0106%" height="15" fill="rgb(245,73,45)" fg:x="69900" fg:w="38"/><text x="19.7823%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (160 samples, 0.04%)</title><rect x="19.5430%" y="837" width="0.0447%" height="15" fill="rgb(237,203,48)" fg:x="69938" fg:w="160"/><text x="19.7930%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.01%)</title><rect x="19.6109%" y="821" width="0.0123%" height="15" fill="rgb(211,197,16)" fg:x="70181" fg:w="44"/><text x="19.8609%" y="831.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (389 samples, 0.11%)</title><rect x="19.6232%" y="821" width="0.1087%" height="15" fill="rgb(243,99,51)" fg:x="70225" fg:w="389"/><text x="19.8732%" y="831.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (561 samples, 0.16%)</title><rect x="19.5877%" y="837" width="0.1568%" height="15" fill="rgb(215,123,29)" fg:x="70098" fg:w="561"/><text x="19.8377%" y="847.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (45 samples, 0.01%)</title><rect x="19.7319%" y="821" width="0.0126%" height="15" fill="rgb(239,186,37)" fg:x="70614" fg:w="45"/><text x="19.9819%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (875 samples, 0.24%)</title><rect x="19.5064%" y="853" width="0.2445%" height="15" fill="rgb(252,136,39)" fg:x="69807" fg:w="875"/><text x="19.7564%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="19.7509%" y="853" width="0.0190%" height="15" fill="rgb(223,213,32)" fg:x="70682" fg:w="68"/><text x="20.0009%" y="863.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (1,191 samples, 0.33%)</title><rect x="19.4393%" y="869" width="0.3328%" height="15" fill="rgb(233,115,5)" fg:x="69567" fg:w="1191"/><text x="19.6893%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,454 samples, 0.41%)</title><rect x="19.3675%" y="885" width="0.4063%" height="15" fill="rgb(207,226,44)" fg:x="69310" fg:w="1454"/><text x="19.6175%" y="895.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (2,384 samples, 0.67%)</title><rect x="19.1174%" y="901" width="0.6662%" height="15" fill="rgb(208,126,0)" fg:x="68415" fg:w="2384"/><text x="19.3674%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,093 samples, 0.86%)</title><rect x="18.9285%" y="917" width="0.8643%" height="15" fill="rgb(244,66,21)" fg:x="67739" fg:w="3093"/><text x="19.1785%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,492 samples, 0.98%)</title><rect x="18.8254%" y="933" width="0.9758%" height="15" fill="rgb(222,97,12)" fg:x="67370" fg:w="3492"/><text x="19.0754%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.02%)</title><rect x="19.8012%" y="933" width="0.0218%" height="15" fill="rgb(219,213,19)" fg:x="70862" fg:w="78"/><text x="20.0512%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (3,846 samples, 1.07%)</title><rect x="18.7499%" y="949" width="1.0747%" height="15" fill="rgb(252,169,30)" fg:x="67100" fg:w="3846"/><text x="18.9999%" y="959.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (13,471 samples, 3.76%)</title><rect x="16.0621%" y="981" width="3.7642%" height="15" fill="rgb(206,32,51)" fg:x="57481" fg:w="13471"/><text x="16.3121%" y="991.50">sk-g..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (4,011 samples, 1.12%)</title><rect x="18.7055%" y="965" width="1.1208%" height="15" fill="rgb(250,172,42)" fg:x="66941" fg:w="4011"/><text x="18.9555%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,597 samples, 4.08%)</title><rect x="15.7477%" y="997" width="4.0789%" height="15" fill="rgb(209,34,43)" fg:x="56356" fg:w="14597"/><text x="15.9977%" y="1007.50">sk-g..</text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (52 samples, 0.01%)</title><rect x="19.8523%" y="997" width="0.0145%" height="15" fill="rgb(223,11,35)" fg:x="71045" fg:w="52"/><text x="20.1023%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,030 samples, 4.76%)</title><rect x="15.1176%" y="1029" width="4.7587%" height="15" fill="rgb(251,219,26)" fg:x="54101" fg:w="17030"/><text x="15.3676%" y="1039.50">sk-gen..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (16,295 samples, 4.55%)</title><rect x="15.3230%" y="1013" width="4.5534%" height="15" fill="rgb(231,119,3)" fg:x="54836" fg:w="16295"/><text x="15.5730%" y="1023.50">sk-ge..</text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (78 samples, 0.02%)</title><rect x="19.9266%" y="981" width="0.0218%" height="15" fill="rgb(216,97,11)" fg:x="71311" fg:w="78"/><text x="20.1766%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (127 samples, 0.04%)</title><rect x="19.9149%" y="997" width="0.0355%" height="15" fill="rgb(223,59,9)" fg:x="71269" fg:w="127"/><text x="20.1649%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.01%)</title><rect x="19.9724%" y="981" width="0.0126%" height="15" fill="rgb(233,93,31)" fg:x="71475" fg:w="45"/><text x="20.2224%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (61 samples, 0.02%)</title><rect x="19.9912%" y="981" width="0.0170%" height="15" fill="rgb(239,81,33)" fg:x="71542" fg:w="61"/><text x="20.2412%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (40 samples, 0.01%)</title><rect x="19.9970%" y="965" width="0.0112%" height="15" fill="rgb(213,120,34)" fg:x="71563" fg:w="40"/><text x="20.2470%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (46 samples, 0.01%)</title><rect x="20.0158%" y="965" width="0.0129%" height="15" fill="rgb(243,49,53)" fg:x="71630" fg:w="46"/><text x="20.2658%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (46 samples, 0.01%)</title><rect x="20.0286%" y="965" width="0.0129%" height="15" fill="rgb(247,216,33)" fg:x="71676" fg:w="46"/><text x="20.2786%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="20.0314%" y="949" width="0.0101%" height="15" fill="rgb(226,26,14)" fg:x="71686" fg:w="36"/><text x="20.2814%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (327 samples, 0.09%)</title><rect x="19.9532%" y="997" width="0.0914%" height="15" fill="rgb(215,49,53)" fg:x="71406" fg:w="327"/><text x="20.2032%" y="1007.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (123 samples, 0.03%)</title><rect x="20.0102%" y="981" width="0.0344%" height="15" fill="rgb(245,162,40)" fg:x="71610" fg:w="123"/><text x="20.2602%" y="991.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (546 samples, 0.15%)</title><rect x="19.8990%" y="1029" width="0.1526%" height="15" fill="rgb(229,68,17)" fg:x="71212" fg:w="546"/><text x="20.1490%" y="1039.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (519 samples, 0.15%)</title><rect x="19.9065%" y="1013" width="0.1450%" height="15" fill="rgb(213,182,10)" fg:x="71239" fg:w="519"/><text x="20.1565%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.01%)</title><rect x="20.0895%" y="981" width="0.0131%" height="15" fill="rgb(245,125,30)" fg:x="71894" fg:w="47"/><text x="20.3395%" y="991.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (70 samples, 0.02%)</title><rect x="20.1127%" y="965" width="0.0196%" height="15" fill="rgb(232,202,2)" fg:x="71977" fg:w="70"/><text x="20.3627%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.03%)</title><rect x="20.1027%" y="981" width="0.0324%" height="15" fill="rgb(237,140,51)" fg:x="71941" fg:w="116"/><text x="20.3527%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (177 samples, 0.05%)</title><rect x="20.0862%" y="997" width="0.0495%" height="15" fill="rgb(236,157,25)" fg:x="71882" fg:w="177"/><text x="20.3362%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,207 samples, 5.65%)</title><rect x="14.4933%" y="1061" width="5.6465%" height="15" fill="rgb(219,209,0)" fg:x="51867" fg:w="20207"/><text x="14.7433%" y="1071.50">sk-gen`..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (19,219 samples, 5.37%)</title><rect x="14.7694%" y="1045" width="5.3704%" height="15" fill="rgb(240,116,54)" fg:x="52855" fg:w="19219"/><text x="15.0194%" y="1055.50">sk-gen`..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (262 samples, 0.07%)</title><rect x="20.0666%" y="1029" width="0.0732%" height="15" fill="rgb(216,10,36)" fg:x="71812" fg:w="262"/><text x="20.3166%" y="1039.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (238 samples, 0.07%)</title><rect x="20.0733%" y="1013" width="0.0665%" height="15" fill="rgb(222,72,44)" fg:x="71836" fg:w="238"/><text x="20.3233%" y="1023.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (52 samples, 0.01%)</title><rect x="20.1552%" y="1061" width="0.0145%" height="15" fill="rgb(232,159,9)" fg:x="72129" fg:w="52"/><text x="20.4052%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21,664 samples, 6.05%)</title><rect x="14.1234%" y="1093" width="6.0536%" height="15" fill="rgb(210,39,32)" fg:x="50543" fg:w="21664"/><text x="14.3734%" y="1103.50">sk-gen`&lt;..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (21,264 samples, 5.94%)</title><rect x="14.2351%" y="1077" width="5.9419%" height="15" fill="rgb(216,194,45)" fg:x="50943" fg:w="21264"/><text x="14.4851%" y="1087.50">sk-gen`s..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::PartialEq&gt;::eq (56,485 samples, 15.78%)</title><rect x="4.4075%" y="1141" width="15.7838%" height="15" fill="rgb(218,18,35)" fg:x="15773" fg:w="56485"/><text x="4.6575%" y="1151.50">sk-gen`&lt;sk_gen::DynamicO..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_eq (32,768 samples, 9.16%)</title><rect x="11.0348%" y="1125" width="9.1564%" height="15" fill="rgb(207,83,51)" fg:x="39490" fg:w="32768"/><text x="11.2848%" y="1135.50">sk-gen`sk_cor..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (22,113 samples, 6.18%)</title><rect x="14.0121%" y="1109" width="6.1791%" height="15" fill="rgb(225,63,43)" fg:x="50145" fg:w="22113"/><text x="14.2621%" y="1119.50">sk-gen`s..</text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (56,695 samples, 15.84%)</title><rect x="4.3502%" y="1157" width="15.8424%" height="15" fill="rgb(207,57,36)" fg:x="15568" fg:w="56695"/><text x="4.6002%" y="1167.50">sk-gen`&lt;alloc::collectio..</text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (72 samples, 0.02%)</title><rect x="20.2930%" y="997" width="0.0201%" height="15" fill="rgb(216,99,33)" fg:x="72622" fg:w="72"/><text x="20.5430%" y="1007.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (87 samples, 0.02%)</title><rect x="20.2904%" y="1013" width="0.0243%" height="15" fill="rgb(225,42,16)" fg:x="72613" fg:w="87"/><text x="20.5404%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (54 samples, 0.02%)</title><rect x="20.3148%" y="1013" width="0.0151%" height="15" fill="rgb(220,201,45)" fg:x="72700" fg:w="54"/><text x="20.5648%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (222 samples, 0.06%)</title><rect x="20.2762%" y="1029" width="0.0620%" height="15" fill="rgb(225,33,4)" fg:x="72562" fg:w="222"/><text x="20.5262%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (230 samples, 0.06%)</title><rect x="20.2745%" y="1045" width="0.0643%" height="15" fill="rgb(224,33,50)" fg:x="72556" fg:w="230"/><text x="20.5245%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (381 samples, 0.11%)</title><rect x="20.2522%" y="1061" width="0.1065%" height="15" fill="rgb(246,198,51)" fg:x="72476" fg:w="381"/><text x="20.5022%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (490 samples, 0.14%)</title><rect x="20.2312%" y="1077" width="0.1369%" height="15" fill="rgb(205,22,4)" fg:x="72401" fg:w="490"/><text x="20.4812%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (587 samples, 0.16%)</title><rect x="20.2136%" y="1093" width="0.1640%" height="15" fill="rgb(206,3,8)" fg:x="72338" fg:w="587"/><text x="20.4636%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (623 samples, 0.17%)</title><rect x="20.2088%" y="1109" width="0.1741%" height="15" fill="rgb(251,23,15)" fg:x="72321" fg:w="623"/><text x="20.4588%" y="1119.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (627 samples, 0.18%)</title><rect x="20.2080%" y="1125" width="0.1752%" height="15" fill="rgb(252,88,28)" fg:x="72318" fg:w="627"/><text x="20.4580%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (86 samples, 0.02%)</title><rect x="20.3877%" y="1093" width="0.0240%" height="15" fill="rgb(212,127,14)" fg:x="72961" fg:w="86"/><text x="20.6377%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (58 samples, 0.02%)</title><rect x="20.4229%" y="1093" width="0.0162%" height="15" fill="rgb(247,145,37)" fg:x="73087" fg:w="58"/><text x="20.6729%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (91 samples, 0.03%)</title><rect x="20.4427%" y="1077" width="0.0254%" height="15" fill="rgb(209,117,53)" fg:x="73158" fg:w="91"/><text x="20.6927%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (200 samples, 0.06%)</title><rect x="20.4682%" y="1077" width="0.0559%" height="15" fill="rgb(212,90,42)" fg:x="73249" fg:w="200"/><text x="20.7182%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (282 samples, 0.08%)</title><rect x="20.5618%" y="1061" width="0.0788%" height="15" fill="rgb(218,164,37)" fg:x="73584" fg:w="282"/><text x="20.8118%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`madvise (197 samples, 0.06%)</title><rect x="20.6450%" y="1029" width="0.0550%" height="15" fill="rgb(246,65,34)" fg:x="73882" fg:w="197"/><text x="20.8950%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (200 samples, 0.06%)</title><rect x="20.6445%" y="1061" width="0.0559%" height="15" fill="rgb(231,100,33)" fg:x="73880" fg:w="200"/><text x="20.8945%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (199 samples, 0.06%)</title><rect x="20.6448%" y="1045" width="0.0556%" height="15" fill="rgb(228,126,14)" fg:x="73881" fg:w="199"/><text x="20.8948%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (63 samples, 0.02%)</title><rect x="20.7817%" y="1013" width="0.0176%" height="15" fill="rgb(215,173,21)" fg:x="74371" fg:w="63"/><text x="21.0317%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (248 samples, 0.07%)</title><rect x="20.7303%" y="1045" width="0.0693%" height="15" fill="rgb(210,6,40)" fg:x="74187" fg:w="248"/><text x="20.9803%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (189 samples, 0.05%)</title><rect x="20.7468%" y="1029" width="0.0528%" height="15" fill="rgb(212,48,18)" fg:x="74246" fg:w="189"/><text x="20.9968%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,344 samples, 0.38%)</title><rect x="20.4391%" y="1093" width="0.3756%" height="15" fill="rgb(230,214,11)" fg:x="73145" fg:w="1344"/><text x="20.6891%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (967 samples, 0.27%)</title><rect x="20.5444%" y="1077" width="0.2702%" height="15" fill="rgb(254,105,39)" fg:x="73522" fg:w="967"/><text x="20.7944%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (380 samples, 0.11%)</title><rect x="20.7085%" y="1061" width="0.1062%" height="15" fill="rgb(245,158,5)" fg:x="74109" fg:w="380"/><text x="20.9585%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (44 samples, 0.01%)</title><rect x="20.8024%" y="1045" width="0.0123%" height="15" fill="rgb(249,208,11)" fg:x="74445" fg:w="44"/><text x="21.0524%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (72 samples, 0.02%)</title><rect x="20.8208%" y="1077" width="0.0201%" height="15" fill="rgb(210,39,28)" fg:x="74511" fg:w="72"/><text x="21.0708%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (65 samples, 0.02%)</title><rect x="20.8409%" y="1077" width="0.0182%" height="15" fill="rgb(211,56,53)" fg:x="74583" fg:w="65"/><text x="21.0909%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (115 samples, 0.03%)</title><rect x="20.9002%" y="1061" width="0.0321%" height="15" fill="rgb(226,201,30)" fg:x="74795" fg:w="115"/><text x="21.1502%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (72 samples, 0.02%)</title><rect x="20.9122%" y="1045" width="0.0201%" height="15" fill="rgb(239,101,34)" fg:x="74838" fg:w="72"/><text x="21.1622%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (239 samples, 0.07%)</title><rect x="20.8725%" y="1077" width="0.0668%" height="15" fill="rgb(226,209,5)" fg:x="74696" fg:w="239"/><text x="21.1225%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (58 samples, 0.02%)</title><rect x="20.9611%" y="1061" width="0.0162%" height="15" fill="rgb(250,105,47)" fg:x="75013" fg:w="58"/><text x="21.2111%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (219 samples, 0.06%)</title><rect x="20.9773%" y="1061" width="0.0612%" height="15" fill="rgb(230,72,3)" fg:x="75071" fg:w="219"/><text x="21.2273%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (45 samples, 0.01%)</title><rect x="21.0402%" y="1061" width="0.0126%" height="15" fill="rgb(232,218,39)" fg:x="75296" fg:w="45"/><text x="21.2902%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (44 samples, 0.01%)</title><rect x="21.0404%" y="1045" width="0.0123%" height="15" fill="rgb(248,166,6)" fg:x="75297" fg:w="44"/><text x="21.2904%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`madvise (44 samples, 0.01%)</title><rect x="21.0404%" y="1029" width="0.0123%" height="15" fill="rgb(247,89,20)" fg:x="75297" fg:w="44"/><text x="21.2904%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (70 samples, 0.02%)</title><rect x="21.1265%" y="1013" width="0.0196%" height="15" fill="rgb(248,130,54)" fg:x="75605" fg:w="70"/><text x="21.3765%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (179 samples, 0.05%)</title><rect x="21.0963%" y="1045" width="0.0500%" height="15" fill="rgb(234,196,4)" fg:x="75497" fg:w="179"/><text x="21.3463%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (149 samples, 0.04%)</title><rect x="21.1047%" y="1029" width="0.0416%" height="15" fill="rgb(250,143,31)" fg:x="75527" fg:w="149"/><text x="21.3547%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (324 samples, 0.09%)</title><rect x="21.0650%" y="1061" width="0.0905%" height="15" fill="rgb(211,110,34)" fg:x="75385" fg:w="324"/><text x="21.3150%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (240 samples, 0.07%)</title><rect x="21.1804%" y="1045" width="0.0671%" height="15" fill="rgb(215,124,48)" fg:x="75798" fg:w="240"/><text x="21.4304%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (197 samples, 0.06%)</title><rect x="21.2475%" y="1045" width="0.0550%" height="15" fill="rgb(216,46,13)" fg:x="76038" fg:w="197"/><text x="21.4975%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (70 samples, 0.02%)</title><rect x="21.3154%" y="1045" width="0.0196%" height="15" fill="rgb(205,184,25)" fg:x="76281" fg:w="70"/><text x="21.5654%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (273 samples, 0.08%)</title><rect x="21.3878%" y="1029" width="0.0763%" height="15" fill="rgb(228,1,10)" fg:x="76540" fg:w="273"/><text x="21.6378%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (194 samples, 0.05%)</title><rect x="21.4098%" y="1013" width="0.0542%" height="15" fill="rgb(213,116,27)" fg:x="76619" fg:w="194"/><text x="21.6598%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (69 samples, 0.02%)</title><rect x="21.4448%" y="997" width="0.0193%" height="15" fill="rgb(241,95,50)" fg:x="76744" fg:w="69"/><text x="21.6948%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (536 samples, 0.15%)</title><rect x="21.3375%" y="1045" width="0.1498%" height="15" fill="rgb(238,48,32)" fg:x="76360" fg:w="536"/><text x="21.5875%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (69 samples, 0.02%)</title><rect x="21.4680%" y="1029" width="0.0193%" height="15" fill="rgb(235,113,49)" fg:x="76827" fg:w="69"/><text x="21.7180%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (105 samples, 0.03%)</title><rect x="21.5102%" y="1013" width="0.0293%" height="15" fill="rgb(205,127,43)" fg:x="76978" fg:w="105"/><text x="21.7602%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.01%)</title><rect x="21.5644%" y="997" width="0.0123%" height="15" fill="rgb(250,162,2)" fg:x="77172" fg:w="44"/><text x="21.8144%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (76 samples, 0.02%)</title><rect x="21.5577%" y="1013" width="0.0212%" height="15" fill="rgb(220,13,41)" fg:x="77148" fg:w="76"/><text x="21.8077%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (333 samples, 0.09%)</title><rect x="21.4873%" y="1045" width="0.0931%" height="15" fill="rgb(249,221,25)" fg:x="76896" fg:w="333"/><text x="21.7373%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (260 samples, 0.07%)</title><rect x="21.5077%" y="1029" width="0.0727%" height="15" fill="rgb(215,208,19)" fg:x="76969" fg:w="260"/><text x="21.7577%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (62 samples, 0.02%)</title><rect x="21.6116%" y="1029" width="0.0173%" height="15" fill="rgb(236,175,2)" fg:x="77341" fg:w="62"/><text x="21.8616%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (534 samples, 0.15%)</title><rect x="21.6289%" y="1029" width="0.1492%" height="15" fill="rgb(241,52,2)" fg:x="77403" fg:w="534"/><text x="21.8789%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (199 samples, 0.06%)</title><rect x="21.7843%" y="1029" width="0.0556%" height="15" fill="rgb(248,140,14)" fg:x="77959" fg:w="199"/><text x="22.0343%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (198 samples, 0.06%)</title><rect x="21.7846%" y="1013" width="0.0553%" height="15" fill="rgb(253,22,42)" fg:x="77960" fg:w="198"/><text x="22.0346%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`madvise (197 samples, 0.06%)</title><rect x="21.7848%" y="997" width="0.0550%" height="15" fill="rgb(234,61,47)" fg:x="77961" fg:w="197"/><text x="22.0348%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (444 samples, 0.12%)</title><rect x="21.9134%" y="1013" width="0.1241%" height="15" fill="rgb(208,226,15)" fg:x="78421" fg:w="444"/><text x="22.1634%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (328 samples, 0.09%)</title><rect x="21.9458%" y="997" width="0.0917%" height="15" fill="rgb(217,221,4)" fg:x="78537" fg:w="328"/><text x="22.1958%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (109 samples, 0.03%)</title><rect x="22.0070%" y="981" width="0.0305%" height="15" fill="rgb(212,174,34)" fg:x="78756" fg:w="109"/><text x="22.2570%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (761 samples, 0.21%)</title><rect x="21.8567%" y="1029" width="0.2126%" height="15" fill="rgb(253,83,4)" fg:x="78218" fg:w="761"/><text x="22.1067%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (93 samples, 0.03%)</title><rect x="22.0433%" y="1013" width="0.0260%" height="15" fill="rgb(250,195,49)" fg:x="78886" fg:w="93"/><text x="22.2933%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (97 samples, 0.03%)</title><rect x="22.0998%" y="1013" width="0.0271%" height="15" fill="rgb(241,192,25)" fg:x="79088" fg:w="97"/><text x="22.3498%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (82 samples, 0.02%)</title><rect x="22.1517%" y="997" width="0.0229%" height="15" fill="rgb(208,124,10)" fg:x="79274" fg:w="82"/><text x="22.4017%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.01%)</title><rect x="22.1612%" y="981" width="0.0134%" height="15" fill="rgb(222,33,0)" fg:x="79308" fg:w="48"/><text x="22.4112%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (142 samples, 0.04%)</title><rect x="22.1420%" y="1013" width="0.0397%" height="15" fill="rgb(234,209,28)" fg:x="79239" fg:w="142"/><text x="22.3920%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (220 samples, 0.06%)</title><rect x="22.1853%" y="997" width="0.0615%" height="15" fill="rgb(224,11,23)" fg:x="79394" fg:w="220"/><text x="22.4353%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (37 samples, 0.01%)</title><rect x="22.2468%" y="997" width="0.0103%" height="15" fill="rgb(232,99,1)" fg:x="79614" fg:w="37"/><text x="22.4968%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (65 samples, 0.02%)</title><rect x="22.2582%" y="997" width="0.0182%" height="15" fill="rgb(237,95,45)" fg:x="79655" fg:w="65"/><text x="22.5082%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (51 samples, 0.01%)</title><rect x="22.2794%" y="997" width="0.0143%" height="15" fill="rgb(208,109,11)" fg:x="79731" fg:w="51"/><text x="22.5294%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (52 samples, 0.01%)</title><rect x="22.3060%" y="981" width="0.0145%" height="15" fill="rgb(216,190,48)" fg:x="79826" fg:w="52"/><text x="22.5560%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (559 samples, 0.16%)</title><rect x="22.3205%" y="981" width="0.1562%" height="15" fill="rgb(251,171,36)" fg:x="79878" fg:w="559"/><text x="22.5705%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`madvise (220 samples, 0.06%)</title><rect x="22.4818%" y="949" width="0.0615%" height="15" fill="rgb(230,62,22)" fg:x="80455" fg:w="220"/><text x="22.7318%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (222 samples, 0.06%)</title><rect x="22.4818%" y="981" width="0.0620%" height="15" fill="rgb(225,114,35)" fg:x="80455" fg:w="222"/><text x="22.7318%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (222 samples, 0.06%)</title><rect x="22.4818%" y="965" width="0.0620%" height="15" fill="rgb(215,118,42)" fg:x="80455" fg:w="222"/><text x="22.7318%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (77 samples, 0.02%)</title><rect x="22.5485%" y="981" width="0.0215%" height="15" fill="rgb(243,119,21)" fg:x="80694" fg:w="77"/><text x="22.7985%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (223 samples, 0.06%)</title><rect x="22.6209%" y="965" width="0.0623%" height="15" fill="rgb(252,177,53)" fg:x="80953" fg:w="223"/><text x="22.8709%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (142 samples, 0.04%)</title><rect x="22.6435%" y="949" width="0.0397%" height="15" fill="rgb(237,209,29)" fg:x="81034" fg:w="142"/><text x="22.8935%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (450 samples, 0.13%)</title><rect x="22.5765%" y="981" width="0.1257%" height="15" fill="rgb(212,65,23)" fg:x="80794" fg:w="450"/><text x="22.8265%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (56 samples, 0.02%)</title><rect x="22.6866%" y="965" width="0.0156%" height="15" fill="rgb(230,222,46)" fg:x="81188" fg:w="56"/><text x="22.9366%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (67 samples, 0.02%)</title><rect x="22.7380%" y="965" width="0.0187%" height="15" fill="rgb(215,135,32)" fg:x="81372" fg:w="67"/><text x="22.9880%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (136 samples, 0.04%)</title><rect x="22.7567%" y="965" width="0.0380%" height="15" fill="rgb(246,101,22)" fg:x="81439" fg:w="136"/><text x="23.0067%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (178 samples, 0.05%)</title><rect x="22.8425%" y="949" width="0.0497%" height="15" fill="rgb(206,107,13)" fg:x="81746" fg:w="178"/><text x="23.0925%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (119 samples, 0.03%)</title><rect x="22.8590%" y="933" width="0.0333%" height="15" fill="rgb(250,100,44)" fg:x="81805" fg:w="119"/><text x="23.1090%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (333 samples, 0.09%)</title><rect x="22.8151%" y="965" width="0.0931%" height="15" fill="rgb(231,147,38)" fg:x="81648" fg:w="333"/><text x="23.0651%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.01%)</title><rect x="22.8956%" y="949" width="0.0126%" height="15" fill="rgb(229,8,40)" fg:x="81936" fg:w="45"/><text x="23.1456%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (165 samples, 0.05%)</title><rect x="22.9280%" y="949" width="0.0461%" height="15" fill="rgb(221,135,30)" fg:x="82052" fg:w="165"/><text x="23.1780%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (99 samples, 0.03%)</title><rect x="22.9741%" y="949" width="0.0277%" height="15" fill="rgb(249,193,18)" fg:x="82217" fg:w="99"/><text x="23.2241%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (39 samples, 0.01%)</title><rect x="23.0152%" y="949" width="0.0109%" height="15" fill="rgb(209,133,39)" fg:x="82364" fg:w="39"/><text x="23.2652%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (37 samples, 0.01%)</title><rect x="23.0403%" y="933" width="0.0103%" height="15" fill="rgb(232,100,14)" fg:x="82454" fg:w="37"/><text x="23.2903%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (408 samples, 0.11%)</title><rect x="23.0507%" y="933" width="0.1140%" height="15" fill="rgb(224,185,1)" fg:x="82491" fg:w="408"/><text x="23.3007%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (137 samples, 0.04%)</title><rect x="23.1694%" y="933" width="0.0383%" height="15" fill="rgb(223,139,8)" fg:x="82916" fg:w="137"/><text x="23.4194%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (136 samples, 0.04%)</title><rect x="23.1697%" y="917" width="0.0380%" height="15" fill="rgb(232,213,38)" fg:x="82917" fg:w="136"/><text x="23.4197%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`madvise (136 samples, 0.04%)</title><rect x="23.1697%" y="901" width="0.0380%" height="15" fill="rgb(207,94,22)" fg:x="82917" fg:w="136"/><text x="23.4197%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (79 samples, 0.02%)</title><rect x="23.2086%" y="933" width="0.0221%" height="15" fill="rgb(219,183,54)" fg:x="83056" fg:w="79"/><text x="23.4586%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (51 samples, 0.01%)</title><rect x="23.3282%" y="885" width="0.0143%" height="15" fill="rgb(216,185,54)" fg:x="83484" fg:w="51"/><text x="23.5782%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (300 samples, 0.08%)</title><rect x="23.2714%" y="917" width="0.0838%" height="15" fill="rgb(254,217,39)" fg:x="83281" fg:w="300"/><text x="23.5214%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (220 samples, 0.06%)</title><rect x="23.2938%" y="901" width="0.0615%" height="15" fill="rgb(240,178,23)" fg:x="83361" fg:w="220"/><text x="23.5438%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (46 samples, 0.01%)</title><rect x="23.3424%" y="885" width="0.0129%" height="15" fill="rgb(218,11,47)" fg:x="83535" fg:w="46"/><text x="23.5924%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (99 samples, 0.03%)</title><rect x="23.3592%" y="917" width="0.0277%" height="15" fill="rgb(218,51,51)" fg:x="83595" fg:w="99"/><text x="23.6092%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (554 samples, 0.15%)</title><rect x="23.2323%" y="933" width="0.1548%" height="15" fill="rgb(238,126,27)" fg:x="83141" fg:w="554"/><text x="23.4823%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,303 samples, 0.36%)</title><rect x="23.0348%" y="949" width="0.3641%" height="15" fill="rgb(249,202,22)" fg:x="82434" fg:w="1303"/><text x="23.2848%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (42 samples, 0.01%)</title><rect x="23.3871%" y="933" width="0.0117%" height="15" fill="rgb(254,195,49)" fg:x="83695" fg:w="42"/><text x="23.6371%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,760 samples, 0.49%)</title><rect x="22.9082%" y="965" width="0.4918%" height="15" fill="rgb(208,123,14)" fg:x="81981" fg:w="1760"/><text x="23.1582%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (80 samples, 0.02%)</title><rect x="23.4134%" y="949" width="0.0224%" height="15" fill="rgb(224,200,8)" fg:x="83789" fg:w="80"/><text x="23.6634%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (134 samples, 0.04%)</title><rect x="23.4547%" y="933" width="0.0374%" height="15" fill="rgb(217,61,36)" fg:x="83937" fg:w="134"/><text x="23.7047%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (102 samples, 0.03%)</title><rect x="23.4637%" y="917" width="0.0285%" height="15" fill="rgb(206,35,45)" fg:x="83969" fg:w="102"/><text x="23.7137%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (39 samples, 0.01%)</title><rect x="23.4813%" y="901" width="0.0109%" height="15" fill="rgb(217,65,33)" fg:x="84032" fg:w="39"/><text x="23.7313%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (195 samples, 0.05%)</title><rect x="23.4458%" y="949" width="0.0545%" height="15" fill="rgb(222,158,48)" fg:x="83905" fg:w="195"/><text x="23.6958%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,323 samples, 1.21%)</title><rect x="22.2937%" y="997" width="1.2080%" height="15" fill="rgb(254,2,54)" fg:x="79782" fg:w="4323"/><text x="22.5437%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,850 samples, 0.80%)</title><rect x="22.7053%" y="981" width="0.7964%" height="15" fill="rgb(250,143,38)" fg:x="81255" fg:w="2850"/><text x="22.9553%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (353 samples, 0.10%)</title><rect x="23.4030%" y="965" width="0.0986%" height="15" fill="rgb(248,25,0)" fg:x="83752" fg:w="353"/><text x="23.6530%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,734 samples, 1.32%)</title><rect x="22.1816%" y="1013" width="1.3228%" height="15" fill="rgb(206,152,27)" fg:x="79381" fg:w="4734"/><text x="22.4316%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11,192 samples, 3.13%)</title><rect x="20.3835%" y="1109" width="3.1274%" height="15" fill="rgb(240,77,30)" fg:x="72946" fg:w="11192"/><text x="20.6335%" y="1119.50">sk-..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,648 samples, 2.70%)</title><rect x="20.8149%" y="1093" width="2.6960%" height="15" fill="rgb(231,5,3)" fg:x="74490" fg:w="9648"/><text x="21.0649%" y="1103.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,203 samples, 2.57%)</title><rect x="20.9393%" y="1077" width="2.5716%" height="15" fill="rgb(207,226,32)" fg:x="74935" fg:w="9203"/><text x="21.1893%" y="1087.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,429 samples, 2.36%)</title><rect x="21.1556%" y="1061" width="2.3553%" height="15" fill="rgb(222,207,47)" fg:x="75709" fg:w="8429"/><text x="21.4056%" y="1071.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,907 samples, 1.93%)</title><rect x="21.5809%" y="1045" width="1.9300%" height="15" fill="rgb(229,115,45)" fg:x="77231" fg:w="6907"/><text x="21.8309%" y="1055.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,157 samples, 1.44%)</title><rect x="22.0699%" y="1029" width="1.4410%" height="15" fill="rgb(224,191,6)" fg:x="78981" fg:w="5157"/><text x="22.3199%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.01%)</title><rect x="23.5176%" y="1093" width="0.0140%" height="15" fill="rgb(230,227,24)" fg:x="84162" fg:w="50"/><text x="23.7676%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (62 samples, 0.02%)</title><rect x="23.6143%" y="949" width="0.0173%" height="15" fill="rgb(228,80,19)" fg:x="84508" fg:w="62"/><text x="23.8643%" y="959.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (75 samples, 0.02%)</title><rect x="23.6109%" y="965" width="0.0210%" height="15" fill="rgb(247,229,0)" fg:x="84496" fg:w="75"/><text x="23.8609%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (179 samples, 0.05%)</title><rect x="23.5953%" y="981" width="0.0500%" height="15" fill="rgb(237,194,15)" fg:x="84440" fg:w="179"/><text x="23.8453%" y="991.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (190 samples, 0.05%)</title><rect x="23.5928%" y="997" width="0.0531%" height="15" fill="rgb(219,203,20)" fg:x="84431" fg:w="190"/><text x="23.8428%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (280 samples, 0.08%)</title><rect x="23.5771%" y="1013" width="0.0782%" height="15" fill="rgb(234,128,8)" fg:x="84375" fg:w="280"/><text x="23.8271%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (310 samples, 0.09%)</title><rect x="23.5701%" y="1029" width="0.0866%" height="15" fill="rgb(248,202,8)" fg:x="84350" fg:w="310"/><text x="23.8201%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (357 samples, 0.10%)</title><rect x="23.5601%" y="1045" width="0.0998%" height="15" fill="rgb(206,104,37)" fg:x="84314" fg:w="357"/><text x="23.8101%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (400 samples, 0.11%)</title><rect x="23.5506%" y="1061" width="0.1118%" height="15" fill="rgb(223,8,27)" fg:x="84280" fg:w="400"/><text x="23.8006%" y="1071.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (422 samples, 0.12%)</title><rect x="23.5453%" y="1077" width="0.1179%" height="15" fill="rgb(216,217,28)" fg:x="84261" fg:w="422"/><text x="23.7953%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (137 samples, 0.04%)</title><rect x="23.7009%" y="1045" width="0.0383%" height="15" fill="rgb(249,199,1)" fg:x="84818" fg:w="137"/><text x="23.9509%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (41 samples, 0.01%)</title><rect x="23.7470%" y="1045" width="0.0115%" height="15" fill="rgb(240,85,17)" fg:x="84983" fg:w="41"/><text x="23.9970%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (255 samples, 0.07%)</title><rect x="23.7747%" y="1029" width="0.0713%" height="15" fill="rgb(206,108,45)" fg:x="85082" fg:w="255"/><text x="24.0247%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (325 samples, 0.09%)</title><rect x="23.8459%" y="1029" width="0.0908%" height="15" fill="rgb(245,210,41)" fg:x="85337" fg:w="325"/><text x="24.0959%" y="1039.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (77 samples, 0.02%)</title><rect x="23.9398%" y="1029" width="0.0215%" height="15" fill="rgb(206,13,37)" fg:x="85673" fg:w="77"/><text x="24.1898%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (149 samples, 0.04%)</title><rect x="24.0198%" y="1013" width="0.0416%" height="15" fill="rgb(250,61,18)" fg:x="85959" fg:w="149"/><text x="24.2698%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (91 samples, 0.03%)</title><rect x="24.0360%" y="997" width="0.0254%" height="15" fill="rgb(235,172,48)" fg:x="86017" fg:w="91"/><text x="24.2860%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (386 samples, 0.11%)</title><rect x="23.9627%" y="1029" width="0.1079%" height="15" fill="rgb(249,201,17)" fg:x="85755" fg:w="386"/><text x="24.2127%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (314 samples, 0.09%)</title><rect x="24.1170%" y="1013" width="0.0877%" height="15" fill="rgb(219,208,6)" fg:x="86307" fg:w="314"/><text x="24.3670%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (540 samples, 0.15%)</title><rect x="24.2047%" y="1013" width="0.1509%" height="15" fill="rgb(248,31,23)" fg:x="86621" fg:w="540"/><text x="24.4547%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (129 samples, 0.04%)</title><rect x="24.3710%" y="1013" width="0.0360%" height="15" fill="rgb(245,15,42)" fg:x="87216" fg:w="129"/><text x="24.6210%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (582 samples, 0.16%)</title><rect x="24.4998%" y="997" width="0.1626%" height="15" fill="rgb(222,217,39)" fg:x="87677" fg:w="582"/><text x="24.7498%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (461 samples, 0.13%)</title><rect x="24.5336%" y="981" width="0.1288%" height="15" fill="rgb(210,219,27)" fg:x="87798" fg:w="461"/><text x="24.7836%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (163 samples, 0.05%)</title><rect x="24.6169%" y="965" width="0.0455%" height="15" fill="rgb(252,166,36)" fg:x="88096" fg:w="163"/><text x="24.8669%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (58 samples, 0.02%)</title><rect x="24.6658%" y="997" width="0.0162%" height="15" fill="rgb(245,132,34)" fg:x="88271" fg:w="58"/><text x="24.9158%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (976 samples, 0.27%)</title><rect x="24.4098%" y="1013" width="0.2727%" height="15" fill="rgb(236,54,3)" fg:x="87355" fg:w="976"/><text x="24.6598%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (461 samples, 0.13%)</title><rect x="24.7583%" y="997" width="0.1288%" height="15" fill="rgb(241,173,43)" fg:x="88602" fg:w="461"/><text x="25.0083%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (688 samples, 0.19%)</title><rect x="24.8871%" y="997" width="0.1922%" height="15" fill="rgb(215,190,9)" fg:x="89063" fg:w="688"/><text x="25.1371%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (44 samples, 0.01%)</title><rect x="25.0794%" y="997" width="0.0123%" height="15" fill="rgb(242,101,16)" fg:x="89751" fg:w="44"/><text x="25.3294%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (39 samples, 0.01%)</title><rect x="25.0970%" y="997" width="0.0109%" height="15" fill="rgb(223,190,21)" fg:x="89814" fg:w="39"/><text x="25.3470%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (220 samples, 0.06%)</title><rect x="25.1079%" y="997" width="0.0615%" height="15" fill="rgb(215,228,25)" fg:x="89853" fg:w="220"/><text x="25.3579%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (65 samples, 0.02%)</title><rect x="25.2615%" y="981" width="0.0182%" height="15" fill="rgb(225,36,22)" fg:x="90403" fg:w="65"/><text x="25.5115%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (124 samples, 0.03%)</title><rect x="25.4591%" y="949" width="0.0346%" height="15" fill="rgb(251,106,46)" fg:x="91110" fg:w="124"/><text x="25.7091%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (868 samples, 0.24%)</title><rect x="25.2797%" y="981" width="0.2425%" height="15" fill="rgb(208,90,1)" fg:x="90468" fg:w="868"/><text x="25.5297%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (596 samples, 0.17%)</title><rect x="25.3557%" y="965" width="0.1665%" height="15" fill="rgb(243,10,4)" fg:x="90740" fg:w="596"/><text x="25.6057%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (102 samples, 0.03%)</title><rect x="25.4938%" y="949" width="0.0285%" height="15" fill="rgb(212,137,27)" fg:x="91234" fg:w="102"/><text x="25.7438%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.01%)</title><rect x="25.5223%" y="981" width="0.0120%" height="15" fill="rgb(231,220,49)" fg:x="91336" fg:w="43"/><text x="25.7723%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,480 samples, 0.41%)</title><rect x="25.1721%" y="997" width="0.4136%" height="15" fill="rgb(237,96,20)" fg:x="90083" fg:w="1480"/><text x="25.4221%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (184 samples, 0.05%)</title><rect x="25.5343%" y="981" width="0.0514%" height="15" fill="rgb(239,229,30)" fg:x="91379" fg:w="184"/><text x="25.7843%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (60 samples, 0.02%)</title><rect x="25.5888%" y="981" width="0.0168%" height="15" fill="rgb(219,65,33)" fg:x="91574" fg:w="60"/><text x="25.8388%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (199 samples, 0.06%)</title><rect x="25.6279%" y="965" width="0.0556%" height="15" fill="rgb(243,134,7)" fg:x="91714" fg:w="199"/><text x="25.8779%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.02%)</title><rect x="25.7106%" y="949" width="0.0212%" height="15" fill="rgb(216,177,54)" fg:x="92010" fg:w="76"/><text x="25.9606%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.02%)</title><rect x="25.7165%" y="933" width="0.0154%" height="15" fill="rgb(211,160,20)" fg:x="92031" fg:w="55"/><text x="25.9665%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (128 samples, 0.04%)</title><rect x="25.6994%" y="965" width="0.0358%" height="15" fill="rgb(239,85,39)" fg:x="91970" fg:w="128"/><text x="25.9494%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (548 samples, 0.15%)</title><rect x="25.5857%" y="997" width="0.1531%" height="15" fill="rgb(232,125,22)" fg:x="91563" fg:w="548"/><text x="25.8357%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (413 samples, 0.12%)</title><rect x="25.6234%" y="981" width="0.1154%" height="15" fill="rgb(244,57,34)" fg:x="91698" fg:w="413"/><text x="25.8734%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (119 samples, 0.03%)</title><rect x="25.8064%" y="981" width="0.0333%" height="15" fill="rgb(214,203,32)" fg:x="92353" fg:w="119"/><text x="26.0564%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (985 samples, 0.28%)</title><rect x="25.8397%" y="981" width="0.2752%" height="15" fill="rgb(207,58,43)" fg:x="92472" fg:w="985"/><text x="26.0897%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (81 samples, 0.02%)</title><rect x="26.1311%" y="981" width="0.0226%" height="15" fill="rgb(215,193,15)" fg:x="93515" fg:w="81"/><text x="26.3811%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (47 samples, 0.01%)</title><rect x="26.1538%" y="981" width="0.0131%" height="15" fill="rgb(232,15,44)" fg:x="93596" fg:w="47"/><text x="26.4038%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (52 samples, 0.01%)</title><rect x="26.2555%" y="965" width="0.0145%" height="15" fill="rgb(212,3,48)" fg:x="93960" fg:w="52"/><text x="26.5055%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (40 samples, 0.01%)</title><rect x="26.3240%" y="949" width="0.0112%" height="15" fill="rgb(218,128,7)" fg:x="94205" fg:w="40"/><text x="26.5740%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (74 samples, 0.02%)</title><rect x="26.4209%" y="933" width="0.0207%" height="15" fill="rgb(226,216,39)" fg:x="94552" fg:w="74"/><text x="26.6709%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (800 samples, 0.22%)</title><rect x="26.2700%" y="965" width="0.2235%" height="15" fill="rgb(243,47,51)" fg:x="94012" fg:w="800"/><text x="26.5200%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (566 samples, 0.16%)</title><rect x="26.3354%" y="949" width="0.1582%" height="15" fill="rgb(241,183,40)" fg:x="94246" fg:w="566"/><text x="26.5854%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (186 samples, 0.05%)</title><rect x="26.4416%" y="933" width="0.0520%" height="15" fill="rgb(231,217,32)" fg:x="94626" fg:w="186"/><text x="26.6916%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,316 samples, 0.37%)</title><rect x="26.1686%" y="981" width="0.3677%" height="15" fill="rgb(229,61,38)" fg:x="93649" fg:w="1316"/><text x="26.4186%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (127 samples, 0.04%)</title><rect x="26.5008%" y="965" width="0.0355%" height="15" fill="rgb(225,210,5)" fg:x="94838" fg:w="127"/><text x="26.7508%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (170 samples, 0.05%)</title><rect x="26.6014%" y="965" width="0.0475%" height="15" fill="rgb(231,79,45)" fg:x="95198" fg:w="170"/><text x="26.8514%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (159 samples, 0.04%)</title><rect x="26.6774%" y="949" width="0.0444%" height="15" fill="rgb(224,100,7)" fg:x="95470" fg:w="159"/><text x="26.9274%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (101 samples, 0.03%)</title><rect x="26.6936%" y="933" width="0.0282%" height="15" fill="rgb(241,198,18)" fg:x="95528" fg:w="101"/><text x="26.9436%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.01%)</title><rect x="26.7118%" y="917" width="0.0101%" height="15" fill="rgb(252,97,53)" fg:x="95593" fg:w="36"/><text x="26.9618%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (261 samples, 0.07%)</title><rect x="26.6576%" y="965" width="0.0729%" height="15" fill="rgb(220,88,7)" fg:x="95399" fg:w="261"/><text x="26.9076%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (425 samples, 0.12%)</title><rect x="26.7381%" y="949" width="0.1188%" height="15" fill="rgb(213,176,14)" fg:x="95687" fg:w="425"/><text x="26.9881%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (104 samples, 0.03%)</title><rect x="26.8568%" y="949" width="0.0291%" height="15" fill="rgb(246,73,7)" fg:x="96112" fg:w="104"/><text x="27.1068%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (152 samples, 0.04%)</title><rect x="26.8862%" y="949" width="0.0425%" height="15" fill="rgb(245,64,36)" fg:x="96217" fg:w="152"/><text x="27.1362%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (85 samples, 0.02%)</title><rect x="26.9323%" y="949" width="0.0238%" height="15" fill="rgb(245,80,10)" fg:x="96382" fg:w="85"/><text x="27.1823%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (123 samples, 0.03%)</title><rect x="26.9773%" y="933" width="0.0344%" height="15" fill="rgb(232,107,50)" fg:x="96543" fg:w="123"/><text x="27.2273%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (988 samples, 0.28%)</title><rect x="27.0116%" y="933" width="0.2761%" height="15" fill="rgb(253,3,0)" fg:x="96666" fg:w="988"/><text x="27.2616%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (147 samples, 0.04%)</title><rect x="27.2983%" y="933" width="0.0411%" height="15" fill="rgb(212,99,53)" fg:x="97692" fg:w="147"/><text x="27.5483%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (439 samples, 0.12%)</title><rect x="27.4272%" y="917" width="0.1227%" height="15" fill="rgb(249,111,54)" fg:x="98153" fg:w="439"/><text x="27.6772%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (299 samples, 0.08%)</title><rect x="27.4663%" y="901" width="0.0836%" height="15" fill="rgb(249,55,30)" fg:x="98293" fg:w="299"/><text x="27.7163%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (41 samples, 0.01%)</title><rect x="27.5384%" y="885" width="0.0115%" height="15" fill="rgb(237,47,42)" fg:x="98551" fg:w="41"/><text x="27.7884%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (797 samples, 0.22%)</title><rect x="27.3486%" y="933" width="0.2227%" height="15" fill="rgb(211,20,18)" fg:x="97872" fg:w="797"/><text x="27.5986%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.02%)</title><rect x="27.5543%" y="917" width="0.0170%" height="15" fill="rgb(231,203,46)" fg:x="98608" fg:w="61"/><text x="27.8043%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_free (137 samples, 0.04%)</title><rect x="27.6432%" y="917" width="0.0383%" height="15" fill="rgb(237,142,3)" fg:x="98926" fg:w="137"/><text x="27.8932%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (196 samples, 0.05%)</title><rect x="27.6814%" y="917" width="0.0548%" height="15" fill="rgb(241,107,1)" fg:x="99063" fg:w="196"/><text x="27.9314%" y="927.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (58 samples, 0.02%)</title><rect x="27.7440%" y="917" width="0.0162%" height="15" fill="rgb(229,83,13)" fg:x="99287" fg:w="58"/><text x="27.9940%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (67 samples, 0.02%)</title><rect x="27.8650%" y="869" width="0.0187%" height="15" fill="rgb(241,91,40)" fg:x="99720" fg:w="67"/><text x="28.1150%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (353 samples, 0.10%)</title><rect x="27.7952%" y="901" width="0.0986%" height="15" fill="rgb(225,3,45)" fg:x="99470" fg:w="353"/><text x="28.0452%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (243 samples, 0.07%)</title><rect x="27.8259%" y="885" width="0.0679%" height="15" fill="rgb(244,223,14)" fg:x="99580" fg:w="243"/><text x="28.0759%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (36 samples, 0.01%)</title><rect x="27.8837%" y="869" width="0.0101%" height="15" fill="rgb(224,124,37)" fg:x="99787" fg:w="36"/><text x="28.1337%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (547 samples, 0.15%)</title><rect x="27.7622%" y="917" width="0.1528%" height="15" fill="rgb(251,171,30)" fg:x="99352" fg:w="547"/><text x="28.0122%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.02%)</title><rect x="27.8980%" y="901" width="0.0170%" height="15" fill="rgb(236,46,54)" fg:x="99838" fg:w="61"/><text x="28.1480%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_free (299 samples, 0.08%)</title><rect x="27.9444%" y="901" width="0.0836%" height="15" fill="rgb(245,213,5)" fg:x="100004" fg:w="299"/><text x="28.1944%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (150 samples, 0.04%)</title><rect x="28.0279%" y="901" width="0.0419%" height="15" fill="rgb(230,144,27)" fg:x="100303" fg:w="150"/><text x="28.2779%" y="911.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (128 samples, 0.04%)</title><rect x="28.0782%" y="901" width="0.0358%" height="15" fill="rgb(220,86,6)" fg:x="100483" fg:w="128"/><text x="28.3282%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (65 samples, 0.02%)</title><rect x="28.1151%" y="901" width="0.0182%" height="15" fill="rgb(240,20,13)" fg:x="100615" fg:w="65"/><text x="28.3651%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_free (53 samples, 0.01%)</title><rect x="28.1500%" y="885" width="0.0148%" height="15" fill="rgb(217,89,34)" fg:x="100740" fg:w="53"/><text x="28.4000%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (704 samples, 0.20%)</title><rect x="28.1649%" y="885" width="0.1967%" height="15" fill="rgb(229,13,5)" fg:x="100793" fg:w="704"/><text x="28.4149%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (98 samples, 0.03%)</title><rect x="28.3744%" y="885" width="0.0274%" height="15" fill="rgb(244,67,35)" fg:x="101543" fg:w="98"/><text x="28.6244%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (55 samples, 0.02%)</title><rect x="28.4636%" y="869" width="0.0154%" height="15" fill="rgb(221,40,2)" fg:x="101862" fg:w="55"/><text x="28.7136%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (105 samples, 0.03%)</title><rect x="28.5955%" y="837" width="0.0293%" height="15" fill="rgb(237,157,21)" fg:x="102334" fg:w="105"/><text x="28.8455%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (587 samples, 0.16%)</title><rect x="28.4789%" y="869" width="0.1640%" height="15" fill="rgb(222,94,11)" fg:x="101917" fg:w="587"/><text x="28.7289%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (386 samples, 0.11%)</title><rect x="28.5351%" y="853" width="0.1079%" height="15" fill="rgb(249,113,6)" fg:x="102118" fg:w="386"/><text x="28.7851%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (65 samples, 0.02%)</title><rect x="28.6248%" y="837" width="0.0182%" height="15" fill="rgb(238,137,36)" fg:x="102439" fg:w="65"/><text x="28.8748%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (973 samples, 0.27%)</title><rect x="28.4057%" y="885" width="0.2719%" height="15" fill="rgb(210,102,26)" fg:x="101655" fg:w="973"/><text x="28.6557%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (106 samples, 0.03%)</title><rect x="28.6480%" y="869" width="0.0296%" height="15" fill="rgb(218,30,30)" fg:x="102522" fg:w="106"/><text x="28.8980%" y="879.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,025 samples, 0.57%)</title><rect x="28.1333%" y="901" width="0.5659%" height="15" fill="rgb(214,67,26)" fg:x="100680" fg:w="2025"/><text x="28.3833%" y="911.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (77 samples, 0.02%)</title><rect x="28.6776%" y="885" width="0.0215%" height="15" fill="rgb(251,9,53)" fg:x="102628" fg:w="77"/><text x="28.9276%" y="895.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,809 samples, 0.78%)</title><rect x="27.9150%" y="917" width="0.7849%" height="15" fill="rgb(228,204,25)" fg:x="99899" fg:w="2809"/><text x="28.1650%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (170 samples, 0.05%)</title><rect x="28.7243%" y="901" width="0.0475%" height="15" fill="rgb(207,153,8)" fg:x="102795" fg:w="170"/><text x="28.9743%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (235 samples, 0.07%)</title><rect x="28.7899%" y="885" width="0.0657%" height="15" fill="rgb(242,9,16)" fg:x="103030" fg:w="235"/><text x="29.0399%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (163 samples, 0.05%)</title><rect x="28.8101%" y="869" width="0.0455%" height="15" fill="rgb(217,211,10)" fg:x="103102" fg:w="163"/><text x="29.0601%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (76 samples, 0.02%)</title><rect x="28.8344%" y="853" width="0.0212%" height="15" fill="rgb(219,228,52)" fg:x="103189" fg:w="76"/><text x="29.0844%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (327 samples, 0.09%)</title><rect x="28.7763%" y="901" width="0.0914%" height="15" fill="rgb(231,92,29)" fg:x="102981" fg:w="327"/><text x="29.0263%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.01%)</title><rect x="28.8576%" y="885" width="0.0101%" height="15" fill="rgb(232,8,23)" fg:x="103272" fg:w="36"/><text x="29.1076%" y="895.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,853 samples, 1.91%)</title><rect x="26.9560%" y="949" width="1.9150%" height="15" fill="rgb(216,211,34)" fg:x="96467" fg:w="6853"/><text x="27.2060%" y="959.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,627 samples, 1.29%)</title><rect x="27.5780%" y="933" width="1.2929%" height="15" fill="rgb(236,151,0)" fg:x="98693" fg:w="4627"/><text x="27.8280%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (584 samples, 0.16%)</title><rect x="28.7078%" y="917" width="0.1632%" height="15" fill="rgb(209,168,3)" fg:x="102736" fg:w="584"/><text x="28.9578%" y="927.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,666 samples, 2.14%)</title><rect x="26.7305%" y="965" width="2.1421%" height="15" fill="rgb(208,129,28)" fg:x="95660" fg:w="7666"/><text x="26.9805%" y="975.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18,300 samples, 5.11%)</title><rect x="23.7683%" y="1045" width="5.1136%" height="15" fill="rgb(229,78,22)" fg:x="85059" fg:w="18300"/><text x="24.0183%" y="1055.50">sk-gen..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17,218 samples, 4.81%)</title><rect x="24.0706%" y="1029" width="4.8113%" height="15" fill="rgb(228,187,13)" fg:x="86141" fg:w="17218"/><text x="24.3206%" y="1039.50">sk-gen..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15,026 samples, 4.20%)</title><rect x="24.6831%" y="1013" width="4.1988%" height="15" fill="rgb(240,119,24)" fg:x="88333" fg:w="15026"/><text x="24.9331%" y="1023.50">sk-ge..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11,247 samples, 3.14%)</title><rect x="25.7391%" y="997" width="3.1428%" height="15" fill="rgb(209,194,42)" fg:x="92112" fg:w="11247"/><text x="25.9891%" y="1007.50">sk-..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,384 samples, 2.34%)</title><rect x="26.5391%" y="981" width="2.3428%" height="15" fill="rgb(247,200,46)" fg:x="94975" fg:w="8384"/><text x="26.7891%" y="991.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18,570 samples, 5.19%)</title><rect x="23.6959%" y="1061" width="5.1891%" height="15" fill="rgb(218,76,16)" fg:x="84800" fg:w="18570"/><text x="23.9459%" y="1071.50">sk-gen..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (398 samples, 0.11%)</title><rect x="28.9182%" y="1045" width="0.1112%" height="15" fill="rgb(225,21,48)" fg:x="103489" fg:w="398"/><text x="29.1682%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (396 samples, 0.11%)</title><rect x="29.0420%" y="1045" width="0.1107%" height="15" fill="rgb(239,223,50)" fg:x="103932" fg:w="396"/><text x="29.2920%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 0.06%)</title><rect x="29.1526%" y="1045" width="0.0648%" height="15" fill="rgb(244,45,21)" fg:x="104328" fg:w="232"/><text x="29.4026%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (243 samples, 0.07%)</title><rect x="29.2996%" y="1029" width="0.0679%" height="15" fill="rgb(232,33,43)" fg:x="104854" fg:w="243"/><text x="29.5496%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (172 samples, 0.05%)</title><rect x="29.3754%" y="1029" width="0.0481%" height="15" fill="rgb(209,8,3)" fg:x="105125" fg:w="172"/><text x="29.6254%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.02%)</title><rect x="29.4611%" y="1013" width="0.0176%" height="15" fill="rgb(214,25,53)" fg:x="105432" fg:w="63"/><text x="29.7111%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (51 samples, 0.01%)</title><rect x="29.5249%" y="981" width="0.0143%" height="15" fill="rgb(254,186,54)" fg:x="105660" fg:w="51"/><text x="29.7749%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (192 samples, 0.05%)</title><rect x="29.5637%" y="965" width="0.0537%" height="15" fill="rgb(208,174,49)" fg:x="105799" fg:w="192"/><text x="29.8137%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (565 samples, 0.16%)</title><rect x="29.5187%" y="997" width="0.1579%" height="15" fill="rgb(233,191,51)" fg:x="105638" fg:w="565"/><text x="29.7687%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (476 samples, 0.13%)</title><rect x="29.5436%" y="981" width="0.1330%" height="15" fill="rgb(222,134,10)" fg:x="105727" fg:w="476"/><text x="29.7936%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (212 samples, 0.06%)</title><rect x="29.6173%" y="965" width="0.0592%" height="15" fill="rgb(230,226,20)" fg:x="105991" fg:w="212"/><text x="29.8673%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (735 samples, 0.21%)</title><rect x="29.4866%" y="1013" width="0.2054%" height="15" fill="rgb(251,111,25)" fg:x="105523" fg:w="735"/><text x="29.7366%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (40 samples, 0.01%)</title><rect x="29.6808%" y="997" width="0.0112%" height="15" fill="rgb(224,40,46)" fg:x="106218" fg:w="40"/><text x="29.9308%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (982 samples, 0.27%)</title><rect x="29.4279%" y="1029" width="0.2744%" height="15" fill="rgb(236,108,47)" fg:x="105313" fg:w="982"/><text x="29.6779%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (37 samples, 0.01%)</title><rect x="29.6920%" y="1013" width="0.0103%" height="15" fill="rgb(234,93,0)" fg:x="106258" fg:w="37"/><text x="29.9420%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1,756 samples, 0.49%)</title><rect x="29.2250%" y="1045" width="0.4907%" height="15" fill="rgb(224,213,32)" fg:x="104587" fg:w="1756"/><text x="29.4750%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (48 samples, 0.01%)</title><rect x="29.7023%" y="1029" width="0.0134%" height="15" fill="rgb(251,11,48)" fg:x="106295" fg:w="48"/><text x="29.9523%" y="1039.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (66 samples, 0.02%)</title><rect x="29.7157%" y="1045" width="0.0184%" height="15" fill="rgb(236,173,5)" fg:x="106343" fg:w="66"/><text x="29.9657%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcpy (46 samples, 0.01%)</title><rect x="29.7367%" y="1045" width="0.0129%" height="15" fill="rgb(230,95,12)" fg:x="106418" fg:w="46"/><text x="29.9867%" y="1055.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (62 samples, 0.02%)</title><rect x="29.7495%" y="1045" width="0.0173%" height="15" fill="rgb(232,209,1)" fg:x="106464" fg:w="62"/><text x="29.9995%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (149 samples, 0.04%)</title><rect x="29.7668%" y="1045" width="0.0416%" height="15" fill="rgb(232,6,1)" fg:x="106526" fg:w="149"/><text x="30.0168%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (277 samples, 0.08%)</title><rect x="29.8655%" y="1029" width="0.0774%" height="15" fill="rgb(210,224,50)" fg:x="106879" fg:w="277"/><text x="30.1155%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (144 samples, 0.04%)</title><rect x="29.9429%" y="1029" width="0.0402%" height="15" fill="rgb(228,127,35)" fg:x="107156" fg:w="144"/><text x="30.1929%" y="1039.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (48 samples, 0.01%)</title><rect x="29.9960%" y="1029" width="0.0134%" height="15" fill="rgb(245,102,45)" fg:x="107346" fg:w="48"/><text x="30.2460%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (99 samples, 0.03%)</title><rect x="30.1153%" y="965" width="0.0277%" height="15" fill="rgb(214,1,49)" fg:x="107773" fg:w="99"/><text x="30.3653%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (258 samples, 0.07%)</title><rect x="30.0999%" y="997" width="0.0721%" height="15" fill="rgb(226,163,40)" fg:x="107718" fg:w="258"/><text x="30.3499%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (230 samples, 0.06%)</title><rect x="30.1077%" y="981" width="0.0643%" height="15" fill="rgb(239,212,28)" fg:x="107746" fg:w="230"/><text x="30.3577%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (104 samples, 0.03%)</title><rect x="30.1430%" y="965" width="0.0291%" height="15" fill="rgb(220,20,13)" fg:x="107872" fg:w="104"/><text x="30.3930%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (434 samples, 0.12%)</title><rect x="30.0739%" y="1013" width="0.1213%" height="15" fill="rgb(210,164,35)" fg:x="107625" fg:w="434"/><text x="30.3239%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (72 samples, 0.02%)</title><rect x="30.1751%" y="997" width="0.0201%" height="15" fill="rgb(248,109,41)" fg:x="107987" fg:w="72"/><text x="30.4251%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (696 samples, 0.19%)</title><rect x="30.0094%" y="1029" width="0.1945%" height="15" fill="rgb(238,23,50)" fg:x="107394" fg:w="696"/><text x="30.2594%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (42 samples, 0.01%)</title><rect x="30.2039%" y="1029" width="0.0117%" height="15" fill="rgb(211,48,49)" fg:x="108090" fg:w="42"/><text x="30.4539%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (164 samples, 0.05%)</title><rect x="30.2455%" y="1013" width="0.0458%" height="15" fill="rgb(223,36,21)" fg:x="108239" fg:w="164"/><text x="30.4955%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (198 samples, 0.06%)</title><rect x="30.2916%" y="1013" width="0.0553%" height="15" fill="rgb(207,123,46)" fg:x="108404" fg:w="198"/><text x="30.5416%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.03%)</title><rect x="30.3469%" y="1013" width="0.0277%" height="15" fill="rgb(240,218,32)" fg:x="108602" fg:w="99"/><text x="30.5969%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (76 samples, 0.02%)</title><rect x="30.3953%" y="1013" width="0.0212%" height="15" fill="rgb(252,5,43)" fg:x="108775" fg:w="76"/><text x="30.6453%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (297 samples, 0.08%)</title><rect x="30.4760%" y="997" width="0.0830%" height="15" fill="rgb(252,84,19)" fg:x="109064" fg:w="297"/><text x="30.7260%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (145 samples, 0.04%)</title><rect x="30.5590%" y="997" width="0.0405%" height="15" fill="rgb(243,152,39)" fg:x="109361" fg:w="145"/><text x="30.8090%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (73 samples, 0.02%)</title><rect x="30.6135%" y="997" width="0.0204%" height="15" fill="rgb(234,160,15)" fg:x="109556" fg:w="73"/><text x="30.8635%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (74 samples, 0.02%)</title><rect x="30.7857%" y="933" width="0.0207%" height="15" fill="rgb(237,34,20)" fg:x="110172" fg:w="74"/><text x="31.0357%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (276 samples, 0.08%)</title><rect x="30.7650%" y="965" width="0.0771%" height="15" fill="rgb(229,97,13)" fg:x="110098" fg:w="276"/><text x="31.0150%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (235 samples, 0.07%)</title><rect x="30.7764%" y="949" width="0.0657%" height="15" fill="rgb(234,71,50)" fg:x="110139" fg:w="235"/><text x="31.0264%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (128 samples, 0.04%)</title><rect x="30.8063%" y="933" width="0.0358%" height="15" fill="rgb(253,155,4)" fg:x="110246" fg:w="128"/><text x="31.0563%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (485 samples, 0.14%)</title><rect x="30.7298%" y="981" width="0.1355%" height="15" fill="rgb(222,185,37)" fg:x="109972" fg:w="485"/><text x="30.9798%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (78 samples, 0.02%)</title><rect x="30.8435%" y="965" width="0.0218%" height="15" fill="rgb(251,177,13)" fg:x="110379" fg:w="78"/><text x="31.0935%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (882 samples, 0.25%)</title><rect x="30.6339%" y="997" width="0.2465%" height="15" fill="rgb(250,179,40)" fg:x="109629" fg:w="882"/><text x="30.8839%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (54 samples, 0.02%)</title><rect x="30.8653%" y="981" width="0.0151%" height="15" fill="rgb(242,44,2)" fg:x="110457" fg:w="54"/><text x="31.1153%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (59 samples, 0.02%)</title><rect x="30.8804%" y="997" width="0.0165%" height="15" fill="rgb(216,177,13)" fg:x="110511" fg:w="59"/><text x="31.1304%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (116 samples, 0.03%)</title><rect x="30.9438%" y="981" width="0.0324%" height="15" fill="rgb(216,106,43)" fg:x="110738" fg:w="116"/><text x="31.1938%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (74 samples, 0.02%)</title><rect x="30.9762%" y="981" width="0.0207%" height="15" fill="rgb(216,183,2)" fg:x="110854" fg:w="74"/><text x="31.2262%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.03%)</title><rect x="30.9969%" y="981" width="0.0310%" height="15" fill="rgb(249,75,3)" fg:x="110928" fg:w="111"/><text x="31.2469%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (47 samples, 0.01%)</title><rect x="31.0413%" y="981" width="0.0131%" height="15" fill="rgb(219,67,39)" fg:x="111087" fg:w="47"/><text x="31.2913%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (126 samples, 0.04%)</title><rect x="31.0835%" y="965" width="0.0352%" height="15" fill="rgb(253,228,2)" fg:x="111238" fg:w="126"/><text x="31.3335%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (36 samples, 0.01%)</title><rect x="31.1243%" y="965" width="0.0101%" height="15" fill="rgb(235,138,27)" fg:x="111384" fg:w="36"/><text x="31.3743%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.02%)</title><rect x="31.1344%" y="965" width="0.0165%" height="15" fill="rgb(236,97,51)" fg:x="111420" fg:w="59"/><text x="31.3844%" y="975.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (48 samples, 0.01%)</title><rect x="31.1509%" y="965" width="0.0134%" height="15" fill="rgb(240,80,30)" fg:x="111479" fg:w="48"/><text x="31.4009%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.01%)</title><rect x="31.1922%" y="949" width="0.0140%" height="15" fill="rgb(230,178,19)" fg:x="111627" fg:w="50"/><text x="31.4422%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (45 samples, 0.01%)</title><rect x="31.2473%" y="917" width="0.0126%" height="15" fill="rgb(210,190,27)" fg:x="111824" fg:w="45"/><text x="31.4973%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (94 samples, 0.03%)</title><rect x="31.2850%" y="901" width="0.0263%" height="15" fill="rgb(222,107,31)" fg:x="111959" fg:w="94"/><text x="31.5350%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (419 samples, 0.12%)</title><rect x="31.2392%" y="933" width="0.1171%" height="15" fill="rgb(216,127,34)" fg:x="111795" fg:w="419"/><text x="31.4892%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (332 samples, 0.09%)</title><rect x="31.2635%" y="917" width="0.0928%" height="15" fill="rgb(234,116,52)" fg:x="111882" fg:w="332"/><text x="31.5135%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (161 samples, 0.04%)</title><rect x="31.3113%" y="901" width="0.0450%" height="15" fill="rgb(222,124,15)" fg:x="112053" fg:w="161"/><text x="31.5613%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (533 samples, 0.15%)</title><rect x="31.2146%" y="949" width="0.1489%" height="15" fill="rgb(231,179,28)" fg:x="111707" fg:w="533"/><text x="31.4646%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (704 samples, 0.20%)</title><rect x="31.1721%" y="965" width="0.1967%" height="15" fill="rgb(226,93,45)" fg:x="111555" fg:w="704"/><text x="31.4221%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (41 samples, 0.01%)</title><rect x="31.3688%" y="965" width="0.0115%" height="15" fill="rgb(215,8,51)" fg:x="112259" fg:w="41"/><text x="31.6188%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (50 samples, 0.01%)</title><rect x="31.3803%" y="965" width="0.0140%" height="15" fill="rgb(223,106,5)" fg:x="112300" fg:w="50"/><text x="31.6303%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (303 samples, 0.08%)</title><rect x="31.4563%" y="949" width="0.0847%" height="15" fill="rgb(250,191,5)" fg:x="112572" fg:w="303"/><text x="31.7063%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.01%)</title><rect x="31.5418%" y="949" width="0.0103%" height="15" fill="rgb(242,132,44)" fg:x="112878" fg:w="37"/><text x="31.7918%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (394 samples, 0.11%)</title><rect x="31.5521%" y="949" width="0.1101%" height="15" fill="rgb(251,152,29)" fg:x="112915" fg:w="394"/><text x="31.8021%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (169 samples, 0.05%)</title><rect x="31.6622%" y="949" width="0.0472%" height="15" fill="rgb(218,179,5)" fg:x="113309" fg:w="169"/><text x="31.9122%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcpy (38 samples, 0.01%)</title><rect x="31.7173%" y="949" width="0.0106%" height="15" fill="rgb(227,67,19)" fg:x="113506" fg:w="38"/><text x="31.9673%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (142 samples, 0.04%)</title><rect x="31.7354%" y="949" width="0.0397%" height="15" fill="rgb(233,119,31)" fg:x="113571" fg:w="142"/><text x="31.9854%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (165 samples, 0.05%)</title><rect x="31.8332%" y="933" width="0.0461%" height="15" fill="rgb(241,120,22)" fg:x="113921" fg:w="165"/><text x="32.0832%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (626 samples, 0.17%)</title><rect x="31.8796%" y="933" width="0.1749%" height="15" fill="rgb(224,102,30)" fg:x="114087" fg:w="626"/><text x="32.1296%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (248 samples, 0.07%)</title><rect x="32.0546%" y="933" width="0.0693%" height="15" fill="rgb(210,164,37)" fg:x="114713" fg:w="248"/><text x="32.3046%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (246 samples, 0.07%)</title><rect x="32.1239%" y="933" width="0.0687%" height="15" fill="rgb(226,191,16)" fg:x="114961" fg:w="246"/><text x="32.3739%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (102 samples, 0.03%)</title><rect x="32.2102%" y="933" width="0.0285%" height="15" fill="rgb(214,40,45)" fg:x="115270" fg:w="102"/><text x="32.4602%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcpy (64 samples, 0.02%)</title><rect x="32.2387%" y="933" width="0.0179%" height="15" fill="rgb(244,29,26)" fg:x="115372" fg:w="64"/><text x="32.4887%" y="943.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (39 samples, 0.01%)</title><rect x="32.2566%" y="933" width="0.0109%" height="15" fill="rgb(216,16,5)" fg:x="115436" fg:w="39"/><text x="32.5066%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (100 samples, 0.03%)</title><rect x="32.4086%" y="917" width="0.0279%" height="15" fill="rgb(249,76,35)" fg:x="115980" fg:w="100"/><text x="32.6586%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (79 samples, 0.02%)</title><rect x="32.5377%" y="885" width="0.0221%" height="15" fill="rgb(207,11,44)" fg:x="116442" fg:w="79"/><text x="32.7877%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (164 samples, 0.05%)</title><rect x="32.6014%" y="869" width="0.0458%" height="15" fill="rgb(228,190,49)" fg:x="116670" fg:w="164"/><text x="32.8514%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (718 samples, 0.20%)</title><rect x="32.5240%" y="901" width="0.2006%" height="15" fill="rgb(214,173,12)" fg:x="116393" fg:w="718"/><text x="32.7740%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (562 samples, 0.16%)</title><rect x="32.5676%" y="885" width="0.1570%" height="15" fill="rgb(218,26,35)" fg:x="116549" fg:w="562"/><text x="32.8176%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (277 samples, 0.08%)</title><rect x="32.6472%" y="869" width="0.0774%" height="15" fill="rgb(220,200,19)" fg:x="116834" fg:w="277"/><text x="32.8972%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,132 samples, 0.32%)</title><rect x="32.4491%" y="917" width="0.3163%" height="15" fill="rgb(239,95,49)" fg:x="116125" fg:w="1132"/><text x="32.6991%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (130 samples, 0.04%)</title><rect x="32.7291%" y="901" width="0.0363%" height="15" fill="rgb(235,85,53)" fg:x="117127" fg:w="130"/><text x="32.9791%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,885 samples, 0.53%)</title><rect x="32.2675%" y="933" width="0.5267%" height="15" fill="rgb(233,133,31)" fg:x="115475" fg:w="1885"/><text x="32.5175%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (103 samples, 0.03%)</title><rect x="32.7654%" y="917" width="0.0288%" height="15" fill="rgb(218,25,20)" fg:x="117257" fg:w="103"/><text x="33.0154%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (101 samples, 0.03%)</title><rect x="32.7942%" y="933" width="0.0282%" height="15" fill="rgb(252,210,38)" fg:x="117360" fg:w="101"/><text x="33.0442%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (95 samples, 0.03%)</title><rect x="32.8926%" y="917" width="0.0265%" height="15" fill="rgb(242,134,21)" fg:x="117712" fg:w="95"/><text x="33.1426%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (372 samples, 0.10%)</title><rect x="32.9191%" y="917" width="0.1039%" height="15" fill="rgb(213,28,48)" fg:x="117807" fg:w="372"/><text x="33.1691%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (76 samples, 0.02%)</title><rect x="33.0231%" y="917" width="0.0212%" height="15" fill="rgb(250,196,2)" fg:x="118179" fg:w="76"/><text x="33.2731%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.02%)</title><rect x="33.0443%" y="917" width="0.0240%" height="15" fill="rgb(227,5,17)" fg:x="118255" fg:w="86"/><text x="33.2943%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (77 samples, 0.02%)</title><rect x="33.0725%" y="917" width="0.0215%" height="15" fill="rgb(221,226,24)" fg:x="118356" fg:w="77"/><text x="33.3225%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (57 samples, 0.02%)</title><rect x="33.0781%" y="901" width="0.0159%" height="15" fill="rgb(211,5,48)" fg:x="118376" fg:w="57"/><text x="33.3281%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.01%)</title><rect x="33.1281%" y="901" width="0.0120%" height="15" fill="rgb(219,150,6)" fg:x="118555" fg:w="43"/><text x="33.3781%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (61 samples, 0.02%)</title><rect x="33.1402%" y="901" width="0.0170%" height="15" fill="rgb(251,46,16)" fg:x="118598" fg:w="61"/><text x="33.3902%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (51 samples, 0.01%)</title><rect x="33.1572%" y="901" width="0.0143%" height="15" fill="rgb(220,204,40)" fg:x="118659" fg:w="51"/><text x="33.4072%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (144 samples, 0.04%)</title><rect x="33.1714%" y="901" width="0.0402%" height="15" fill="rgb(211,85,2)" fg:x="118710" fg:w="144"/><text x="33.4214%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (38 samples, 0.01%)</title><rect x="33.2670%" y="837" width="0.0106%" height="15" fill="rgb(229,17,7)" fg:x="119052" fg:w="38"/><text x="33.5170%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (161 samples, 0.04%)</title><rect x="33.2505%" y="869" width="0.0450%" height="15" fill="rgb(239,72,28)" fg:x="118993" fg:w="161"/><text x="33.5005%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (134 samples, 0.04%)</title><rect x="33.2581%" y="853" width="0.0374%" height="15" fill="rgb(230,47,54)" fg:x="119020" fg:w="134"/><text x="33.5081%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (64 samples, 0.02%)</title><rect x="33.2776%" y="837" width="0.0179%" height="15" fill="rgb(214,50,8)" fg:x="119090" fg:w="64"/><text x="33.5276%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (203 samples, 0.06%)</title><rect x="33.2427%" y="885" width="0.0567%" height="15" fill="rgb(216,198,43)" fg:x="118965" fg:w="203"/><text x="33.4927%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (309 samples, 0.09%)</title><rect x="33.2176%" y="901" width="0.0863%" height="15" fill="rgb(234,20,35)" fg:x="118875" fg:w="309"/><text x="33.4676%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (842 samples, 0.24%)</title><rect x="33.1072%" y="917" width="0.2353%" height="15" fill="rgb(254,45,19)" fg:x="118480" fg:w="842"/><text x="33.3572%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (129 samples, 0.04%)</title><rect x="33.3064%" y="901" width="0.0360%" height="15" fill="rgb(219,14,44)" fg:x="119193" fg:w="129"/><text x="33.5564%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (97 samples, 0.03%)</title><rect x="33.3154%" y="885" width="0.0271%" height="15" fill="rgb(217,220,26)" fg:x="119225" fg:w="97"/><text x="33.5654%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (266 samples, 0.07%)</title><rect x="33.4051%" y="901" width="0.0743%" height="15" fill="rgb(213,158,28)" fg:x="119546" fg:w="266"/><text x="33.6551%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (507 samples, 0.14%)</title><rect x="33.4797%" y="901" width="0.1417%" height="15" fill="rgb(252,51,52)" fg:x="119813" fg:w="507"/><text x="33.7297%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (218 samples, 0.06%)</title><rect x="33.6213%" y="901" width="0.0609%" height="15" fill="rgb(246,89,16)" fg:x="120320" fg:w="218"/><text x="33.8713%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (115 samples, 0.03%)</title><rect x="33.7074%" y="901" width="0.0321%" height="15" fill="rgb(216,158,49)" fg:x="120628" fg:w="115"/><text x="33.9574%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (135 samples, 0.04%)</title><rect x="33.7882%" y="885" width="0.0377%" height="15" fill="rgb(236,107,19)" fg:x="120917" fg:w="135"/><text x="34.0382%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (336 samples, 0.09%)</title><rect x="33.8262%" y="885" width="0.0939%" height="15" fill="rgb(228,185,30)" fg:x="121053" fg:w="336"/><text x="34.0762%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (527 samples, 0.15%)</title><rect x="33.9200%" y="885" width="0.1473%" height="15" fill="rgb(246,134,8)" fg:x="121389" fg:w="527"/><text x="34.1700%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (308 samples, 0.09%)</title><rect x="34.0673%" y="885" width="0.0861%" height="15" fill="rgb(214,143,50)" fg:x="121916" fg:w="308"/><text x="34.3173%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.02%)</title><rect x="34.1534%" y="885" width="0.0151%" height="15" fill="rgb(228,75,8)" fg:x="122224" fg:w="54"/><text x="34.4034%" y="895.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (130 samples, 0.04%)</title><rect x="34.1838%" y="885" width="0.0363%" height="15" fill="rgb(207,175,4)" fg:x="122333" fg:w="130"/><text x="34.4338%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.02%)</title><rect x="34.3889%" y="869" width="0.0162%" height="15" fill="rgb(205,108,24)" fg:x="123067" fg:w="58"/><text x="34.6389%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (137 samples, 0.04%)</title><rect x="34.4926%" y="821" width="0.0383%" height="15" fill="rgb(244,120,49)" fg:x="123438" fg:w="137"/><text x="34.7426%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (385 samples, 0.11%)</title><rect x="34.4599%" y="853" width="0.1076%" height="15" fill="rgb(223,47,38)" fg:x="123321" fg:w="385"/><text x="34.7099%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (321 samples, 0.09%)</title><rect x="34.4778%" y="837" width="0.0897%" height="15" fill="rgb(229,179,11)" fg:x="123385" fg:w="321"/><text x="34.7278%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (131 samples, 0.04%)</title><rect x="34.5309%" y="821" width="0.0366%" height="15" fill="rgb(231,122,1)" fg:x="123575" fg:w="131"/><text x="34.7809%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (672 samples, 0.19%)</title><rect x="34.4102%" y="869" width="0.1878%" height="15" fill="rgb(245,119,9)" fg:x="123143" fg:w="672"/><text x="34.6602%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (99 samples, 0.03%)</title><rect x="34.5703%" y="853" width="0.0277%" height="15" fill="rgb(241,163,25)" fg:x="123716" fg:w="99"/><text x="34.8203%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,417 samples, 0.40%)</title><rect x="34.2299%" y="885" width="0.3960%" height="15" fill="rgb(217,214,3)" fg:x="122498" fg:w="1417"/><text x="34.4799%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (100 samples, 0.03%)</title><rect x="34.5980%" y="869" width="0.0279%" height="15" fill="rgb(240,86,28)" fg:x="123815" fg:w="100"/><text x="34.8480%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (77 samples, 0.02%)</title><rect x="34.6259%" y="885" width="0.0215%" height="15" fill="rgb(215,47,9)" fg:x="123915" fg:w="77"/><text x="34.8759%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (179 samples, 0.05%)</title><rect x="34.7324%" y="869" width="0.0500%" height="15" fill="rgb(252,25,45)" fg:x="124296" fg:w="179"/><text x="34.9824%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (173 samples, 0.05%)</title><rect x="34.7824%" y="869" width="0.0483%" height="15" fill="rgb(251,164,9)" fg:x="124475" fg:w="173"/><text x="35.0324%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (129 samples, 0.04%)</title><rect x="34.8307%" y="869" width="0.0360%" height="15" fill="rgb(233,194,0)" fg:x="124648" fg:w="129"/><text x="35.0807%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.03%)</title><rect x="34.8668%" y="869" width="0.0349%" height="15" fill="rgb(249,111,24)" fg:x="124777" fg:w="125"/><text x="35.1168%" y="879.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (107 samples, 0.03%)</title><rect x="34.9106%" y="869" width="0.0299%" height="15" fill="rgb(250,223,3)" fg:x="124934" fg:w="107"/><text x="35.1606%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (76 samples, 0.02%)</title><rect x="34.9193%" y="853" width="0.0212%" height="15" fill="rgb(236,178,37)" fg:x="124965" fg:w="76"/><text x="35.1693%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (38 samples, 0.01%)</title><rect x="34.9587%" y="869" width="0.0106%" height="15" fill="rgb(241,158,50)" fg:x="125106" fg:w="38"/><text x="35.2087%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (107 samples, 0.03%)</title><rect x="35.0009%" y="853" width="0.0299%" height="15" fill="rgb(213,121,41)" fg:x="125257" fg:w="107"/><text x="35.2509%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (81 samples, 0.02%)</title><rect x="35.0355%" y="853" width="0.0226%" height="15" fill="rgb(240,92,3)" fg:x="125381" fg:w="81"/><text x="35.2855%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.01%)</title><rect x="35.0861%" y="837" width="0.0117%" height="15" fill="rgb(205,123,3)" fg:x="125562" fg:w="42"/><text x="35.3361%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (70 samples, 0.02%)</title><rect x="35.1646%" y="789" width="0.0196%" height="15" fill="rgb(205,97,47)" fg:x="125843" fg:w="70"/><text x="35.4146%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (330 samples, 0.09%)</title><rect x="35.1272%" y="821" width="0.0922%" height="15" fill="rgb(247,152,14)" fg:x="125709" fg:w="330"/><text x="35.3772%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (267 samples, 0.07%)</title><rect x="35.1448%" y="805" width="0.0746%" height="15" fill="rgb(248,195,53)" fg:x="125772" fg:w="267"/><text x="35.3948%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (126 samples, 0.04%)</title><rect x="35.1842%" y="789" width="0.0352%" height="15" fill="rgb(226,201,16)" fg:x="125913" fg:w="126"/><text x="35.4342%" y="799.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (432 samples, 0.12%)</title><rect x="35.1051%" y="837" width="0.1207%" height="15" fill="rgb(205,98,0)" fg:x="125630" fg:w="432"/><text x="35.3551%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (563 samples, 0.16%)</title><rect x="35.0705%" y="853" width="0.1573%" height="15" fill="rgb(214,191,48)" fg:x="125506" fg:w="563"/><text x="35.3205%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.01%)</title><rect x="35.2501%" y="837" width="0.0123%" height="15" fill="rgb(237,112,39)" fg:x="126149" fg:w="44"/><text x="35.5001%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (57 samples, 0.02%)</title><rect x="35.2697%" y="837" width="0.0159%" height="15" fill="rgb(247,203,27)" fg:x="126219" fg:w="57"/><text x="35.5197%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.01%)</title><rect x="35.3125%" y="821" width="0.0123%" height="15" fill="rgb(235,124,28)" fg:x="126372" fg:w="44"/><text x="35.5625%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (184 samples, 0.05%)</title><rect x="35.3248%" y="821" width="0.0514%" height="15" fill="rgb(208,207,46)" fg:x="126416" fg:w="184"/><text x="35.5748%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (41 samples, 0.01%)</title><rect x="35.3851%" y="821" width="0.0115%" height="15" fill="rgb(234,176,4)" fg:x="126632" fg:w="41"/><text x="35.6351%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (168 samples, 0.05%)</title><rect x="35.4363%" y="789" width="0.0469%" height="15" fill="rgb(230,133,28)" fg:x="126815" fg:w="168"/><text x="35.6863%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (129 samples, 0.04%)</title><rect x="35.4471%" y="773" width="0.0360%" height="15" fill="rgb(211,137,40)" fg:x="126854" fg:w="129"/><text x="35.6971%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (73 samples, 0.02%)</title><rect x="35.4628%" y="757" width="0.0204%" height="15" fill="rgb(254,35,13)" fg:x="126910" fg:w="73"/><text x="35.7128%" y="767.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (245 samples, 0.07%)</title><rect x="35.4226%" y="805" width="0.0685%" height="15" fill="rgb(225,49,51)" fg:x="126766" fg:w="245"/><text x="35.6726%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (323 samples, 0.09%)</title><rect x="35.4044%" y="821" width="0.0903%" height="15" fill="rgb(251,10,15)" fg:x="126701" fg:w="323"/><text x="35.6544%" y="831.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (877 samples, 0.25%)</title><rect x="35.3063%" y="837" width="0.2451%" height="15" fill="rgb(228,207,15)" fg:x="126350" fg:w="877"/><text x="35.5563%" y="847.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (194 samples, 0.05%)</title><rect x="35.4972%" y="821" width="0.0542%" height="15" fill="rgb(241,99,19)" fg:x="127033" fg:w="194"/><text x="35.7472%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (127 samples, 0.04%)</title><rect x="35.5159%" y="805" width="0.0355%" height="15" fill="rgb(207,104,49)" fg:x="127100" fg:w="127"/><text x="35.7659%" y="815.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (2,101 samples, 0.59%)</title><rect x="34.9693%" y="869" width="0.5871%" height="15" fill="rgb(234,99,18)" fg:x="125144" fg:w="2101"/><text x="35.2193%" y="879.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,138 samples, 0.32%)</title><rect x="35.2384%" y="853" width="0.3180%" height="15" fill="rgb(213,191,49)" fg:x="126107" fg:w="1138"/><text x="35.4884%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (163 samples, 0.05%)</title><rect x="35.6006%" y="853" width="0.0455%" height="15" fill="rgb(210,226,19)" fg:x="127403" fg:w="163"/><text x="35.8506%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (44 samples, 0.01%)</title><rect x="35.6475%" y="853" width="0.0123%" height="15" fill="rgb(229,97,18)" fg:x="127571" fg:w="44"/><text x="35.8975%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (198 samples, 0.06%)</title><rect x="35.6637%" y="853" width="0.0553%" height="15" fill="rgb(211,167,15)" fg:x="127629" fg:w="198"/><text x="35.9137%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (151 samples, 0.04%)</title><rect x="35.7190%" y="853" width="0.0422%" height="15" fill="rgb(210,169,34)" fg:x="127827" fg:w="151"/><text x="35.9690%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (150 samples, 0.04%)</title><rect x="35.7861%" y="853" width="0.0419%" height="15" fill="rgb(241,121,31)" fg:x="128067" fg:w="150"/><text x="36.0361%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (152 samples, 0.04%)</title><rect x="35.8607%" y="837" width="0.0425%" height="15" fill="rgb(232,40,11)" fg:x="128334" fg:w="152"/><text x="36.1107%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (217 samples, 0.06%)</title><rect x="35.9032%" y="837" width="0.0606%" height="15" fill="rgb(205,86,26)" fg:x="128486" fg:w="217"/><text x="36.1532%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (55 samples, 0.02%)</title><rect x="35.9638%" y="837" width="0.0154%" height="15" fill="rgb(231,126,28)" fg:x="128703" fg:w="55"/><text x="36.2138%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (415 samples, 0.12%)</title><rect x="35.9792%" y="837" width="0.1160%" height="15" fill="rgb(219,221,18)" fg:x="128758" fg:w="415"/><text x="36.2292%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (73 samples, 0.02%)</title><rect x="36.1776%" y="821" width="0.0204%" height="15" fill="rgb(211,40,0)" fg:x="129468" fg:w="73"/><text x="36.4276%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (68 samples, 0.02%)</title><rect x="36.2583%" y="789" width="0.0190%" height="15" fill="rgb(239,85,43)" fg:x="129757" fg:w="68"/><text x="36.5083%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (144 samples, 0.04%)</title><rect x="36.3145%" y="773" width="0.0402%" height="15" fill="rgb(231,55,21)" fg:x="129958" fg:w="144"/><text x="36.5645%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (735 samples, 0.21%)</title><rect x="36.2472%" y="805" width="0.2054%" height="15" fill="rgb(225,184,43)" fg:x="129717" fg:w="735"/><text x="36.4972%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (605 samples, 0.17%)</title><rect x="36.2835%" y="789" width="0.1691%" height="15" fill="rgb(251,158,41)" fg:x="129847" fg:w="605"/><text x="36.5335%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (349 samples, 0.10%)</title><rect x="36.3550%" y="773" width="0.0975%" height="15" fill="rgb(234,159,37)" fg:x="130103" fg:w="349"/><text x="36.6050%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (972 samples, 0.27%)</title><rect x="36.2066%" y="821" width="0.2716%" height="15" fill="rgb(216,204,22)" fg:x="129572" fg:w="972"/><text x="36.4566%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (75 samples, 0.02%)</title><rect x="36.4573%" y="805" width="0.0210%" height="15" fill="rgb(214,17,3)" fg:x="130469" fg:w="75"/><text x="36.7073%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,338 samples, 0.37%)</title><rect x="36.1197%" y="837" width="0.3739%" height="15" fill="rgb(212,111,17)" fg:x="129261" fg:w="1338"/><text x="36.3697%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (55 samples, 0.02%)</title><rect x="36.4783%" y="821" width="0.0154%" height="15" fill="rgb(221,157,24)" fg:x="130544" fg:w="55"/><text x="36.7283%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (77 samples, 0.02%)</title><rect x="36.4936%" y="837" width="0.0215%" height="15" fill="rgb(252,16,13)" fg:x="130599" fg:w="77"/><text x="36.7436%" y="847.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (2,855 samples, 0.80%)</title><rect x="35.8280%" y="853" width="0.7978%" height="15" fill="rgb(221,62,2)" fg:x="128217" fg:w="2855"/><text x="36.0780%" y="863.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (396 samples, 0.11%)</title><rect x="36.5151%" y="837" width="0.1107%" height="15" fill="rgb(247,87,22)" fg:x="130676" fg:w="396"/><text x="36.7651%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (275 samples, 0.08%)</title><rect x="36.5490%" y="821" width="0.0768%" height="15" fill="rgb(215,73,9)" fg:x="130797" fg:w="275"/><text x="36.7990%" y="831.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (10,402 samples, 2.91%)</title><rect x="33.7395%" y="901" width="2.9067%" height="15" fill="rgb(207,175,33)" fg:x="120743" fg:w="10402"/><text x="33.9895%" y="911.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7,141 samples, 2.00%)</title><rect x="34.6508%" y="885" width="1.9954%" height="15" fill="rgb(243,129,54)" fg:x="124004" fg:w="7141"/><text x="34.9008%" y="895.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3,900 samples, 1.09%)</title><rect x="35.5564%" y="869" width="1.0898%" height="15" fill="rgb(227,119,45)" fg:x="127245" fg:w="3900"/><text x="35.8064%" y="879.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (73 samples, 0.02%)</title><rect x="36.6258%" y="853" width="0.0204%" height="15" fill="rgb(205,109,36)" fg:x="131072" fg:w="73"/><text x="36.8758%" y="863.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (17,527 samples, 4.90%)</title><rect x="31.7751%" y="949" width="4.8976%" height="15" fill="rgb(205,6,39)" fg:x="113713" fg:w="17527"/><text x="32.0251%" y="959.50">sk-gen..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13,770 samples, 3.85%)</title><rect x="32.8250%" y="933" width="3.8478%" height="15" fill="rgb(221,32,16)" fg:x="117470" fg:w="13770"/><text x="33.0750%" y="943.50">sk-g..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11,918 samples, 3.33%)</title><rect x="33.3425%" y="917" width="3.3303%" height="15" fill="rgb(228,144,50)" fg:x="119322" fg:w="11918"/><text x="33.5925%" y="927.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (95 samples, 0.03%)</title><rect x="36.6462%" y="901" width="0.0265%" height="15" fill="rgb(229,201,53)" fg:x="131145" fg:w="95"/><text x="36.8962%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (20,237 samples, 5.65%)</title><rect x="31.0545%" y="981" width="5.6549%" height="15" fill="rgb(249,153,27)" fg:x="111134" fg:w="20237"/><text x="31.3045%" y="991.50">sk-gen`..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19,021 samples, 5.32%)</title><rect x="31.3943%" y="965" width="5.3151%" height="15" fill="rgb(227,106,25)" fg:x="112350" fg:w="19021"/><text x="31.6443%" y="975.50">sk-gen`..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (131 samples, 0.04%)</title><rect x="36.6727%" y="949" width="0.0366%" height="15" fill="rgb(230,65,29)" fg:x="131240" fg:w="131"/><text x="36.9227%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.02%)</title><rect x="36.7230%" y="965" width="0.0151%" height="15" fill="rgb(221,57,46)" fg:x="131420" fg:w="54"/><text x="36.9730%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (75 samples, 0.02%)</title><rect x="36.7387%" y="965" width="0.0210%" height="15" fill="rgb(229,161,17)" fg:x="131476" fg:w="75"/><text x="36.9887%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.01%)</title><rect x="36.7842%" y="949" width="0.0129%" height="15" fill="rgb(222,213,11)" fg:x="131639" fg:w="46"/><text x="37.0342%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (58 samples, 0.02%)</title><rect x="36.7971%" y="949" width="0.0162%" height="15" fill="rgb(235,35,13)" fg:x="131685" fg:w="58"/><text x="37.0471%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (48 samples, 0.01%)</title><rect x="36.8133%" y="949" width="0.0134%" height="15" fill="rgb(233,158,34)" fg:x="131743" fg:w="48"/><text x="37.0633%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (98 samples, 0.03%)</title><rect x="36.8267%" y="949" width="0.0274%" height="15" fill="rgb(215,151,48)" fg:x="131791" fg:w="98"/><text x="37.0767%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (53 samples, 0.01%)</title><rect x="36.9013%" y="917" width="0.0148%" height="15" fill="rgb(229,84,14)" fg:x="132058" fg:w="53"/><text x="37.1513%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.01%)</title><rect x="36.9047%" y="901" width="0.0115%" height="15" fill="rgb(229,68,14)" fg:x="132070" fg:w="41"/><text x="37.1547%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (105 samples, 0.03%)</title><rect x="36.8924%" y="933" width="0.0293%" height="15" fill="rgb(243,106,26)" fg:x="132026" fg:w="105"/><text x="37.1424%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (215 samples, 0.06%)</title><rect x="36.8653%" y="949" width="0.0601%" height="15" fill="rgb(206,45,38)" fg:x="131929" fg:w="215"/><text x="37.1153%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (664 samples, 0.19%)</title><rect x="36.7767%" y="965" width="0.1855%" height="15" fill="rgb(226,6,15)" fg:x="131612" fg:w="664"/><text x="37.0267%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (116 samples, 0.03%)</title><rect x="36.9298%" y="949" width="0.0324%" height="15" fill="rgb(232,22,54)" fg:x="132160" fg:w="116"/><text x="37.1798%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (87 samples, 0.02%)</title><rect x="36.9379%" y="933" width="0.0243%" height="15" fill="rgb(229,222,32)" fg:x="132189" fg:w="87"/><text x="37.1879%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (23,451 samples, 6.55%)</title><rect x="30.4165%" y="1013" width="6.5530%" height="15" fill="rgb(228,62,29)" fg:x="108851" fg:w="23451"/><text x="30.6665%" y="1023.50">sk-gen`se..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21,716 samples, 6.07%)</title><rect x="30.9013%" y="997" width="6.0682%" height="15" fill="rgb(251,103,34)" fg:x="110586" fg:w="21716"/><text x="31.1513%" y="1007.50">sk-gen`s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (931 samples, 0.26%)</title><rect x="36.7093%" y="981" width="0.2602%" height="15" fill="rgb(233,12,30)" fg:x="131371" fg:w="931"/><text x="36.9593%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (25,668 samples, 7.17%)</title><rect x="29.8132%" y="1045" width="7.1725%" height="15" fill="rgb(238,52,0)" fg:x="106692" fg:w="25668"/><text x="30.0632%" y="1055.50">sk-gen`ser..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24,201 samples, 6.76%)</title><rect x="30.2232%" y="1029" width="6.7625%" height="15" fill="rgb(223,98,5)" fg:x="108159" fg:w="24201"/><text x="30.4732%" y="1039.50">sk-gen`se..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (58 samples, 0.02%)</title><rect x="36.9695%" y="1013" width="0.0162%" height="15" fill="rgb(228,75,37)" fg:x="132302" fg:w="58"/><text x="37.2195%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (28,983 samples, 8.10%)</title><rect x="28.8908%" y="1061" width="8.0988%" height="15" fill="rgb(205,115,49)" fg:x="103391" fg:w="28983"/><text x="29.1408%" y="1071.50">sk-gen`serd..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (67 samples, 0.02%)</title><rect x="36.9949%" y="1045" width="0.0187%" height="15" fill="rgb(250,154,43)" fg:x="132393" fg:w="67"/><text x="37.2449%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (143 samples, 0.04%)</title><rect x="37.0405%" y="1029" width="0.0400%" height="15" fill="rgb(226,43,29)" fg:x="132556" fg:w="143"/><text x="37.2905%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (151 samples, 0.04%)</title><rect x="37.1240%" y="1013" width="0.0422%" height="15" fill="rgb(249,228,39)" fg:x="132855" fg:w="151"/><text x="37.3740%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (52 samples, 0.01%)</title><rect x="37.1673%" y="997" width="0.0145%" height="15" fill="rgb(216,79,43)" fg:x="133010" fg:w="52"/><text x="37.4173%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.01%)</title><rect x="37.1819%" y="997" width="0.0120%" height="15" fill="rgb(228,95,12)" fg:x="133062" fg:w="43"/><text x="37.4319%" y="1007.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (113 samples, 0.03%)</title><rect x="37.1662%" y="1013" width="0.0316%" height="15" fill="rgb(249,221,15)" fg:x="133006" fg:w="113"/><text x="37.4162%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (230 samples, 0.06%)</title><rect x="37.2327%" y="997" width="0.0643%" height="15" fill="rgb(233,34,13)" fg:x="133244" fg:w="230"/><text x="37.4827%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (63 samples, 0.02%)</title><rect x="37.3492%" y="981" width="0.0176%" height="15" fill="rgb(214,103,39)" fg:x="133661" fg:w="63"/><text x="37.5992%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (224 samples, 0.06%)</title><rect x="37.3738%" y="965" width="0.0626%" height="15" fill="rgb(251,126,39)" fg:x="133749" fg:w="224"/><text x="37.6238%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (64 samples, 0.02%)</title><rect x="37.4781%" y="949" width="0.0179%" height="15" fill="rgb(214,216,36)" fg:x="134122" fg:w="64"/><text x="37.7281%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (195 samples, 0.05%)</title><rect x="37.5063%" y="933" width="0.0545%" height="15" fill="rgb(220,221,8)" fg:x="134223" fg:w="195"/><text x="37.7563%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (227 samples, 0.06%)</title><rect x="37.5608%" y="933" width="0.0634%" height="15" fill="rgb(240,216,3)" fg:x="134418" fg:w="227"/><text x="37.8108%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.04%)</title><rect x="37.5887%" y="917" width="0.0355%" height="15" fill="rgb(232,218,17)" fg:x="134518" fg:w="127"/><text x="37.8387%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.01%)</title><rect x="37.6242%" y="933" width="0.0129%" height="15" fill="rgb(229,163,45)" fg:x="134645" fg:w="46"/><text x="37.8742%" y="943.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (538 samples, 0.15%)</title><rect x="37.4959%" y="949" width="0.1503%" height="15" fill="rgb(231,110,42)" fg:x="134186" fg:w="538"/><text x="37.7459%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (66 samples, 0.02%)</title><rect x="37.6633%" y="933" width="0.0184%" height="15" fill="rgb(208,170,48)" fg:x="134785" fg:w="66"/><text x="37.9133%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (70 samples, 0.02%)</title><rect x="37.6818%" y="933" width="0.0196%" height="15" fill="rgb(239,116,25)" fg:x="134851" fg:w="70"/><text x="37.9318%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="37.6910%" y="917" width="0.0103%" height="15" fill="rgb(219,200,50)" fg:x="134884" fg:w="37"/><text x="37.9410%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.02%)</title><rect x="37.7013%" y="933" width="0.0173%" height="15" fill="rgb(245,200,0)" fg:x="134921" fg:w="62"/><text x="37.9513%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (270 samples, 0.08%)</title><rect x="37.6463%" y="949" width="0.0754%" height="15" fill="rgb(245,119,33)" fg:x="134724" fg:w="270"/><text x="37.8963%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.04%)</title><rect x="37.7217%" y="949" width="0.0430%" height="15" fill="rgb(231,125,12)" fg:x="134994" fg:w="154"/><text x="37.9717%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1,170 samples, 0.33%)</title><rect x="37.4406%" y="965" width="0.3269%" height="15" fill="rgb(216,96,41)" fg:x="133988" fg:w="1170"/><text x="37.6906%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.02%)</title><rect x="37.7676%" y="965" width="0.0204%" height="15" fill="rgb(248,43,45)" fg:x="135158" fg:w="73"/><text x="38.0176%" y="975.50"></text></g><g><title>sk-gen`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,544 samples, 0.43%)</title><rect x="37.3669%" y="981" width="0.4314%" height="15" fill="rgb(217,222,7)" fg:x="133724" fg:w="1544"/><text x="37.6169%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (37 samples, 0.01%)</title><rect x="37.7880%" y="965" width="0.0103%" height="15" fill="rgb(233,28,6)" fg:x="135231" fg:w="37"/><text x="38.0380%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (69 samples, 0.02%)</title><rect x="37.7983%" y="981" width="0.0193%" height="15" fill="rgb(231,218,15)" fg:x="135268" fg:w="69"/><text x="38.0483%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.05%)</title><rect x="37.8176%" y="981" width="0.0514%" height="15" fill="rgb(226,171,48)" fg:x="135337" fg:w="184"/><text x="38.0676%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2,040 samples, 0.57%)</title><rect x="37.3012%" y="997" width="0.5700%" height="15" fill="rgb(235,201,9)" fg:x="133489" fg:w="2040"/><text x="37.5512%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (227 samples, 0.06%)</title><rect x="37.8712%" y="997" width="0.0634%" height="15" fill="rgb(217,80,15)" fg:x="135529" fg:w="227"/><text x="38.1212%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2,678 samples, 0.75%)</title><rect x="37.1978%" y="1013" width="0.7483%" height="15" fill="rgb(219,152,8)" fg:x="133119" fg:w="2678"/><text x="37.4478%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (41 samples, 0.01%)</title><rect x="37.9347%" y="997" width="0.0115%" height="15" fill="rgb(243,107,38)" fg:x="135756" fg:w="41"/><text x="38.1847%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.06%)</title><rect x="37.9461%" y="1013" width="0.0620%" height="15" fill="rgb(231,17,5)" fg:x="135797" fg:w="222"/><text x="38.1961%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3,351 samples, 0.94%)</title><rect x="37.0813%" y="1029" width="0.9364%" height="15" fill="rgb(209,25,54)" fg:x="132702" fg:w="3351"/><text x="37.3313%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.04%)</title><rect x="38.0176%" y="1029" width="0.0374%" height="15" fill="rgb(219,0,2)" fg:x="136053" fg:w="134"/><text x="38.2676%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3,744 samples, 1.05%)</title><rect x="37.0136%" y="1045" width="1.0462%" height="15" fill="rgb(246,9,5)" fg:x="132460" fg:w="3744"/><text x="37.2636%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (116 samples, 0.03%)</title><rect x="38.0791%" y="1029" width="0.0324%" height="15" fill="rgb(226,159,4)" fg:x="136273" fg:w="116"/><text x="38.3291%" y="1039.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (57 samples, 0.02%)</title><rect x="38.1213%" y="1029" width="0.0159%" height="15" fill="rgb(219,175,34)" fg:x="136424" fg:w="57"/><text x="38.3713%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (282 samples, 0.08%)</title><rect x="38.1523%" y="1013" width="0.0788%" height="15" fill="rgb(236,10,46)" fg:x="136535" fg:w="282"/><text x="38.4023%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (343 samples, 0.10%)</title><rect x="38.2311%" y="1013" width="0.0958%" height="15" fill="rgb(240,211,16)" fg:x="136817" fg:w="343"/><text x="38.4811%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (87 samples, 0.02%)</title><rect x="38.3303%" y="1013" width="0.0243%" height="15" fill="rgb(205,3,43)" fg:x="137172" fg:w="87"/><text x="38.5803%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (200 samples, 0.06%)</title><rect x="38.4091%" y="997" width="0.0559%" height="15" fill="rgb(245,7,22)" fg:x="137454" fg:w="200"/><text x="38.6591%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (150 samples, 0.04%)</title><rect x="38.4231%" y="981" width="0.0419%" height="15" fill="rgb(239,132,32)" fg:x="137504" fg:w="150"/><text x="38.6731%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (424 samples, 0.12%)</title><rect x="38.3569%" y="1013" width="0.1185%" height="15" fill="rgb(228,202,34)" fg:x="137267" fg:w="424"/><text x="38.6069%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (280 samples, 0.08%)</title><rect x="38.5215%" y="997" width="0.0782%" height="15" fill="rgb(254,200,22)" fg:x="137856" fg:w="280"/><text x="38.7715%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (598 samples, 0.17%)</title><rect x="38.5997%" y="997" width="0.1671%" height="15" fill="rgb(219,10,39)" fg:x="138136" fg:w="598"/><text x="38.8497%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.01%)</title><rect x="38.7727%" y="997" width="0.0126%" height="15" fill="rgb(226,210,39)" fg:x="138755" fg:w="45"/><text x="39.0227%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (118 samples, 0.03%)</title><rect x="38.7853%" y="997" width="0.0330%" height="15" fill="rgb(208,219,16)" fg:x="138800" fg:w="118"/><text x="39.0353%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (55 samples, 0.02%)</title><rect x="39.0035%" y="949" width="0.0154%" height="15" fill="rgb(216,158,51)" fg:x="139581" fg:w="55"/><text x="39.2535%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (356 samples, 0.10%)</title><rect x="38.9331%" y="981" width="0.0995%" height="15" fill="rgb(233,14,44)" fg:x="139329" fg:w="356"/><text x="39.1831%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (240 samples, 0.07%)</title><rect x="38.9655%" y="965" width="0.0671%" height="15" fill="rgb(237,97,39)" fg:x="139445" fg:w="240"/><text x="39.2155%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (49 samples, 0.01%)</title><rect x="39.0189%" y="949" width="0.0137%" height="15" fill="rgb(218,198,43)" fg:x="139636" fg:w="49"/><text x="39.2689%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (827 samples, 0.23%)</title><rect x="38.8224%" y="997" width="0.2311%" height="15" fill="rgb(231,104,20)" fg:x="138933" fg:w="827"/><text x="39.0724%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.02%)</title><rect x="39.0365%" y="981" width="0.0170%" height="15" fill="rgb(254,36,13)" fg:x="139699" fg:w="61"/><text x="39.2865%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (567 samples, 0.16%)</title><rect x="39.1217%" y="981" width="0.1584%" height="15" fill="rgb(248,14,50)" fg:x="140004" fg:w="567"/><text x="39.3717%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (700 samples, 0.20%)</title><rect x="39.2801%" y="981" width="0.1956%" height="15" fill="rgb(217,107,29)" fg:x="140571" fg:w="700"/><text x="39.5301%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (47 samples, 0.01%)</title><rect x="39.4757%" y="981" width="0.0131%" height="15" fill="rgb(251,169,33)" fg:x="141271" fg:w="47"/><text x="39.7257%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.01%)</title><rect x="39.4967%" y="981" width="0.0129%" height="15" fill="rgb(217,108,32)" fg:x="141346" fg:w="46"/><text x="39.7467%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (217 samples, 0.06%)</title><rect x="39.5095%" y="981" width="0.0606%" height="15" fill="rgb(219,66,42)" fg:x="141392" fg:w="217"/><text x="39.7595%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (53 samples, 0.01%)</title><rect x="39.6887%" y="965" width="0.0148%" height="15" fill="rgb(206,180,7)" fg:x="142033" fg:w="53"/><text x="39.9387%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (117 samples, 0.03%)</title><rect x="39.8605%" y="933" width="0.0327%" height="15" fill="rgb(208,226,31)" fg:x="142648" fg:w="117"/><text x="40.1105%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (843 samples, 0.24%)</title><rect x="39.7035%" y="965" width="0.2356%" height="15" fill="rgb(218,26,49)" fg:x="142086" fg:w="843"/><text x="39.9535%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (569 samples, 0.16%)</title><rect x="39.7800%" y="949" width="0.1590%" height="15" fill="rgb(233,197,48)" fg:x="142360" fg:w="569"/><text x="40.0300%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (164 samples, 0.05%)</title><rect x="39.8932%" y="933" width="0.0458%" height="15" fill="rgb(252,181,51)" fg:x="142765" fg:w="164"/><text x="40.1432%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.01%)</title><rect x="39.9390%" y="965" width="0.0103%" height="15" fill="rgb(253,90,19)" fg:x="142929" fg:w="37"/><text x="40.1890%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,482 samples, 0.41%)</title><rect x="39.5760%" y="981" width="0.4141%" height="15" fill="rgb(215,171,30)" fg:x="141630" fg:w="1482"/><text x="39.8260%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (146 samples, 0.04%)</title><rect x="39.9494%" y="965" width="0.0408%" height="15" fill="rgb(214,222,9)" fg:x="142966" fg:w="146"/><text x="40.1994%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (148 samples, 0.04%)</title><rect x="40.0614%" y="965" width="0.0414%" height="15" fill="rgb(223,3,22)" fg:x="143367" fg:w="148"/><text x="40.3114%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,245 samples, 0.35%)</title><rect x="40.1028%" y="965" width="0.3479%" height="15" fill="rgb(225,196,46)" fg:x="143515" fg:w="1245"/><text x="40.3528%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (37 samples, 0.01%)</title><rect x="40.4507%" y="965" width="0.0103%" height="15" fill="rgb(209,110,37)" fg:x="144760" fg:w="37"/><text x="40.7007%" y="975.50"></text></g><g><title>libsystem_platform.dylib`__bzero (37 samples, 0.01%)</title><rect x="40.4666%" y="965" width="0.0103%" height="15" fill="rgb(249,89,12)" fg:x="144817" fg:w="37"/><text x="40.7166%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (102 samples, 0.03%)</title><rect x="40.4769%" y="965" width="0.0285%" height="15" fill="rgb(226,27,33)" fg:x="144854" fg:w="102"/><text x="40.7269%" y="975.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (69 samples, 0.02%)</title><rect x="40.5054%" y="965" width="0.0193%" height="15" fill="rgb(213,82,22)" fg:x="144956" fg:w="69"/><text x="40.7554%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (46 samples, 0.01%)</title><rect x="40.6382%" y="949" width="0.0129%" height="15" fill="rgb(248,140,0)" fg:x="145431" fg:w="46"/><text x="40.8882%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (112 samples, 0.03%)</title><rect x="40.8047%" y="917" width="0.0313%" height="15" fill="rgb(228,106,3)" fg:x="146027" fg:w="112"/><text x="41.0547%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (777 samples, 0.22%)</title><rect x="40.6510%" y="949" width="0.2171%" height="15" fill="rgb(209,23,37)" fg:x="145477" fg:w="777"/><text x="40.9010%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (522 samples, 0.15%)</title><rect x="40.7223%" y="933" width="0.1459%" height="15" fill="rgb(241,93,50)" fg:x="145732" fg:w="522"/><text x="40.9723%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (115 samples, 0.03%)</title><rect x="40.8360%" y="917" width="0.0321%" height="15" fill="rgb(253,46,43)" fg:x="146139" fg:w="115"/><text x="41.0860%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,372 samples, 0.38%)</title><rect x="40.5264%" y="965" width="0.3834%" height="15" fill="rgb(226,206,43)" fg:x="145031" fg:w="1372"/><text x="40.7764%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (116 samples, 0.03%)</title><rect x="40.8774%" y="949" width="0.0324%" height="15" fill="rgb(217,54,7)" fg:x="146287" fg:w="116"/><text x="41.1274%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (381 samples, 0.11%)</title><rect x="40.9802%" y="949" width="0.1065%" height="15" fill="rgb(223,5,52)" fg:x="146655" fg:w="381"/><text x="41.2302%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (247 samples, 0.07%)</title><rect x="41.0867%" y="949" width="0.0690%" height="15" fill="rgb(206,52,46)" fg:x="147036" fg:w="247"/><text x="41.3367%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (153 samples, 0.04%)</title><rect x="41.1593%" y="949" width="0.0428%" height="15" fill="rgb(253,136,11)" fg:x="147296" fg:w="153"/><text x="41.4093%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (166 samples, 0.05%)</title><rect x="41.2471%" y="933" width="0.0464%" height="15" fill="rgb(208,106,33)" fg:x="147610" fg:w="166"/><text x="41.4971%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (111 samples, 0.03%)</title><rect x="41.2624%" y="917" width="0.0310%" height="15" fill="rgb(206,54,4)" fg:x="147665" fg:w="111"/><text x="41.5124%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (335 samples, 0.09%)</title><rect x="41.2090%" y="949" width="0.0936%" height="15" fill="rgb(213,3,15)" fg:x="147474" fg:w="335"/><text x="41.4590%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (126 samples, 0.04%)</title><rect x="41.3393%" y="933" width="0.0352%" height="15" fill="rgb(252,211,39)" fg:x="147940" fg:w="126"/><text x="41.5893%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (961 samples, 0.27%)</title><rect x="41.3745%" y="933" width="0.2685%" height="15" fill="rgb(223,6,36)" fg:x="148066" fg:w="961"/><text x="41.6245%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (195 samples, 0.05%)</title><rect x="41.6553%" y="933" width="0.0545%" height="15" fill="rgb(252,169,45)" fg:x="149071" fg:w="195"/><text x="41.9053%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (43 samples, 0.01%)</title><rect x="41.7098%" y="933" width="0.0120%" height="15" fill="rgb(212,48,26)" fg:x="149266" fg:w="43"/><text x="41.9598%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.01%)</title><rect x="41.8825%" y="885" width="0.0112%" height="15" fill="rgb(251,102,48)" fg:x="149884" fg:w="40"/><text x="42.1325%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (387 samples, 0.11%)</title><rect x="41.8065%" y="917" width="0.1081%" height="15" fill="rgb(243,208,16)" fg:x="149612" fg:w="387"/><text x="42.0565%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (253 samples, 0.07%)</title><rect x="41.8439%" y="901" width="0.0707%" height="15" fill="rgb(219,96,24)" fg:x="149746" fg:w="253"/><text x="42.0939%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (75 samples, 0.02%)</title><rect x="41.8937%" y="885" width="0.0210%" height="15" fill="rgb(219,33,29)" fg:x="149924" fg:w="75"/><text x="42.1437%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (761 samples, 0.21%)</title><rect x="41.7243%" y="933" width="0.2126%" height="15" fill="rgb(223,176,5)" fg:x="149318" fg:w="761"/><text x="41.9743%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (66 samples, 0.02%)</title><rect x="41.9185%" y="917" width="0.0184%" height="15" fill="rgb(228,140,14)" fg:x="150013" fg:w="66"/><text x="42.1685%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_free (374 samples, 0.10%)</title><rect x="42.0194%" y="917" width="0.1045%" height="15" fill="rgb(217,179,31)" fg:x="150374" fg:w="374"/><text x="42.2694%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (320 samples, 0.09%)</title><rect x="42.1239%" y="917" width="0.0894%" height="15" fill="rgb(230,9,30)" fg:x="150748" fg:w="320"/><text x="42.3739%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.01%)</title><rect x="42.2248%" y="917" width="0.0129%" height="15" fill="rgb(230,136,20)" fg:x="151109" fg:w="46"/><text x="42.4748%" y="927.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (170 samples, 0.05%)</title><rect x="42.2376%" y="917" width="0.0475%" height="15" fill="rgb(215,210,22)" fg:x="151155" fg:w="170"/><text x="42.4876%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.01%)</title><rect x="42.4299%" y="869" width="0.0106%" height="15" fill="rgb(218,43,5)" fg:x="151843" fg:w="38"/><text x="42.6799%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (331 samples, 0.09%)</title><rect x="42.3620%" y="901" width="0.0925%" height="15" fill="rgb(216,11,5)" fg:x="151600" fg:w="331"/><text x="42.6120%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (203 samples, 0.06%)</title><rect x="42.3978%" y="885" width="0.0567%" height="15" fill="rgb(209,82,29)" fg:x="151728" fg:w="203"/><text x="42.6478%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (50 samples, 0.01%)</title><rect x="42.4405%" y="869" width="0.0140%" height="15" fill="rgb(244,115,12)" fg:x="151881" fg:w="50"/><text x="42.6905%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (656 samples, 0.18%)</title><rect x="42.2913%" y="917" width="0.1833%" height="15" fill="rgb(222,82,18)" fg:x="151347" fg:w="656"/><text x="42.5413%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.02%)</title><rect x="42.4595%" y="901" width="0.0151%" height="15" fill="rgb(249,227,8)" fg:x="151949" fg:w="54"/><text x="42.7095%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_free (82 samples, 0.02%)</title><rect x="42.5221%" y="901" width="0.0229%" height="15" fill="rgb(253,141,45)" fg:x="152173" fg:w="82"/><text x="42.7721%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (824 samples, 0.23%)</title><rect x="42.5450%" y="901" width="0.2303%" height="15" fill="rgb(234,184,4)" fg:x="152255" fg:w="824"/><text x="42.7950%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (41 samples, 0.01%)</title><rect x="42.7753%" y="901" width="0.0115%" height="15" fill="rgb(218,194,23)" fg:x="153079" fg:w="41"/><text x="43.0253%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (88 samples, 0.02%)</title><rect x="42.7918%" y="901" width="0.0246%" height="15" fill="rgb(235,66,41)" fg:x="153138" fg:w="88"/><text x="43.0418%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (76 samples, 0.02%)</title><rect x="42.8965%" y="885" width="0.0212%" height="15" fill="rgb(245,217,1)" fg:x="153513" fg:w="76"/><text x="43.1465%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (117 samples, 0.03%)</title><rect x="43.0639%" y="853" width="0.0327%" height="15" fill="rgb(229,91,1)" fg:x="154112" fg:w="117"/><text x="43.3139%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (772 samples, 0.22%)</title><rect x="42.9178%" y="885" width="0.2157%" height="15" fill="rgb(207,101,30)" fg:x="153589" fg:w="772"/><text x="43.1678%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (516 samples, 0.14%)</title><rect x="42.9893%" y="869" width="0.1442%" height="15" fill="rgb(223,82,49)" fg:x="153845" fg:w="516"/><text x="43.2393%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (132 samples, 0.04%)</title><rect x="43.0966%" y="853" width="0.0369%" height="15" fill="rgb(218,167,17)" fg:x="154229" fg:w="132"/><text x="43.3466%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,279 samples, 0.36%)</title><rect x="42.8228%" y="901" width="0.3574%" height="15" fill="rgb(208,103,14)" fg:x="153249" fg:w="1279"/><text x="43.0728%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (136 samples, 0.04%)</title><rect x="43.1422%" y="885" width="0.0380%" height="15" fill="rgb(238,20,8)" fg:x="154392" fg:w="136"/><text x="43.3922%" y="895.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18,099 samples, 5.06%)</title><rect x="38.1473%" y="1029" width="5.0575%" height="15" fill="rgb(218,80,54)" fg:x="136517" fg:w="18099"/><text x="38.3973%" y="1039.50">sk-gen..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16,925 samples, 4.73%)</title><rect x="38.4754%" y="1013" width="4.7294%" height="15" fill="rgb(240,144,17)" fg:x="137691" fg:w="16925"/><text x="38.7254%" y="1023.50">sk-gen..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14,856 samples, 4.15%)</title><rect x="39.0535%" y="997" width="4.1513%" height="15" fill="rgb(245,27,50)" fg:x="139760" fg:w="14856"/><text x="39.3035%" y="1007.50">sk-ge..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11,504 samples, 3.21%)</title><rect x="39.9902%" y="981" width="3.2146%" height="15" fill="rgb(251,51,7)" fg:x="143112" fg:w="11504"/><text x="40.2402%" y="991.50">sk-..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,213 samples, 2.29%)</title><rect x="40.9098%" y="965" width="2.2950%" height="15" fill="rgb(245,217,29)" fg:x="146403" fg:w="8213"/><text x="41.1598%" y="975.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,807 samples, 1.90%)</title><rect x="41.3027%" y="949" width="1.9021%" height="15" fill="rgb(221,176,29)" fg:x="147809" fg:w="6807"/><text x="41.5527%" y="959.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,537 samples, 1.27%)</title><rect x="41.9370%" y="933" width="1.2678%" height="15" fill="rgb(212,180,24)" fg:x="150079" fg:w="4537"/><text x="42.1870%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,613 samples, 0.73%)</title><rect x="42.4746%" y="917" width="0.7302%" height="15" fill="rgb(254,24,2)" fg:x="152003" fg:w="2613"/><text x="42.7246%" y="927.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (88 samples, 0.02%)</title><rect x="43.1802%" y="901" width="0.0246%" height="15" fill="rgb(230,100,2)" fg:x="154528" fg:w="88"/><text x="43.4302%" y="911.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18,367 samples, 5.13%)</title><rect x="38.0772%" y="1045" width="5.1323%" height="15" fill="rgb(219,142,25)" fg:x="136266" fg:w="18367"/><text x="38.3272%" y="1055.50">sk-gen..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.01%)</title><rect x="43.2182%" y="1029" width="0.0140%" height="15" fill="rgb(240,73,43)" fg:x="154664" fg:w="50"/><text x="43.4682%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.01%)</title><rect x="43.2355%" y="1029" width="0.0126%" height="15" fill="rgb(214,114,15)" fg:x="154726" fg:w="45"/><text x="43.4855%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (128 samples, 0.04%)</title><rect x="43.2604%" y="1013" width="0.0358%" height="15" fill="rgb(207,130,4)" fg:x="154815" fg:w="128"/><text x="43.5104%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (100 samples, 0.03%)</title><rect x="43.2682%" y="997" width="0.0279%" height="15" fill="rgb(221,25,40)" fg:x="154843" fg:w="100"/><text x="43.5182%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.02%)</title><rect x="43.2802%" y="981" width="0.0159%" height="15" fill="rgb(241,184,7)" fg:x="154886" fg:w="57"/><text x="43.5302%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (130 samples, 0.04%)</title><rect x="43.3914%" y="997" width="0.0363%" height="15" fill="rgb(235,159,4)" fg:x="155284" fg:w="130"/><text x="43.6414%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (85 samples, 0.02%)</title><rect x="43.4040%" y="981" width="0.0238%" height="15" fill="rgb(214,87,48)" fg:x="155329" fg:w="85"/><text x="43.6540%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (55 samples, 0.02%)</title><rect x="43.4124%" y="965" width="0.0154%" height="15" fill="rgb(246,198,24)" fg:x="155359" fg:w="55"/><text x="43.6624%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (425 samples, 0.12%)</title><rect x="43.3168%" y="1013" width="0.1188%" height="15" fill="rgb(209,66,40)" fg:x="155017" fg:w="425"/><text x="43.5668%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (687 samples, 0.19%)</title><rect x="43.2481%" y="1029" width="0.1920%" height="15" fill="rgb(233,147,39)" fg:x="154771" fg:w="687"/><text x="43.4981%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.03%)</title><rect x="43.5018%" y="1013" width="0.0263%" height="15" fill="rgb(231,145,52)" fg:x="155679" fg:w="94"/><text x="43.7518%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (121 samples, 0.03%)</title><rect x="43.5295%" y="1013" width="0.0338%" height="15" fill="rgb(206,20,26)" fg:x="155778" fg:w="121"/><text x="43.7795%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (86 samples, 0.02%)</title><rect x="43.5392%" y="997" width="0.0240%" height="15" fill="rgb(238,220,4)" fg:x="155813" fg:w="86"/><text x="43.7892%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.01%)</title><rect x="43.5515%" y="981" width="0.0117%" height="15" fill="rgb(252,195,42)" fg:x="155857" fg:w="42"/><text x="43.8015%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.02%)</title><rect x="43.5641%" y="1013" width="0.0179%" height="15" fill="rgb(209,10,6)" fg:x="155902" fg:w="64"/><text x="43.8141%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.04%)</title><rect x="43.5904%" y="1013" width="0.0369%" height="15" fill="rgb(229,3,52)" fg:x="155996" fg:w="132"/><text x="43.8404%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (161 samples, 0.04%)</title><rect x="43.6273%" y="1013" width="0.0450%" height="15" fill="rgb(253,49,37)" fg:x="156128" fg:w="161"/><text x="43.8773%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (119 samples, 0.03%)</title><rect x="43.6390%" y="997" width="0.0333%" height="15" fill="rgb(240,103,49)" fg:x="156170" fg:w="119"/><text x="43.8890%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.01%)</title><rect x="43.6722%" y="1013" width="0.0109%" height="15" fill="rgb(250,182,30)" fg:x="156289" fg:w="39"/><text x="43.9222%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.03%)</title><rect x="43.7251%" y="997" width="0.0293%" height="15" fill="rgb(248,8,30)" fg:x="156478" fg:w="105"/><text x="43.9751%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (91 samples, 0.03%)</title><rect x="43.7592%" y="997" width="0.0254%" height="15" fill="rgb(237,120,30)" fg:x="156600" fg:w="91"/><text x="44.0092%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (70 samples, 0.02%)</title><rect x="43.8494%" y="949" width="0.0196%" height="15" fill="rgb(221,146,34)" fg:x="156923" fg:w="70"/><text x="44.0994%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (280 samples, 0.08%)</title><rect x="43.8184%" y="981" width="0.0782%" height="15" fill="rgb(242,55,13)" fg:x="156812" fg:w="280"/><text x="44.0684%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (223 samples, 0.06%)</title><rect x="43.8343%" y="965" width="0.0623%" height="15" fill="rgb(242,112,31)" fg:x="156869" fg:w="223"/><text x="44.0843%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (99 samples, 0.03%)</title><rect x="43.8690%" y="949" width="0.0277%" height="15" fill="rgb(249,192,27)" fg:x="156993" fg:w="99"/><text x="44.1190%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (73 samples, 0.02%)</title><rect x="43.9005%" y="981" width="0.0204%" height="15" fill="rgb(208,204,44)" fg:x="157106" fg:w="73"/><text x="44.1505%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (44 samples, 0.01%)</title><rect x="43.9285%" y="981" width="0.0123%" height="15" fill="rgb(208,93,54)" fg:x="157206" fg:w="44"/><text x="44.1785%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (44 samples, 0.01%)</title><rect x="44.0970%" y="965" width="0.0123%" height="15" fill="rgb(242,1,31)" fg:x="157809" fg:w="44"/><text x="44.3470%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (178 samples, 0.05%)</title><rect x="44.1143%" y="965" width="0.0497%" height="15" fill="rgb(241,83,25)" fg:x="157871" fg:w="178"/><text x="44.3643%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (107 samples, 0.03%)</title><rect x="44.1342%" y="949" width="0.0299%" height="15" fill="rgb(205,169,50)" fg:x="157942" fg:w="107"/><text x="44.3842%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (46 samples, 0.01%)</title><rect x="44.1512%" y="933" width="0.0129%" height="15" fill="rgb(239,186,37)" fg:x="158003" fg:w="46"/><text x="44.4012%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (858 samples, 0.24%)</title><rect x="43.9413%" y="981" width="0.2398%" height="15" fill="rgb(205,221,10)" fg:x="157252" fg:w="858"/><text x="44.1913%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,453 samples, 0.41%)</title><rect x="43.7935%" y="997" width="0.4060%" height="15" fill="rgb(218,196,15)" fg:x="156723" fg:w="1453"/><text x="44.0435%" y="1007.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (66 samples, 0.02%)</title><rect x="44.1811%" y="981" width="0.0184%" height="15" fill="rgb(218,196,35)" fg:x="158110" fg:w="66"/><text x="44.4311%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.01%)</title><rect x="44.1995%" y="997" width="0.0120%" height="15" fill="rgb(233,63,24)" fg:x="158176" fg:w="43"/><text x="44.4495%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (166 samples, 0.05%)</title><rect x="44.2116%" y="997" width="0.0464%" height="15" fill="rgb(225,8,4)" fg:x="158219" fg:w="166"/><text x="44.4616%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (66 samples, 0.02%)</title><rect x="44.2395%" y="981" width="0.0184%" height="15" fill="rgb(234,105,35)" fg:x="158319" fg:w="66"/><text x="44.4895%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (237 samples, 0.07%)</title><rect x="44.3624%" y="981" width="0.0662%" height="15" fill="rgb(236,21,32)" fg:x="158759" fg:w="237"/><text x="44.6124%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (115 samples, 0.03%)</title><rect x="44.4337%" y="981" width="0.0321%" height="15" fill="rgb(228,109,6)" fg:x="159014" fg:w="115"/><text x="44.6837%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (86 samples, 0.02%)</title><rect x="44.4418%" y="965" width="0.0240%" height="15" fill="rgb(229,215,31)" fg:x="159043" fg:w="86"/><text x="44.6918%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (36 samples, 0.01%)</title><rect x="44.4558%" y="949" width="0.0101%" height="15" fill="rgb(221,52,54)" fg:x="159093" fg:w="36"/><text x="44.7058%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (267 samples, 0.07%)</title><rect x="44.4661%" y="981" width="0.0746%" height="15" fill="rgb(252,129,43)" fg:x="159130" fg:w="267"/><text x="44.7161%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (44 samples, 0.01%)</title><rect x="44.5407%" y="981" width="0.0123%" height="15" fill="rgb(248,183,27)" fg:x="159397" fg:w="44"/><text x="44.7907%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (316 samples, 0.09%)</title><rect x="44.5530%" y="981" width="0.0883%" height="15" fill="rgb(250,0,22)" fg:x="159441" fg:w="316"/><text x="44.8030%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (352 samples, 0.10%)</title><rect x="44.6413%" y="981" width="0.0984%" height="15" fill="rgb(213,166,10)" fg:x="159757" fg:w="352"/><text x="44.8913%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (271 samples, 0.08%)</title><rect x="44.6640%" y="965" width="0.0757%" height="15" fill="rgb(207,163,36)" fg:x="159838" fg:w="271"/><text x="44.9140%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.01%)</title><rect x="44.7397%" y="981" width="0.0137%" height="15" fill="rgb(208,122,22)" fg:x="160109" fg:w="49"/><text x="44.9897%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (37 samples, 0.01%)</title><rect x="44.7534%" y="981" width="0.0103%" height="15" fill="rgb(207,104,49)" fg:x="160158" fg:w="37"/><text x="45.0034%" y="991.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (47 samples, 0.01%)</title><rect x="44.7752%" y="981" width="0.0131%" height="15" fill="rgb(248,211,50)" fg:x="160236" fg:w="47"/><text x="45.0252%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (248 samples, 0.07%)</title><rect x="44.8313%" y="965" width="0.0693%" height="15" fill="rgb(217,13,45)" fg:x="160437" fg:w="248"/><text x="45.0813%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (64 samples, 0.02%)</title><rect x="44.9068%" y="965" width="0.0179%" height="15" fill="rgb(211,216,49)" fg:x="160707" fg:w="64"/><text x="45.1568%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (76 samples, 0.02%)</title><rect x="44.9247%" y="965" width="0.0212%" height="15" fill="rgb(221,58,53)" fg:x="160771" fg:w="76"/><text x="45.1747%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (79 samples, 0.02%)</title><rect x="44.9643%" y="949" width="0.0221%" height="15" fill="rgb(220,112,41)" fg:x="160913" fg:w="79"/><text x="45.2143%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (79 samples, 0.02%)</title><rect x="45.0088%" y="933" width="0.0221%" height="15" fill="rgb(236,38,28)" fg:x="161072" fg:w="79"/><text x="45.2588%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (169 samples, 0.05%)</title><rect x="45.0747%" y="917" width="0.0472%" height="15" fill="rgb(227,195,22)" fg:x="161308" fg:w="169"/><text x="45.3247%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (43 samples, 0.01%)</title><rect x="45.1907%" y="901" width="0.0120%" height="15" fill="rgb(214,55,33)" fg:x="161723" fg:w="43"/><text x="45.4407%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (739 samples, 0.21%)</title><rect x="44.9979%" y="949" width="0.2065%" height="15" fill="rgb(248,80,13)" fg:x="161033" fg:w="739"/><text x="45.2479%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (598 samples, 0.17%)</title><rect x="45.0373%" y="933" width="0.1671%" height="15" fill="rgb(238,52,6)" fg:x="161174" fg:w="598"/><text x="45.2873%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (295 samples, 0.08%)</title><rect x="45.1219%" y="917" width="0.0824%" height="15" fill="rgb(224,198,47)" fg:x="161477" fg:w="295"/><text x="45.3719%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (42 samples, 0.01%)</title><rect x="45.2091%" y="949" width="0.0117%" height="15" fill="rgb(233,171,20)" fg:x="161789" fg:w="42"/><text x="45.4591%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (47 samples, 0.01%)</title><rect x="45.2270%" y="949" width="0.0131%" height="15" fill="rgb(241,30,25)" fg:x="161853" fg:w="47"/><text x="45.4770%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (216 samples, 0.06%)</title><rect x="45.4025%" y="933" width="0.0604%" height="15" fill="rgb(207,171,38)" fg:x="162481" fg:w="216"/><text x="45.6525%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="45.4735%" y="933" width="0.0115%" height="15" fill="rgb(234,70,1)" fg:x="162735" fg:w="41"/><text x="45.7235%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (858 samples, 0.24%)</title><rect x="45.2469%" y="949" width="0.2398%" height="15" fill="rgb(232,178,18)" fg:x="161924" fg:w="858"/><text x="45.4969%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,972 samples, 0.55%)</title><rect x="44.9459%" y="965" width="0.5510%" height="15" fill="rgb(241,78,40)" fg:x="160847" fg:w="1972"/><text x="45.1959%" y="975.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (37 samples, 0.01%)</title><rect x="45.4866%" y="949" width="0.0103%" height="15" fill="rgb(222,35,25)" fg:x="162782" fg:w="37"/><text x="45.7366%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.01%)</title><rect x="45.4969%" y="965" width="0.0134%" height="15" fill="rgb(207,92,16)" fg:x="162819" fg:w="48"/><text x="45.7469%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (134 samples, 0.04%)</title><rect x="45.5104%" y="965" width="0.0374%" height="15" fill="rgb(216,59,51)" fg:x="162867" fg:w="134"/><text x="45.7604%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (47 samples, 0.01%)</title><rect x="45.5347%" y="949" width="0.0131%" height="15" fill="rgb(213,80,28)" fg:x="162954" fg:w="47"/><text x="45.7847%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (188 samples, 0.05%)</title><rect x="45.6263%" y="949" width="0.0525%" height="15" fill="rgb(220,93,7)" fg:x="163282" fg:w="188"/><text x="45.8763%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (145 samples, 0.04%)</title><rect x="45.6789%" y="949" width="0.0405%" height="15" fill="rgb(225,24,44)" fg:x="163470" fg:w="145"/><text x="45.9289%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (176 samples, 0.05%)</title><rect x="45.7194%" y="949" width="0.0492%" height="15" fill="rgb(243,74,40)" fg:x="163615" fg:w="176"/><text x="45.9694%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (52 samples, 0.01%)</title><rect x="45.7686%" y="949" width="0.0145%" height="15" fill="rgb(228,39,7)" fg:x="163791" fg:w="52"/><text x="46.0186%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.05%)</title><rect x="45.7831%" y="949" width="0.0475%" height="15" fill="rgb(227,79,8)" fg:x="163843" fg:w="170"/><text x="46.0331%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (329 samples, 0.09%)</title><rect x="45.8306%" y="949" width="0.0919%" height="15" fill="rgb(236,58,11)" fg:x="164013" fg:w="329"/><text x="46.0806%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (241 samples, 0.07%)</title><rect x="45.8552%" y="933" width="0.0673%" height="15" fill="rgb(249,63,35)" fg:x="164101" fg:w="241"/><text x="46.1052%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.01%)</title><rect x="45.9225%" y="949" width="0.0137%" height="15" fill="rgb(252,114,16)" fg:x="164342" fg:w="49"/><text x="46.1725%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (40 samples, 0.01%)</title><rect x="45.9362%" y="949" width="0.0112%" height="15" fill="rgb(254,151,24)" fg:x="164391" fg:w="40"/><text x="46.1862%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (243 samples, 0.07%)</title><rect x="46.0200%" y="933" width="0.0679%" height="15" fill="rgb(253,54,39)" fg:x="164691" fg:w="243"/><text x="46.2700%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (131 samples, 0.04%)</title><rect x="46.0960%" y="933" width="0.0366%" height="15" fill="rgb(243,25,45)" fg:x="164963" fg:w="131"/><text x="46.3460%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (116 samples, 0.03%)</title><rect x="46.1327%" y="933" width="0.0324%" height="15" fill="rgb(234,134,9)" fg:x="165094" fg:w="116"/><text x="46.3827%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_free (65 samples, 0.02%)</title><rect x="46.1818%" y="917" width="0.0182%" height="15" fill="rgb(227,166,31)" fg:x="165270" fg:w="65"/><text x="46.4318%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (59 samples, 0.02%)</title><rect x="46.2170%" y="901" width="0.0165%" height="15" fill="rgb(245,143,41)" fg:x="165396" fg:w="59"/><text x="46.4670%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (136 samples, 0.04%)</title><rect x="46.2665%" y="885" width="0.0380%" height="15" fill="rgb(238,181,32)" fg:x="165573" fg:w="136"/><text x="46.5165%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (575 samples, 0.16%)</title><rect x="46.2092%" y="917" width="0.1607%" height="15" fill="rgb(224,113,18)" fg:x="165368" fg:w="575"/><text x="46.4592%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (462 samples, 0.13%)</title><rect x="46.2408%" y="901" width="0.1291%" height="15" fill="rgb(240,229,28)" fg:x="165481" fg:w="462"/><text x="46.4908%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (234 samples, 0.07%)</title><rect x="46.3045%" y="885" width="0.0654%" height="15" fill="rgb(250,185,3)" fg:x="165709" fg:w="234"/><text x="46.5545%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (77 samples, 0.02%)</title><rect x="46.3735%" y="917" width="0.0215%" height="15" fill="rgb(212,59,25)" fg:x="165956" fg:w="77"/><text x="46.6235%" y="927.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (39 samples, 0.01%)</title><rect x="46.4043%" y="917" width="0.0109%" height="15" fill="rgb(221,87,20)" fg:x="166066" fg:w="39"/><text x="46.6543%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (109 samples, 0.03%)</title><rect x="46.6091%" y="901" width="0.0305%" height="15" fill="rgb(213,74,28)" fg:x="166799" fg:w="109"/><text x="46.8591%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (47 samples, 0.01%)</title><rect x="46.6775%" y="869" width="0.0131%" height="15" fill="rgb(224,132,34)" fg:x="167044" fg:w="47"/><text x="46.9275%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (185 samples, 0.05%)</title><rect x="46.6432%" y="901" width="0.0517%" height="15" fill="rgb(222,101,24)" fg:x="166921" fg:w="185"/><text x="46.8932%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (121 samples, 0.03%)</title><rect x="46.6611%" y="885" width="0.0338%" height="15" fill="rgb(254,142,4)" fg:x="166985" fg:w="121"/><text x="46.9111%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="46.7069%" y="901" width="0.0103%" height="15" fill="rgb(230,229,49)" fg:x="167149" fg:w="37"/><text x="46.9569%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (1,081 samples, 0.30%)</title><rect x="46.4163%" y="917" width="0.3021%" height="15" fill="rgb(238,70,47)" fg:x="166109" fg:w="1081"/><text x="46.6663%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,040 samples, 0.57%)</title><rect x="46.1651%" y="933" width="0.5700%" height="15" fill="rgb(231,160,17)" fg:x="165210" fg:w="2040"/><text x="46.4151%" y="943.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (60 samples, 0.02%)</title><rect x="46.7183%" y="917" width="0.0168%" height="15" fill="rgb(218,68,53)" fg:x="167190" fg:w="60"/><text x="46.9683%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="46.7351%" y="933" width="0.0193%" height="15" fill="rgb(236,111,10)" fg:x="167250" fg:w="69"/><text x="46.9851%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (255 samples, 0.07%)</title><rect x="46.7544%" y="933" width="0.0713%" height="15" fill="rgb(224,34,41)" fg:x="167319" fg:w="255"/><text x="47.0044%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (134 samples, 0.04%)</title><rect x="46.7882%" y="917" width="0.0374%" height="15" fill="rgb(241,118,19)" fg:x="167440" fg:w="134"/><text x="47.0382%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (294 samples, 0.08%)</title><rect x="46.9472%" y="917" width="0.0822%" height="15" fill="rgb(238,129,25)" fg:x="168009" fg:w="294"/><text x="47.1972%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (84 samples, 0.02%)</title><rect x="47.0294%" y="917" width="0.0235%" height="15" fill="rgb(238,22,31)" fg:x="168303" fg:w="84"/><text x="47.2794%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (194 samples, 0.05%)</title><rect x="47.0528%" y="917" width="0.0542%" height="15" fill="rgb(222,174,48)" fg:x="168387" fg:w="194"/><text x="47.3028%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (167 samples, 0.05%)</title><rect x="47.0604%" y="901" width="0.0467%" height="15" fill="rgb(206,152,40)" fg:x="168414" fg:w="167"/><text x="47.3104%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (111 samples, 0.03%)</title><rect x="47.0760%" y="885" width="0.0310%" height="15" fill="rgb(218,99,54)" fg:x="168470" fg:w="111"/><text x="47.3260%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (54 samples, 0.02%)</title><rect x="47.0919%" y="869" width="0.0151%" height="15" fill="rgb(220,174,26)" fg:x="168527" fg:w="54"/><text x="47.3419%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (258 samples, 0.07%)</title><rect x="47.1093%" y="917" width="0.0721%" height="15" fill="rgb(245,116,9)" fg:x="168589" fg:w="258"/><text x="47.3593%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (262 samples, 0.07%)</title><rect x="47.1853%" y="917" width="0.0732%" height="15" fill="rgb(209,72,35)" fg:x="168861" fg:w="262"/><text x="47.4353%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (510 samples, 0.14%)</title><rect x="47.2585%" y="917" width="0.1425%" height="15" fill="rgb(226,126,21)" fg:x="169123" fg:w="510"/><text x="47.5085%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (370 samples, 0.10%)</title><rect x="47.2976%" y="901" width="0.1034%" height="15" fill="rgb(227,192,1)" fg:x="169263" fg:w="370"/><text x="47.5476%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 0.01%)</title><rect x="47.4010%" y="917" width="0.0101%" height="15" fill="rgb(237,180,29)" fg:x="169633" fg:w="36"/><text x="47.6510%" y="927.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (61 samples, 0.02%)</title><rect x="47.4111%" y="917" width="0.0170%" height="15" fill="rgb(230,197,35)" fg:x="169669" fg:w="61"/><text x="47.6611%" y="927.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (43 samples, 0.01%)</title><rect x="47.4309%" y="917" width="0.0120%" height="15" fill="rgb(246,193,31)" fg:x="169740" fg:w="43"/><text x="47.6809%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (227 samples, 0.06%)</title><rect x="47.5119%" y="901" width="0.0634%" height="15" fill="rgb(241,36,4)" fg:x="170030" fg:w="227"/><text x="47.7619%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (64 samples, 0.02%)</title><rect x="47.5790%" y="901" width="0.0179%" height="15" fill="rgb(241,130,17)" fg:x="170270" fg:w="64"/><text x="47.8290%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (87 samples, 0.02%)</title><rect x="47.5972%" y="901" width="0.0243%" height="15" fill="rgb(206,137,32)" fg:x="170335" fg:w="87"/><text x="47.8472%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (190 samples, 0.05%)</title><rect x="47.6215%" y="901" width="0.0531%" height="15" fill="rgb(237,228,51)" fg:x="170422" fg:w="190"/><text x="47.8715%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (37 samples, 0.01%)</title><rect x="47.7123%" y="853" width="0.0103%" height="15" fill="rgb(243,6,42)" fg:x="170747" fg:w="37"/><text x="47.9623%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 0.04%)</title><rect x="47.6897%" y="885" width="0.0447%" height="15" fill="rgb(251,74,28)" fg:x="170666" fg:w="160"/><text x="47.9397%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (118 samples, 0.03%)</title><rect x="47.7014%" y="869" width="0.0330%" height="15" fill="rgb(218,20,49)" fg:x="170708" fg:w="118"/><text x="47.9514%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.01%)</title><rect x="47.7226%" y="853" width="0.0117%" height="15" fill="rgb(238,28,14)" fg:x="170784" fg:w="42"/><text x="47.9726%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (190 samples, 0.05%)</title><rect x="47.7433%" y="885" width="0.0531%" height="15" fill="rgb(229,40,46)" fg:x="170858" fg:w="190"/><text x="47.9933%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (439 samples, 0.12%)</title><rect x="47.6746%" y="901" width="0.1227%" height="15" fill="rgb(244,195,20)" fg:x="170612" fg:w="439"/><text x="47.9246%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (305 samples, 0.09%)</title><rect x="47.8003%" y="901" width="0.0852%" height="15" fill="rgb(253,56,35)" fg:x="171062" fg:w="305"/><text x="48.0503%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (211 samples, 0.06%)</title><rect x="47.8266%" y="885" width="0.0590%" height="15" fill="rgb(210,149,44)" fg:x="171156" fg:w="211"/><text x="48.0766%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.01%)</title><rect x="47.9009%" y="885" width="0.0131%" height="15" fill="rgb(240,135,12)" fg:x="171422" fg:w="47"/><text x="48.1509%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 0.01%)</title><rect x="47.9199%" y="885" width="0.0117%" height="15" fill="rgb(251,24,50)" fg:x="171490" fg:w="42"/><text x="48.1699%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="47.9316%" y="885" width="0.0140%" height="15" fill="rgb(243,200,47)" fg:x="171532" fg:w="50"/><text x="48.1816%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (86 samples, 0.02%)</title><rect x="47.9456%" y="885" width="0.0240%" height="15" fill="rgb(224,166,26)" fg:x="171582" fg:w="86"/><text x="48.1956%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (57 samples, 0.02%)</title><rect x="47.9537%" y="869" width="0.0159%" height="15" fill="rgb(233,0,47)" fg:x="171611" fg:w="57"/><text x="48.2037%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="47.9786%" y="869" width="0.0112%" height="15" fill="rgb(253,80,5)" fg:x="171700" fg:w="40"/><text x="48.2286%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (94 samples, 0.03%)</title><rect x="47.9898%" y="869" width="0.0263%" height="15" fill="rgb(214,133,25)" fg:x="171740" fg:w="94"/><text x="48.2398%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (92 samples, 0.03%)</title><rect x="48.0160%" y="869" width="0.0257%" height="15" fill="rgb(209,27,14)" fg:x="171834" fg:w="92"/><text x="48.2660%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (74 samples, 0.02%)</title><rect x="48.0211%" y="853" width="0.0207%" height="15" fill="rgb(219,102,51)" fg:x="171852" fg:w="74"/><text x="48.2711%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (571 samples, 0.16%)</title><rect x="47.8855%" y="901" width="0.1596%" height="15" fill="rgb(237,18,16)" fg:x="171367" fg:w="571"/><text x="48.1355%" y="911.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (264 samples, 0.07%)</title><rect x="47.9713%" y="885" width="0.0738%" height="15" fill="rgb(241,85,17)" fg:x="171674" fg:w="264"/><text x="48.2213%" y="895.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (43 samples, 0.01%)</title><rect x="48.0549%" y="901" width="0.0120%" height="15" fill="rgb(236,90,42)" fg:x="171973" fg:w="43"/><text x="48.3049%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (77 samples, 0.02%)</title><rect x="48.0971%" y="885" width="0.0215%" height="15" fill="rgb(249,57,21)" fg:x="172124" fg:w="77"/><text x="48.3471%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (50 samples, 0.01%)</title><rect x="48.1186%" y="885" width="0.0140%" height="15" fill="rgb(243,12,36)" fg:x="172201" fg:w="50"/><text x="48.3686%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (104 samples, 0.03%)</title><rect x="48.1613%" y="869" width="0.0291%" height="15" fill="rgb(253,128,47)" fg:x="172354" fg:w="104"/><text x="48.4113%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (146 samples, 0.04%)</title><rect x="48.1929%" y="869" width="0.0408%" height="15" fill="rgb(207,33,20)" fg:x="172467" fg:w="146"/><text x="48.4429%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_free (43 samples, 0.01%)</title><rect x="48.2477%" y="853" width="0.0120%" height="15" fill="rgb(233,215,35)" fg:x="172663" fg:w="43"/><text x="48.4977%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (78 samples, 0.02%)</title><rect x="48.3036%" y="821" width="0.0218%" height="15" fill="rgb(249,188,52)" fg:x="172863" fg:w="78"/><text x="48.5536%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (351 samples, 0.10%)</title><rect x="48.2672%" y="853" width="0.0981%" height="15" fill="rgb(225,12,32)" fg:x="172733" fg:w="351"/><text x="48.5172%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (277 samples, 0.08%)</title><rect x="48.2879%" y="837" width="0.0774%" height="15" fill="rgb(247,98,14)" fg:x="172807" fg:w="277"/><text x="48.5379%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (143 samples, 0.04%)</title><rect x="48.3254%" y="821" width="0.0400%" height="15" fill="rgb(247,219,48)" fg:x="172941" fg:w="143"/><text x="48.5754%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (136 samples, 0.04%)</title><rect x="48.3681%" y="853" width="0.0380%" height="15" fill="rgb(253,60,48)" fg:x="173094" fg:w="136"/><text x="48.6181%" y="863.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (45 samples, 0.01%)</title><rect x="48.4139%" y="853" width="0.0126%" height="15" fill="rgb(245,15,52)" fg:x="173258" fg:w="45"/><text x="48.6639%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.01%)</title><rect x="48.5914%" y="837" width="0.0145%" height="15" fill="rgb(220,133,28)" fg:x="173893" fg:w="52"/><text x="48.8414%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.01%)</title><rect x="48.6467%" y="805" width="0.0106%" height="15" fill="rgb(217,180,4)" fg:x="174091" fg:w="38"/><text x="48.8967%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (176 samples, 0.05%)</title><rect x="48.6084%" y="837" width="0.0492%" height="15" fill="rgb(251,24,1)" fg:x="173954" fg:w="176"/><text x="48.8584%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (106 samples, 0.03%)</title><rect x="48.6280%" y="821" width="0.0296%" height="15" fill="rgb(212,185,49)" fg:x="174024" fg:w="106"/><text x="48.8780%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (881 samples, 0.25%)</title><rect x="48.4274%" y="853" width="0.2462%" height="15" fill="rgb(215,175,22)" fg:x="173306" fg:w="881"/><text x="48.6774%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,630 samples, 0.46%)</title><rect x="48.2337%" y="869" width="0.4555%" height="15" fill="rgb(250,205,14)" fg:x="172613" fg:w="1630"/><text x="48.4837%" y="879.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (56 samples, 0.02%)</title><rect x="48.6735%" y="853" width="0.0156%" height="15" fill="rgb(225,211,22)" fg:x="174187" fg:w="56"/><text x="48.9235%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="48.6892%" y="869" width="0.0156%" height="15" fill="rgb(251,179,42)" fg:x="174243" fg:w="56"/><text x="48.9392%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (79 samples, 0.02%)</title><rect x="48.7048%" y="869" width="0.0221%" height="15" fill="rgb(208,216,51)" fg:x="174299" fg:w="79"/><text x="48.9548%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (337 samples, 0.09%)</title><rect x="48.8261%" y="853" width="0.0942%" height="15" fill="rgb(235,36,11)" fg:x="174733" fg:w="337"/><text x="49.0761%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="48.9203%" y="853" width="0.0101%" height="15" fill="rgb(213,189,28)" fg:x="175070" fg:w="36"/><text x="49.1703%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (152 samples, 0.04%)</title><rect x="48.9303%" y="853" width="0.0425%" height="15" fill="rgb(227,203,42)" fg:x="175106" fg:w="152"/><text x="49.1803%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (126 samples, 0.04%)</title><rect x="48.9376%" y="837" width="0.0352%" height="15" fill="rgb(244,72,36)" fg:x="175132" fg:w="126"/><text x="49.1876%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (89 samples, 0.02%)</title><rect x="48.9479%" y="821" width="0.0249%" height="15" fill="rgb(213,53,17)" fg:x="175169" fg:w="89"/><text x="49.1979%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (432 samples, 0.12%)</title><rect x="48.9745%" y="853" width="0.1207%" height="15" fill="rgb(207,167,3)" fg:x="175264" fg:w="432"/><text x="49.2245%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (218 samples, 0.06%)</title><rect x="49.1016%" y="853" width="0.0609%" height="15" fill="rgb(216,98,30)" fg:x="175719" fg:w="218"/><text x="49.3516%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (446 samples, 0.12%)</title><rect x="49.1625%" y="853" width="0.1246%" height="15" fill="rgb(236,123,15)" fg:x="175937" fg:w="446"/><text x="49.4125%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (305 samples, 0.09%)</title><rect x="49.2019%" y="837" width="0.0852%" height="15" fill="rgb(248,81,50)" fg:x="176078" fg:w="305"/><text x="49.4519%" y="847.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (55 samples, 0.02%)</title><rect x="49.2967%" y="853" width="0.0154%" height="15" fill="rgb(214,120,4)" fg:x="176417" fg:w="55"/><text x="49.5467%" y="863.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (52 samples, 0.01%)</title><rect x="49.3154%" y="853" width="0.0145%" height="15" fill="rgb(208,179,34)" fg:x="176484" fg:w="52"/><text x="49.5654%" y="863.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (77 samples, 0.02%)</title><rect x="49.3352%" y="853" width="0.0215%" height="15" fill="rgb(227,140,7)" fg:x="176555" fg:w="77"/><text x="49.5852%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_free (54 samples, 0.02%)</title><rect x="49.4177%" y="837" width="0.0151%" height="15" fill="rgb(214,22,6)" fg:x="176850" fg:w="54"/><text x="49.6677%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (282 samples, 0.08%)</title><rect x="49.4328%" y="837" width="0.0788%" height="15" fill="rgb(207,137,27)" fg:x="176904" fg:w="282"/><text x="49.6828%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (96 samples, 0.03%)</title><rect x="49.5146%" y="837" width="0.0268%" height="15" fill="rgb(210,8,46)" fg:x="177197" fg:w="96"/><text x="49.7646%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (305 samples, 0.09%)</title><rect x="49.5448%" y="837" width="0.0852%" height="15" fill="rgb(240,16,54)" fg:x="177305" fg:w="305"/><text x="49.7948%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (76 samples, 0.02%)</title><rect x="49.6806%" y="789" width="0.0212%" height="15" fill="rgb(211,209,29)" fg:x="177791" fg:w="76"/><text x="49.9306%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (312 samples, 0.09%)</title><rect x="49.6490%" y="821" width="0.0872%" height="15" fill="rgb(226,228,24)" fg:x="177678" fg:w="312"/><text x="49.8990%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (251 samples, 0.07%)</title><rect x="49.6661%" y="805" width="0.0701%" height="15" fill="rgb(222,84,9)" fg:x="177739" fg:w="251"/><text x="49.9161%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (123 samples, 0.03%)</title><rect x="49.7018%" y="789" width="0.0344%" height="15" fill="rgb(234,203,30)" fg:x="177867" fg:w="123"/><text x="49.9518%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (74 samples, 0.02%)</title><rect x="49.8052%" y="805" width="0.0207%" height="15" fill="rgb(238,109,14)" fg:x="178237" fg:w="74"/><text x="50.0552%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (302 samples, 0.08%)</title><rect x="49.7505%" y="821" width="0.0844%" height="15" fill="rgb(233,206,34)" fg:x="178041" fg:w="302"/><text x="50.0005%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (738 samples, 0.21%)</title><rect x="49.6300%" y="837" width="0.2062%" height="15" fill="rgb(220,167,47)" fg:x="177610" fg:w="738"/><text x="49.8800%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (262 samples, 0.07%)</title><rect x="49.8430%" y="837" width="0.0732%" height="15" fill="rgb(238,105,10)" fg:x="178372" fg:w="262"/><text x="50.0930%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (185 samples, 0.05%)</title><rect x="49.8645%" y="821" width="0.0517%" height="15" fill="rgb(213,227,17)" fg:x="178449" fg:w="185"/><text x="50.1145%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (77 samples, 0.02%)</title><rect x="49.9427%" y="821" width="0.0215%" height="15" fill="rgb(217,132,38)" fg:x="178729" fg:w="77"/><text x="50.1927%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="49.9642%" y="821" width="0.0156%" height="15" fill="rgb(242,146,4)" fg:x="178806" fg:w="56"/><text x="50.2142%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.04%)</title><rect x="49.9925%" y="821" width="0.0355%" height="15" fill="rgb(212,61,9)" fg:x="178907" fg:w="127"/><text x="50.2425%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (106 samples, 0.03%)</title><rect x="50.0279%" y="821" width="0.0296%" height="15" fill="rgb(247,126,22)" fg:x="179034" fg:w="106"/><text x="50.2779%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (71 samples, 0.02%)</title><rect x="50.0377%" y="805" width="0.0198%" height="15" fill="rgb(220,196,2)" fg:x="179069" fg:w="71"/><text x="50.2877%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.02%)</title><rect x="50.0841%" y="805" width="0.0154%" height="15" fill="rgb(208,46,4)" fg:x="179235" fg:w="55"/><text x="50.3341%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (75 samples, 0.02%)</title><rect x="50.1059%" y="805" width="0.0210%" height="15" fill="rgb(252,104,46)" fg:x="179313" fg:w="75"/><text x="50.3559%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (40 samples, 0.01%)</title><rect x="50.1559%" y="757" width="0.0112%" height="15" fill="rgb(237,152,48)" fg:x="179492" fg:w="40"/><text x="50.4059%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 0.04%)</title><rect x="50.1397%" y="789" width="0.0447%" height="15" fill="rgb(221,59,37)" fg:x="179434" fg:w="160"/><text x="50.3897%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (130 samples, 0.04%)</title><rect x="50.1481%" y="773" width="0.0363%" height="15" fill="rgb(209,202,51)" fg:x="179464" fg:w="130"/><text x="50.3981%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (62 samples, 0.02%)</title><rect x="50.1671%" y="757" width="0.0173%" height="15" fill="rgb(228,81,30)" fg:x="179532" fg:w="62"/><text x="50.4171%" y="767.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (209 samples, 0.06%)</title><rect x="50.1978%" y="789" width="0.0584%" height="15" fill="rgb(227,42,39)" fg:x="179642" fg:w="209"/><text x="50.4478%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (472 samples, 0.13%)</title><rect x="50.1269%" y="805" width="0.1319%" height="15" fill="rgb(221,26,2)" fg:x="179388" fg:w="472"/><text x="50.3769%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="50.2629%" y="805" width="0.0187%" height="15" fill="rgb(254,61,31)" fg:x="179875" fg:w="67"/><text x="50.5129%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (44 samples, 0.01%)</title><rect x="50.2694%" y="789" width="0.0123%" height="15" fill="rgb(222,173,38)" fg:x="179898" fg:w="44"/><text x="50.5194%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.01%)</title><rect x="50.2968%" y="789" width="0.0123%" height="15" fill="rgb(218,50,12)" fg:x="179996" fg:w="44"/><text x="50.5468%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="50.3091%" y="789" width="0.0101%" height="15" fill="rgb(223,88,40)" fg:x="180040" fg:w="36"/><text x="50.5591%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (47 samples, 0.01%)</title><rect x="50.3191%" y="789" width="0.0131%" height="15" fill="rgb(237,54,19)" fg:x="180076" fg:w="47"/><text x="50.5691%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="50.3387%" y="789" width="0.0187%" height="15" fill="rgb(251,129,25)" fg:x="180146" fg:w="67"/><text x="50.5887%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (48 samples, 0.01%)</title><rect x="50.3440%" y="773" width="0.0134%" height="15" fill="rgb(238,97,19)" fg:x="180165" fg:w="48"/><text x="50.5940%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.02%)</title><rect x="50.3700%" y="773" width="0.0156%" height="15" fill="rgb(240,169,18)" fg:x="180258" fg:w="56"/><text x="50.6200%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (65 samples, 0.02%)</title><rect x="50.3929%" y="773" width="0.0182%" height="15" fill="rgb(230,187,49)" fg:x="180340" fg:w="65"/><text x="50.6429%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="50.3954%" y="757" width="0.0156%" height="15" fill="rgb(209,44,26)" fg:x="180349" fg:w="56"/><text x="50.6454%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (483 samples, 0.13%)</title><rect x="50.2817%" y="805" width="0.1350%" height="15" fill="rgb(244,0,6)" fg:x="179942" fg:w="483"/><text x="50.5317%" y="815.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (196 samples, 0.05%)</title><rect x="50.3619%" y="789" width="0.0548%" height="15" fill="rgb(248,18,21)" fg:x="180229" fg:w="196"/><text x="50.6119%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,844 samples, 0.52%)</title><rect x="49.9162%" y="837" width="0.5153%" height="15" fill="rgb(245,180,19)" fg:x="178634" fg:w="1844"/><text x="50.1662%" y="847.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (1,288 samples, 0.36%)</title><rect x="50.0715%" y="821" width="0.3599%" height="15" fill="rgb(252,118,36)" fg:x="179190" fg:w="1288"/><text x="50.3215%" y="831.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (46 samples, 0.01%)</title><rect x="50.4482%" y="837" width="0.0129%" height="15" fill="rgb(210,224,19)" fg:x="180538" fg:w="46"/><text x="50.6982%" y="847.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (44 samples, 0.01%)</title><rect x="50.4639%" y="837" width="0.0123%" height="15" fill="rgb(218,30,24)" fg:x="180594" fg:w="44"/><text x="50.7139%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (145 samples, 0.04%)</title><rect x="50.5158%" y="821" width="0.0405%" height="15" fill="rgb(219,75,50)" fg:x="180780" fg:w="145"/><text x="50.7658%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (75 samples, 0.02%)</title><rect x="50.5564%" y="821" width="0.0210%" height="15" fill="rgb(234,72,50)" fg:x="180925" fg:w="75"/><text x="50.8064%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (40 samples, 0.01%)</title><rect x="50.5812%" y="821" width="0.0112%" height="15" fill="rgb(219,100,48)" fg:x="181014" fg:w="40"/><text x="50.8312%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (152 samples, 0.04%)</title><rect x="50.6284%" y="805" width="0.0425%" height="15" fill="rgb(253,5,41)" fg:x="181183" fg:w="152"/><text x="50.8784%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (48 samples, 0.01%)</title><rect x="50.6751%" y="805" width="0.0134%" height="15" fill="rgb(247,181,11)" fg:x="181350" fg:w="48"/><text x="50.9251%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (65 samples, 0.02%)</title><rect x="50.6885%" y="805" width="0.0182%" height="15" fill="rgb(222,223,25)" fg:x="181398" fg:w="65"/><text x="50.9385%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_free (48 samples, 0.01%)</title><rect x="50.7260%" y="789" width="0.0134%" height="15" fill="rgb(214,198,28)" fg:x="181532" fg:w="48"/><text x="50.9760%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (51 samples, 0.01%)</title><rect x="50.7575%" y="773" width="0.0143%" height="15" fill="rgb(230,46,43)" fg:x="181645" fg:w="51"/><text x="51.0075%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (120 samples, 0.03%)</title><rect x="50.8023%" y="757" width="0.0335%" height="15" fill="rgb(233,65,53)" fg:x="181805" fg:w="120"/><text x="51.0523%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (524 samples, 0.15%)</title><rect x="50.7489%" y="789" width="0.1464%" height="15" fill="rgb(221,121,27)" fg:x="181614" fg:w="524"/><text x="50.9989%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (424 samples, 0.12%)</title><rect x="50.7768%" y="773" width="0.1185%" height="15" fill="rgb(247,70,47)" fg:x="181714" fg:w="424"/><text x="51.0268%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (212 samples, 0.06%)</title><rect x="50.8361%" y="757" width="0.0592%" height="15" fill="rgb(228,85,35)" fg:x="181926" fg:w="212"/><text x="51.0861%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (48 samples, 0.01%)</title><rect x="50.9020%" y="789" width="0.0134%" height="15" fill="rgb(209,50,18)" fg:x="182162" fg:w="48"/><text x="51.1520%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (155 samples, 0.04%)</title><rect x="51.0764%" y="773" width="0.0433%" height="15" fill="rgb(250,19,35)" fg:x="182786" fg:w="155"/><text x="51.3264%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (743 samples, 0.21%)</title><rect x="50.9300%" y="789" width="0.2076%" height="15" fill="rgb(253,107,29)" fg:x="182262" fg:w="743"/><text x="51.1800%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,584 samples, 0.44%)</title><rect x="50.7067%" y="805" width="0.4426%" height="15" fill="rgb(252,179,29)" fg:x="181463" fg:w="1584"/><text x="50.9567%" y="815.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (42 samples, 0.01%)</title><rect x="51.1376%" y="789" width="0.0117%" height="15" fill="rgb(238,194,6)" fg:x="183005" fg:w="42"/><text x="51.3876%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (44 samples, 0.01%)</title><rect x="51.1736%" y="789" width="0.0123%" height="15" fill="rgb(238,164,29)" fg:x="183134" fg:w="44"/><text x="51.4236%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (110 samples, 0.03%)</title><rect x="51.1588%" y="805" width="0.0307%" height="15" fill="rgb(224,25,9)" fg:x="183081" fg:w="110"/><text x="51.4088%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (176 samples, 0.05%)</title><rect x="51.2524%" y="789" width="0.0492%" height="15" fill="rgb(244,153,23)" fg:x="183416" fg:w="176"/><text x="51.5024%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (101 samples, 0.03%)</title><rect x="51.3019%" y="789" width="0.0282%" height="15" fill="rgb(212,203,14)" fg:x="183593" fg:w="101"/><text x="51.5519%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (222 samples, 0.06%)</title><rect x="51.3301%" y="789" width="0.0620%" height="15" fill="rgb(220,164,20)" fg:x="183694" fg:w="222"/><text x="51.5801%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.05%)</title><rect x="51.3921%" y="789" width="0.0464%" height="15" fill="rgb(222,203,48)" fg:x="183916" fg:w="166"/><text x="51.6421%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (376 samples, 0.11%)</title><rect x="51.4385%" y="789" width="0.1051%" height="15" fill="rgb(215,159,22)" fg:x="184082" fg:w="376"/><text x="51.6885%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (242 samples, 0.07%)</title><rect x="51.4760%" y="773" width="0.0676%" height="15" fill="rgb(216,183,47)" fg:x="184216" fg:w="242"/><text x="51.7260%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (179 samples, 0.05%)</title><rect x="51.5877%" y="773" width="0.0500%" height="15" fill="rgb(229,195,25)" fg:x="184616" fg:w="179"/><text x="51.8377%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (365 samples, 0.10%)</title><rect x="51.6378%" y="773" width="0.1020%" height="15" fill="rgb(224,132,51)" fg:x="184795" fg:w="365"/><text x="51.8878%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (288 samples, 0.08%)</title><rect x="51.7397%" y="773" width="0.0805%" height="15" fill="rgb(240,63,7)" fg:x="185160" fg:w="288"/><text x="51.9897%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (210 samples, 0.06%)</title><rect x="51.7615%" y="757" width="0.0587%" height="15" fill="rgb(249,182,41)" fg:x="185238" fg:w="210"/><text x="52.0115%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,323 samples, 0.65%)</title><rect x="51.1895%" y="805" width="0.6491%" height="15" fill="rgb(243,47,26)" fg:x="183191" fg:w="2323"/><text x="51.4395%" y="815.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (992 samples, 0.28%)</title><rect x="51.5615%" y="789" width="0.2772%" height="15" fill="rgb(233,48,2)" fg:x="184522" fg:w="992"/><text x="51.8115%" y="799.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (81 samples, 0.02%)</title><rect x="51.8697%" y="805" width="0.0226%" height="15" fill="rgb(244,165,34)" fg:x="185625" fg:w="81"/><text x="52.1197%" y="815.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5,074 samples, 1.42%)</title><rect x="50.4803%" y="837" width="1.4178%" height="15" fill="rgb(207,89,7)" fg:x="180653" fg:w="5074"/><text x="50.7303%" y="847.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (4,608 samples, 1.29%)</title><rect x="50.6106%" y="821" width="1.2876%" height="15" fill="rgb(244,117,36)" fg:x="181119" fg:w="4608"/><text x="50.8606%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_free (52 samples, 0.01%)</title><rect x="51.9493%" y="821" width="0.0145%" height="15" fill="rgb(226,144,34)" fg:x="185910" fg:w="52"/><text x="52.1993%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.01%)</title><rect x="51.9669%" y="821" width="0.0117%" height="15" fill="rgb(213,23,19)" fg:x="185973" fg:w="42"/><text x="52.2169%" y="831.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 samples, 0.09%)</title><rect x="51.9787%" y="821" width="0.0872%" height="15" fill="rgb(217,75,12)" fg:x="186015" fg:w="312"/><text x="52.2287%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (82 samples, 0.02%)</title><rect x="52.1337%" y="805" width="0.0229%" height="15" fill="rgb(224,159,17)" fg:x="186570" fg:w="82"/><text x="52.3837%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (125 samples, 0.03%)</title><rect x="52.1567%" y="805" width="0.0349%" height="15" fill="rgb(217,118,1)" fg:x="186652" fg:w="125"/><text x="52.4067%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (104 samples, 0.03%)</title><rect x="52.2271%" y="789" width="0.0291%" height="15" fill="rgb(232,180,48)" fg:x="186904" fg:w="104"/><text x="52.4771%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.01%)</title><rect x="52.2561%" y="789" width="0.0143%" height="15" fill="rgb(230,27,33)" fg:x="187008" fg:w="51"/><text x="52.5061%" y="799.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (410 samples, 0.11%)</title><rect x="52.2704%" y="789" width="0.1146%" height="15" fill="rgb(205,31,21)" fg:x="187059" fg:w="410"/><text x="52.5204%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (119 samples, 0.03%)</title><rect x="52.4378%" y="773" width="0.0333%" height="15" fill="rgb(253,59,4)" fg:x="187658" fg:w="119"/><text x="52.6878%" y="783.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (697 samples, 0.19%)</title><rect x="52.4710%" y="773" width="0.1948%" height="15" fill="rgb(224,201,9)" fg:x="187777" fg:w="697"/><text x="52.7210%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,122 samples, 0.31%)</title><rect x="52.3850%" y="789" width="0.3135%" height="15" fill="rgb(229,206,30)" fg:x="187469" fg:w="1122"/><text x="52.6350%" y="799.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (117 samples, 0.03%)</title><rect x="52.6658%" y="773" width="0.0327%" height="15" fill="rgb(212,67,47)" fg:x="188474" fg:w="117"/><text x="52.9158%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,836 samples, 0.51%)</title><rect x="52.1989%" y="805" width="0.5130%" height="15" fill="rgb(211,96,50)" fg:x="186803" fg:w="1836"/><text x="52.4489%" y="815.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (48 samples, 0.01%)</title><rect x="52.6985%" y="789" width="0.0134%" height="15" fill="rgb(252,114,18)" fg:x="188591" fg:w="48"/><text x="52.9485%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.03%)</title><rect x="52.7119%" y="805" width="0.0319%" height="15" fill="rgb(223,58,37)" fg:x="188639" fg:w="114"/><text x="52.9619%" y="815.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (2,447 samples, 0.68%)</title><rect x="52.0658%" y="821" width="0.6838%" height="15" fill="rgb(237,70,4)" fg:x="186327" fg:w="2447"/><text x="52.3158%" y="831.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (12,162 samples, 3.40%)</title><rect x="49.3567%" y="853" width="3.3985%" height="15" fill="rgb(244,85,46)" fg:x="176632" fg:w="12162"/><text x="49.6067%" y="863.50">sk-..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (3,018 samples, 0.84%)</title><rect x="51.9119%" y="837" width="0.8433%" height="15" fill="rgb(223,39,52)" fg:x="185776" fg:w="3018"/><text x="52.1619%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,421 samples, 4.03%)</title><rect x="48.7269%" y="869" width="4.0297%" height="15" fill="rgb(218,200,14)" fg:x="174378" fg:w="14421"/><text x="48.9769%" y="879.50">sk-g..</text></g><g><title>sk-gen`DYLD-STUB$$memcmp (46 samples, 0.01%)</title><rect x="52.7639%" y="869" width="0.0129%" height="15" fill="rgb(208,171,16)" fg:x="188825" fg:w="46"/><text x="53.0139%" y="879.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (102 samples, 0.03%)</title><rect x="52.7865%" y="869" width="0.0285%" height="15" fill="rgb(234,200,18)" fg:x="188906" fg:w="102"/><text x="53.0365%" y="879.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16,984 samples, 4.75%)</title><rect x="48.0831%" y="901" width="4.7459%" height="15" fill="rgb(228,45,11)" fg:x="172074" fg:w="16984"/><text x="48.3331%" y="911.50">sk-gen..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (16,736 samples, 4.68%)</title><rect x="48.1524%" y="885" width="4.6766%" height="15" fill="rgb(237,182,11)" fg:x="172322" fg:w="16736"/><text x="48.4024%" y="895.50">sk-ge..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (50 samples, 0.01%)</title><rect x="52.8150%" y="869" width="0.0140%" height="15" fill="rgb(241,175,49)" fg:x="189008" fg:w="50"/><text x="53.0650%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (205 samples, 0.06%)</title><rect x="52.8731%" y="885" width="0.0573%" height="15" fill="rgb(247,38,35)" fg:x="189216" fg:w="205"/><text x="53.1231%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (94 samples, 0.03%)</title><rect x="53.0522%" y="869" width="0.0263%" height="15" fill="rgb(228,39,49)" fg:x="189857" fg:w="94"/><text x="53.3022%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (64 samples, 0.02%)</title><rect x="53.1090%" y="853" width="0.0179%" height="15" fill="rgb(226,101,26)" fg:x="190060" fg:w="64"/><text x="53.3590%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.02%)</title><rect x="53.1269%" y="853" width="0.0159%" height="15" fill="rgb(206,141,19)" fg:x="190124" fg:w="57"/><text x="53.3769%" y="863.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (605 samples, 0.17%)</title><rect x="53.1428%" y="853" width="0.1691%" height="15" fill="rgb(211,200,13)" fg:x="190181" fg:w="605"/><text x="53.3928%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_free (94 samples, 0.03%)</title><rect x="53.3820%" y="837" width="0.0263%" height="15" fill="rgb(241,121,6)" fg:x="191037" fg:w="94"/><text x="53.6320%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.02%)</title><rect x="53.4082%" y="837" width="0.0179%" height="15" fill="rgb(234,221,29)" fg:x="191131" fg:w="64"/><text x="53.6582%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (194 samples, 0.05%)</title><rect x="53.4331%" y="837" width="0.0542%" height="15" fill="rgb(229,136,5)" fg:x="191220" fg:w="194"/><text x="53.6831%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (835 samples, 0.23%)</title><rect x="53.4960%" y="837" width="0.2333%" height="15" fill="rgb(238,36,11)" fg:x="191445" fg:w="835"/><text x="53.7460%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.01%)</title><rect x="53.8355%" y="821" width="0.0131%" height="15" fill="rgb(251,55,41)" fg:x="192660" fg:w="47"/><text x="54.0855%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (200 samples, 0.06%)</title><rect x="53.8486%" y="821" width="0.0559%" height="15" fill="rgb(242,34,40)" fg:x="192707" fg:w="200"/><text x="54.0986%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (80 samples, 0.02%)</title><rect x="53.9045%" y="821" width="0.0224%" height="15" fill="rgb(215,42,17)" fg:x="192907" fg:w="80"/><text x="54.1545%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (52 samples, 0.01%)</title><rect x="53.9492%" y="805" width="0.0145%" height="15" fill="rgb(207,44,46)" fg:x="193067" fg:w="52"/><text x="54.1992%" y="815.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (112 samples, 0.03%)</title><rect x="53.9699%" y="805" width="0.0313%" height="15" fill="rgb(211,206,28)" fg:x="193141" fg:w="112"/><text x="54.2199%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.02%)</title><rect x="54.0222%" y="789" width="0.0204%" height="15" fill="rgb(237,167,16)" fg:x="193328" fg:w="73"/><text x="54.2722%" y="799.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (260 samples, 0.07%)</title><rect x="54.0462%" y="789" width="0.0727%" height="15" fill="rgb(233,66,6)" fg:x="193414" fg:w="260"/><text x="54.2962%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (45 samples, 0.01%)</title><rect x="54.1535%" y="773" width="0.0126%" height="15" fill="rgb(246,123,29)" fg:x="193798" fg:w="45"/><text x="54.4035%" y="783.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.02%)</title><rect x="54.1862%" y="757" width="0.0168%" height="15" fill="rgb(209,62,40)" fg:x="193915" fg:w="60"/><text x="54.4362%" y="767.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 samples, 0.02%)</title><rect x="54.2261%" y="741" width="0.0204%" height="15" fill="rgb(218,4,25)" fg:x="194058" fg:w="73"/><text x="54.4761%" y="751.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.05%)</title><rect x="54.2029%" y="757" width="0.0489%" height="15" fill="rgb(253,91,49)" fg:x="193975" fg:w="175"/><text x="54.4529%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (305 samples, 0.09%)</title><rect x="54.1691%" y="773" width="0.0852%" height="15" fill="rgb(228,155,29)" fg:x="193854" fg:w="305"/><text x="54.4191%" y="783.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (518 samples, 0.14%)</title><rect x="54.1188%" y="789" width="0.1447%" height="15" fill="rgb(243,57,37)" fg:x="193674" fg:w="518"/><text x="54.3688%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (951 samples, 0.27%)</title><rect x="54.0012%" y="805" width="0.2657%" height="15" fill="rgb(244,167,17)" fg:x="193253" fg:w="951"/><text x="54.2512%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,206 samples, 0.34%)</title><rect x="53.9344%" y="821" width="0.3370%" height="15" fill="rgb(207,181,38)" fg:x="193014" fg:w="1206"/><text x="54.1844%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_free (43 samples, 0.01%)</title><rect x="54.3105%" y="805" width="0.0120%" height="15" fill="rgb(211,8,23)" fg:x="194360" fg:w="43"/><text x="54.5605%" y="815.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (350 samples, 0.10%)</title><rect x="54.3354%" y="805" width="0.0978%" height="15" fill="rgb(235,11,44)" fg:x="194449" fg:w="350"/><text x="54.5854%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (82 samples, 0.02%)</title><rect x="54.5140%" y="789" width="0.0229%" height="15" fill="rgb(248,18,52)" fg:x="195088" fg:w="82"/><text x="54.7640%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (151 samples, 0.04%)</title><rect x="54.5369%" y="789" width="0.0422%" height="15" fill="rgb(208,4,7)" fg:x="195170" fg:w="151"/><text x="54.7869%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (87 samples, 0.02%)</title><rect x="54.6179%" y="773" width="0.0243%" height="15" fill="rgb(240,17,39)" fg:x="195460" fg:w="87"/><text x="54.8679%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.02%)</title><rect x="54.6422%" y="773" width="0.0168%" height="15" fill="rgb(207,170,3)" fg:x="195547" fg:w="60"/><text x="54.8922%" y="783.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (374 samples, 0.10%)</title><rect x="54.6590%" y="773" width="0.1045%" height="15" fill="rgb(236,100,52)" fg:x="195607" fg:w="374"/><text x="54.9090%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.04%)</title><rect x="54.8127%" y="757" width="0.0360%" height="15" fill="rgb(246,78,51)" fg:x="196157" fg:w="129"/><text x="55.0627%" y="767.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (830 samples, 0.23%)</title><rect x="54.8487%" y="757" width="0.2319%" height="15" fill="rgb(211,17,15)" fg:x="196286" fg:w="830"/><text x="55.0987%" y="767.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,263 samples, 0.35%)</title><rect x="54.7635%" y="773" width="0.3529%" height="15" fill="rgb(209,59,46)" fg:x="195981" fg:w="1263"/><text x="55.0135%" y="783.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (128 samples, 0.04%)</title><rect x="55.0806%" y="757" width="0.0358%" height="15" fill="rgb(210,92,25)" fg:x="197116" fg:w="128"/><text x="55.3306%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,927 samples, 0.54%)</title><rect x="54.5860%" y="789" width="0.5385%" height="15" fill="rgb(238,174,52)" fg:x="195346" fg:w="1927"/><text x="54.8360%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 0.04%)</title><rect x="55.1245%" y="789" width="0.0386%" height="15" fill="rgb(230,73,7)" fg:x="197273" fg:w="138"/><text x="55.3745%" y="799.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (2,634 samples, 0.74%)</title><rect x="54.4332%" y="805" width="0.7360%" height="15" fill="rgb(243,124,40)" fg:x="194799" fg:w="2634"/><text x="54.6832%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,231 samples, 0.90%)</title><rect x="54.2714%" y="821" width="0.9028%" height="15" fill="rgb(244,170,11)" fg:x="194220" fg:w="3231"/><text x="54.5214%" y="831.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (5,238 samples, 1.46%)</title><rect x="53.7327%" y="837" width="1.4637%" height="15" fill="rgb(207,114,54)" fg:x="192292" fg:w="5238"/><text x="53.9827%" y="847.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (37 samples, 0.01%)</title><rect x="55.1963%" y="837" width="0.0103%" height="15" fill="rgb(205,42,20)" fg:x="197530" fg:w="37"/><text x="55.4463%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,819 samples, 1.91%)</title><rect x="53.3118%" y="853" width="1.9055%" height="15" fill="rgb(230,30,28)" fg:x="190786" fg:w="6819"/><text x="53.5618%" y="863.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,677 samples, 2.15%)</title><rect x="53.0866%" y="869" width="2.1452%" height="15" fill="rgb(205,73,54)" fg:x="189980" fg:w="7677"/><text x="53.3366%" y="879.50">s..</text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (52 samples, 0.01%)</title><rect x="55.2173%" y="853" width="0.0145%" height="15" fill="rgb(254,227,23)" fg:x="197605" fg:w="52"/><text x="55.4673%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.05%)</title><rect x="55.2318%" y="869" width="0.0464%" height="15" fill="rgb(228,202,34)" fg:x="197657" fg:w="166"/><text x="55.4818%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (8,423 samples, 2.35%)</title><rect x="52.9304%" y="885" width="2.3537%" height="15" fill="rgb(222,225,37)" fg:x="189421" fg:w="8423"/><text x="53.1804%" y="895.50">s..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (28,065 samples, 7.84%)</title><rect x="47.4474%" y="917" width="7.8423%" height="15" fill="rgb(221,14,54)" fg:x="169799" fg:w="28065"/><text x="47.6974%" y="927.50">sk-gen`sk_c..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (8,773 samples, 2.45%)</title><rect x="52.8382%" y="901" width="2.4515%" height="15" fill="rgb(254,102,2)" fg:x="189091" fg:w="8773"/><text x="53.0882%" y="911.50">sk..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30,294 samples, 8.47%)</title><rect x="46.8256%" y="933" width="8.4651%" height="15" fill="rgb(232,104,17)" fg:x="167574" fg:w="30294"/><text x="47.0756%" y="943.50">sk-gen`&lt;allo..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (50 samples, 0.01%)</title><rect x="55.2908%" y="933" width="0.0140%" height="15" fill="rgb(250,220,14)" fg:x="197868" fg:w="50"/><text x="55.5408%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (45 samples, 0.01%)</title><rect x="55.3047%" y="933" width="0.0126%" height="15" fill="rgb(241,158,9)" fg:x="197918" fg:w="45"/><text x="55.5547%" y="943.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (39 samples, 0.01%)</title><rect x="55.3293%" y="933" width="0.0109%" height="15" fill="rgb(246,9,43)" fg:x="198006" fg:w="39"/><text x="55.5793%" y="943.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (103 samples, 0.03%)</title><rect x="55.3458%" y="933" width="0.0288%" height="15" fill="rgb(206,73,33)" fg:x="198065" fg:w="103"/><text x="55.5958%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35,246 samples, 9.85%)</title><rect x="45.5478%" y="965" width="9.8489%" height="15" fill="rgb(222,79,8)" fg:x="163001" fg:w="35246"/><text x="45.7978%" y="975.50">sk-gen`&lt;alloc:..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (33,754 samples, 9.43%)</title><rect x="45.9647%" y="949" width="9.4320%" height="15" fill="rgb(234,8,54)" fg:x="164493" fg:w="33754"/><text x="46.2147%" y="959.50">sk-gen`sk_cor..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (79 samples, 0.02%)</title><rect x="55.3746%" y="933" width="0.0221%" height="15" fill="rgb(209,134,38)" fg:x="198168" fg:w="79"/><text x="55.6246%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (36 samples, 0.01%)</title><rect x="55.4056%" y="965" width="0.0101%" height="15" fill="rgb(230,127,29)" fg:x="198279" fg:w="36"/><text x="55.6556%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.01%)</title><rect x="55.4637%" y="917" width="0.0145%" height="15" fill="rgb(242,44,41)" fg:x="198487" fg:w="52"/><text x="55.7137%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.01%)</title><rect x="55.4679%" y="901" width="0.0103%" height="15" fill="rgb(222,56,43)" fg:x="198502" fg:w="37"/><text x="55.7179%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.01%)</title><rect x="55.5213%" y="901" width="0.0134%" height="15" fill="rgb(238,39,47)" fg:x="198693" fg:w="48"/><text x="55.7713%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (172 samples, 0.05%)</title><rect x="55.4889%" y="917" width="0.0481%" height="15" fill="rgb(226,79,43)" fg:x="198577" fg:w="172"/><text x="55.7389%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (292 samples, 0.08%)</title><rect x="55.4579%" y="933" width="0.0816%" height="15" fill="rgb(242,105,53)" fg:x="198466" fg:w="292"/><text x="55.7079%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="55.5607%" y="917" width="0.0112%" height="15" fill="rgb(251,132,46)" fg:x="198834" fg:w="40"/><text x="55.8107%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (58 samples, 0.02%)</title><rect x="55.5789%" y="917" width="0.0162%" height="15" fill="rgb(231,77,14)" fg:x="198899" fg:w="58"/><text x="55.8289%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (87 samples, 0.02%)</title><rect x="55.6043%" y="917" width="0.0243%" height="15" fill="rgb(240,135,9)" fg:x="198990" fg:w="87"/><text x="55.8543%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (59 samples, 0.02%)</title><rect x="55.6121%" y="901" width="0.0165%" height="15" fill="rgb(248,109,14)" fg:x="199018" fg:w="59"/><text x="55.8621%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="55.6376%" y="901" width="0.0115%" height="15" fill="rgb(227,146,52)" fg:x="199109" fg:w="41"/><text x="55.8876%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.03%)</title><rect x="55.6490%" y="901" width="0.0268%" height="15" fill="rgb(232,54,3)" fg:x="199150" fg:w="96"/><text x="55.8990%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (76 samples, 0.02%)</title><rect x="55.6758%" y="901" width="0.0212%" height="15" fill="rgb(229,201,43)" fg:x="199246" fg:w="76"/><text x="55.9258%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (58 samples, 0.02%)</title><rect x="55.6809%" y="885" width="0.0162%" height="15" fill="rgb(252,161,33)" fg:x="199264" fg:w="58"/><text x="55.9309%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (558 samples, 0.16%)</title><rect x="55.5451%" y="933" width="0.1559%" height="15" fill="rgb(226,146,40)" fg:x="198778" fg:w="558"/><text x="55.7951%" y="943.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (245 samples, 0.07%)</title><rect x="55.6325%" y="917" width="0.0685%" height="15" fill="rgb(219,47,25)" fg:x="199091" fg:w="245"/><text x="55.8825%" y="927.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (988 samples, 0.28%)</title><rect x="55.4338%" y="965" width="0.2761%" height="15" fill="rgb(250,135,13)" fg:x="198380" fg:w="988"/><text x="55.6838%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (953 samples, 0.27%)</title><rect x="55.4436%" y="949" width="0.2663%" height="15" fill="rgb(219,229,18)" fg:x="198415" fg:w="953"/><text x="55.6936%" y="959.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (89 samples, 0.02%)</title><rect x="55.7099%" y="965" width="0.0249%" height="15" fill="rgb(217,152,27)" fg:x="199368" fg:w="89"/><text x="55.9599%" y="975.50"></text></g><g><title>sk-gen`sk_core::jsonutils::order_json (36 samples, 0.01%)</title><rect x="55.7348%" y="965" width="0.0101%" height="15" fill="rgb(225,71,47)" fg:x="199457" fg:w="36"/><text x="55.9848%" y="975.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.02%)</title><rect x="55.7921%" y="917" width="0.0165%" height="15" fill="rgb(220,139,14)" fg:x="199662" fg:w="59"/><text x="56.0421%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (156 samples, 0.04%)</title><rect x="55.8278%" y="901" width="0.0436%" height="15" fill="rgb(247,54,32)" fg:x="199790" fg:w="156"/><text x="56.0778%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (253 samples, 0.07%)</title><rect x="55.8086%" y="917" width="0.0707%" height="15" fill="rgb(252,131,39)" fg:x="199721" fg:w="253"/><text x="56.0586%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (347 samples, 0.10%)</title><rect x="55.7845%" y="933" width="0.0970%" height="15" fill="rgb(210,108,39)" fg:x="199635" fg:w="347"/><text x="56.0345%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.01%)</title><rect x="55.8815%" y="933" width="0.0117%" height="15" fill="rgb(205,23,29)" fg:x="199982" fg:w="42"/><text x="56.1315%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (479 samples, 0.13%)</title><rect x="55.7597%" y="949" width="0.1338%" height="15" fill="rgb(246,139,46)" fg:x="199546" fg:w="479"/><text x="56.0097%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41,641 samples, 11.64%)</title><rect x="44.2579%" y="997" width="11.6359%" height="15" fill="rgb(250,81,26)" fg:x="158385" fg:w="41641"/><text x="44.5079%" y="1007.50">sk-gen`&lt;alloc::ve..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (39,743 samples, 11.11%)</title><rect x="44.7883%" y="981" width="11.1055%" height="15" fill="rgb(214,104,7)" fg:x="160283" fg:w="39743"/><text x="45.0383%" y="991.50">sk-gen`sk_core::..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (533 samples, 0.15%)</title><rect x="55.7449%" y="965" width="0.1489%" height="15" fill="rgb(233,189,8)" fg:x="199493" fg:w="533"/><text x="55.9949%" y="975.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (92 samples, 0.03%)</title><rect x="55.9243%" y="997" width="0.0257%" height="15" fill="rgb(228,141,17)" fg:x="200135" fg:w="92"/><text x="56.1743%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44,784 samples, 12.51%)</title><rect x="43.4546%" y="1029" width="12.5141%" height="15" fill="rgb(247,157,1)" fg:x="155510" fg:w="44784"/><text x="43.7046%" y="1039.50">sk-gen`&lt;alloc::vec:..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (43,897 samples, 12.27%)</title><rect x="43.7024%" y="1013" width="12.2663%" height="15" fill="rgb(249,225,5)" fg:x="156397" fg:w="43897"/><text x="43.9524%" y="1023.50">sk-gen`sk_core::js..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (67 samples, 0.02%)</title><rect x="55.9500%" y="997" width="0.0187%" height="15" fill="rgb(242,55,13)" fg:x="200227" fg:w="67"/><text x="56.2000%" y="1007.50"></text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (42 samples, 0.01%)</title><rect x="55.9790%" y="1029" width="0.0117%" height="15" fill="rgb(230,49,50)" fg:x="200331" fg:w="42"/><text x="56.2290%" y="1039.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::PartialEq&gt;::eq (115,709 samples, 32.33%)</title><rect x="23.6632%" y="1077" width="32.3329%" height="15" fill="rgb(241,111,38)" fg:x="84683" fg:w="115709"/><text x="23.9132%" y="1087.50">sk-gen`&lt;sk_gen::DynamicObjectNewType as core::cmp::P..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_eq (68,010 samples, 19.00%)</title><rect x="36.9919%" y="1061" width="19.0042%" height="15" fill="rgb(252,155,4)" fg:x="132382" fg:w="68010"/><text x="37.2419%" y="1071.50">sk-gen`sk_core::jsonutils::ord..</text></g><g><title>sk-gen`sk_core::jsonutils::order_json (45,750 samples, 12.78%)</title><rect x="43.2120%" y="1045" width="12.7840%" height="15" fill="rgb(212,69,32)" fg:x="154642" fg:w="45750"/><text x="43.4620%" y="1055.50">sk-gen`sk_core::jso..</text></g><g><title>sk-gen`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (116,191 samples, 32.47%)</title><rect x="23.5391%" y="1093" width="32.4676%" height="15" fill="rgb(243,107,47)" fg:x="84239" fg:w="116191"/><text x="23.7891%" y="1103.50">sk-gen`alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (906 samples, 0.25%)</title><rect x="56.0139%" y="1077" width="0.2532%" height="15" fill="rgb(247,130,12)" fg:x="200456" fg:w="906"/><text x="56.2639%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="56.2677%" y="1077" width="0.0103%" height="15" fill="rgb(233,74,16)" fg:x="201364" fg:w="37"/><text x="56.5177%" y="1087.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (121 samples, 0.03%)</title><rect x="56.2780%" y="1077" width="0.0338%" height="15" fill="rgb(208,58,18)" fg:x="201401" fg:w="121"/><text x="56.5280%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (38 samples, 0.01%)</title><rect x="56.3121%" y="1077" width="0.0106%" height="15" fill="rgb(242,225,1)" fg:x="201523" fg:w="38"/><text x="56.5621%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (129,096 samples, 36.07%)</title><rect x="20.3832%" y="1125" width="36.0736%" height="15" fill="rgb(249,39,40)" fg:x="72945" fg:w="129096"/><text x="20.6332%" y="1135.50">sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter:..</text></g><g><title>sk-gen`sk_gen::diff_objects (117,896 samples, 32.94%)</title><rect x="23.5129%" y="1109" width="32.9440%" height="15" fill="rgb(207,72,44)" fg:x="84145" fg:w="117896"/><text x="23.7629%" y="1119.50">sk-gen`sk_gen::diff_objects</text></g><g><title>sk-gen`daft::alloc_impls::_&lt;impl daft::diffable::Diffable for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::diff (1,611 samples, 0.45%)</title><rect x="56.0067%" y="1093" width="0.4502%" height="15" fill="rgb(215,193,12)" fg:x="200430" fg:w="1611"/><text x="56.2567%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (480 samples, 0.13%)</title><rect x="56.3227%" y="1077" width="0.1341%" height="15" fill="rgb(248,41,39)" fg:x="201561" fg:w="480"/><text x="56.5727%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.01%)</title><rect x="56.4641%" y="1077" width="0.0126%" height="15" fill="rgb(253,85,4)" fg:x="202067" fg:w="45"/><text x="56.7141%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (119 samples, 0.03%)</title><rect x="56.5236%" y="1061" width="0.0333%" height="15" fill="rgb(243,70,31)" fg:x="202280" fg:w="119"/><text x="56.7736%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="56.5569%" y="1061" width="0.0154%" height="15" fill="rgb(253,195,26)" fg:x="202399" fg:w="55"/><text x="56.8069%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (337 samples, 0.09%)</title><rect x="56.4809%" y="1077" width="0.0942%" height="15" fill="rgb(243,42,11)" fg:x="202127" fg:w="337"/><text x="56.7309%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (137 samples, 0.04%)</title><rect x="56.5767%" y="1061" width="0.0383%" height="15" fill="rgb(239,66,17)" fg:x="202470" fg:w="137"/><text x="56.8267%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.01%)</title><rect x="56.7061%" y="981" width="0.0115%" height="15" fill="rgb(217,132,21)" fg:x="202933" fg:w="41"/><text x="56.9561%" y="991.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersion as core::str::traits::FromStr&gt;::from_str (107 samples, 0.03%)</title><rect x="56.6907%" y="997" width="0.0299%" height="15" fill="rgb(252,202,21)" fg:x="202878" fg:w="107"/><text x="56.9407%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcpy (66 samples, 0.02%)</title><rect x="56.7218%" y="997" width="0.0184%" height="15" fill="rgb(233,98,36)" fg:x="202989" fg:w="66"/><text x="56.9718%" y="1007.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersionKind as core::convert::TryFrom&lt;&amp;kube_core::metadata::TypeMeta&gt;&gt;::try_from (276 samples, 0.08%)</title><rect x="56.6639%" y="1013" width="0.0771%" height="15" fill="rgb(216,153,54)" fg:x="202782" fg:w="276"/><text x="56.9139%" y="1023.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::convert::From&lt;&amp;kube_core::dynamic::DynamicObject&gt;&gt;::from (410 samples, 0.11%)</title><rect x="56.6279%" y="1045" width="0.1146%" height="15" fill="rgb(250,99,7)" fg:x="202653" fg:w="410"/><text x="56.8779%" y="1055.50"></text></g><g><title>sk-gen`sk_core::k8s::gvk::GVK::from_dynamic_obj (315 samples, 0.09%)</title><rect x="56.6544%" y="1029" width="0.0880%" height="15" fill="rgb(207,56,50)" fg:x="202748" fg:w="315"/><text x="56.9044%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (460 samples, 0.13%)</title><rect x="56.6150%" y="1061" width="0.1285%" height="15" fill="rgb(244,61,34)" fg:x="202607" fg:w="460"/><text x="56.8650%" y="1071.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (614 samples, 0.17%)</title><rect x="56.5753%" y="1077" width="0.1716%" height="15" fill="rgb(241,50,38)" fg:x="202465" fg:w="614"/><text x="56.8253%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (57 samples, 0.02%)</title><rect x="56.7472%" y="1061" width="0.0159%" height="15" fill="rgb(212,166,30)" fg:x="203080" fg:w="57"/><text x="56.9972%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,124 samples, 0.31%)</title><rect x="56.4577%" y="1093" width="0.3141%" height="15" fill="rgb(249,127,32)" fg:x="202044" fg:w="1124"/><text x="56.7077%" y="1103.50"></text></g><g><title>sk-gen`core::slice::sort::stable::driftsort_main (89 samples, 0.02%)</title><rect x="56.7469%" y="1077" width="0.0249%" height="15" fill="rgb(209,103,0)" fg:x="203079" fg:w="89"/><text x="56.9969%" y="1087.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (1,131 samples, 0.32%)</title><rect x="56.4574%" y="1109" width="0.3160%" height="15" fill="rgb(238,209,51)" fg:x="202043" fg:w="1131"/><text x="56.7074%" y="1119.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,133 samples, 0.32%)</title><rect x="56.4571%" y="1125" width="0.3166%" height="15" fill="rgb(237,56,23)" fg:x="202042" fg:w="1133"/><text x="56.7071%" y="1135.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (48 samples, 0.01%)</title><rect x="56.7924%" y="997" width="0.0134%" height="15" fill="rgb(215,153,46)" fg:x="203242" fg:w="48"/><text x="57.0424%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.03%)</title><rect x="56.7843%" y="1061" width="0.0307%" height="15" fill="rgb(224,49,31)" fg:x="203213" fg:w="110"/><text x="57.0343%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (83 samples, 0.02%)</title><rect x="56.7919%" y="1045" width="0.0232%" height="15" fill="rgb(250,18,42)" fg:x="203240" fg:w="83"/><text x="57.0419%" y="1055.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (83 samples, 0.02%)</title><rect x="56.7919%" y="1029" width="0.0232%" height="15" fill="rgb(215,176,39)" fg:x="203240" fg:w="83"/><text x="57.0419%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (81 samples, 0.02%)</title><rect x="56.7924%" y="1013" width="0.0226%" height="15" fill="rgb(223,77,29)" fg:x="203242" fg:w="81"/><text x="57.0424%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="56.8581%" y="917" width="0.0101%" height="15" fill="rgb(234,94,52)" fg:x="203477" fg:w="36"/><text x="57.1081%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="56.8556%" y="933" width="0.0140%" height="15" fill="rgb(220,154,50)" fg:x="203468" fg:w="50"/><text x="57.1056%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.02%)</title><rect x="56.8492%" y="949" width="0.0249%" height="15" fill="rgb(212,11,10)" fg:x="203445" fg:w="89"/><text x="57.0992%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (147 samples, 0.04%)</title><rect x="56.8388%" y="965" width="0.0411%" height="15" fill="rgb(205,166,19)" fg:x="203408" fg:w="147"/><text x="57.0888%" y="975.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (152 samples, 0.04%)</title><rect x="56.8388%" y="981" width="0.0425%" height="15" fill="rgb(244,198,16)" fg:x="203408" fg:w="152"/><text x="57.0888%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (221 samples, 0.06%)</title><rect x="56.8305%" y="997" width="0.0618%" height="15" fill="rgb(219,69,12)" fg:x="203378" fg:w="221"/><text x="57.0805%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (39 samples, 0.01%)</title><rect x="56.8813%" y="981" width="0.0109%" height="15" fill="rgb(245,30,7)" fg:x="203560" fg:w="39"/><text x="57.1313%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (71 samples, 0.02%)</title><rect x="56.9297%" y="389" width="0.0198%" height="15" fill="rgb(218,221,48)" fg:x="203733" fg:w="71"/><text x="57.1797%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (54 samples, 0.02%)</title><rect x="56.9344%" y="373" width="0.0151%" height="15" fill="rgb(216,66,15)" fg:x="203750" fg:w="54"/><text x="57.1844%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (53 samples, 0.01%)</title><rect x="56.9347%" y="357" width="0.0148%" height="15" fill="rgb(226,122,50)" fg:x="203751" fg:w="53"/><text x="57.1847%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (53 samples, 0.01%)</title><rect x="56.9347%" y="341" width="0.0148%" height="15" fill="rgb(239,156,16)" fg:x="203751" fg:w="53"/><text x="57.1847%" y="351.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (40 samples, 0.01%)</title><rect x="56.9383%" y="325" width="0.0112%" height="15" fill="rgb(224,27,38)" fg:x="203764" fg:w="40"/><text x="57.1883%" y="335.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (38 samples, 0.01%)</title><rect x="56.9389%" y="309" width="0.0106%" height="15" fill="rgb(224,39,27)" fg:x="203766" fg:w="38"/><text x="57.1889%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (38 samples, 0.01%)</title><rect x="56.9389%" y="293" width="0.0106%" height="15" fill="rgb(215,92,29)" fg:x="203766" fg:w="38"/><text x="57.1889%" y="303.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="56.9392%" y="277" width="0.0103%" height="15" fill="rgb(207,159,16)" fg:x="203767" fg:w="37"/><text x="57.1892%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (73 samples, 0.02%)</title><rect x="56.9297%" y="405" width="0.0204%" height="15" fill="rgb(238,163,47)" fg:x="203733" fg:w="73"/><text x="57.1797%" y="415.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.03%)</title><rect x="56.9227%" y="469" width="0.0335%" height="15" fill="rgb(219,91,49)" fg:x="203708" fg:w="120"/><text x="57.1727%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (95 samples, 0.03%)</title><rect x="56.9297%" y="453" width="0.0265%" height="15" fill="rgb(227,167,31)" fg:x="203733" fg:w="95"/><text x="57.1797%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (95 samples, 0.03%)</title><rect x="56.9297%" y="437" width="0.0265%" height="15" fill="rgb(234,80,54)" fg:x="203733" fg:w="95"/><text x="57.1797%" y="447.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (95 samples, 0.03%)</title><rect x="56.9297%" y="421" width="0.0265%" height="15" fill="rgb(212,114,2)" fg:x="203733" fg:w="95"/><text x="57.1797%" y="431.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (65 samples, 0.02%)</title><rect x="56.9702%" y="277" width="0.0182%" height="15" fill="rgb(234,50,24)" fg:x="203878" fg:w="65"/><text x="57.2202%" y="287.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (64 samples, 0.02%)</title><rect x="56.9704%" y="261" width="0.0179%" height="15" fill="rgb(221,68,8)" fg:x="203879" fg:w="64"/><text x="57.2204%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (127 samples, 0.04%)</title><rect x="56.9576%" y="325" width="0.0355%" height="15" fill="rgb(254,180,31)" fg:x="203833" fg:w="127"/><text x="57.2076%" y="335.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (125 samples, 0.03%)</title><rect x="56.9582%" y="309" width="0.0349%" height="15" fill="rgb(247,130,50)" fg:x="203835" fg:w="125"/><text x="57.2082%" y="319.50"></text></g><g><title>sk-gen`jaq_std::re (124 samples, 0.03%)</title><rect x="56.9584%" y="293" width="0.0346%" height="15" fill="rgb(211,109,4)" fg:x="203836" fg:w="124"/><text x="57.2084%" y="303.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (147 samples, 0.04%)</title><rect x="56.9576%" y="341" width="0.0411%" height="15" fill="rgb(238,50,21)" fg:x="203833" fg:w="147"/><text x="57.2076%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (158 samples, 0.04%)</title><rect x="56.9576%" y="357" width="0.0442%" height="15" fill="rgb(225,57,45)" fg:x="203833" fg:w="158"/><text x="57.2076%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (62 samples, 0.02%)</title><rect x="57.0163%" y="101" width="0.0173%" height="15" fill="rgb(209,196,50)" fg:x="204043" fg:w="62"/><text x="57.2663%" y="111.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (65 samples, 0.02%)</title><rect x="57.0157%" y="117" width="0.0182%" height="15" fill="rgb(242,140,13)" fg:x="204041" fg:w="65"/><text x="57.2657%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (68 samples, 0.02%)</title><rect x="57.0154%" y="133" width="0.0190%" height="15" fill="rgb(217,111,7)" fg:x="204040" fg:w="68"/><text x="57.2654%" y="143.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (160 samples, 0.04%)</title><rect x="57.0062%" y="197" width="0.0447%" height="15" fill="rgb(253,193,51)" fg:x="204007" fg:w="160"/><text x="57.2562%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (131 samples, 0.04%)</title><rect x="57.0143%" y="181" width="0.0366%" height="15" fill="rgb(252,70,29)" fg:x="204036" fg:w="131"/><text x="57.2643%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (131 samples, 0.04%)</title><rect x="57.0143%" y="165" width="0.0366%" height="15" fill="rgb(232,127,12)" fg:x="204036" fg:w="131"/><text x="57.2643%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (129 samples, 0.04%)</title><rect x="57.0149%" y="149" width="0.0360%" height="15" fill="rgb(211,180,21)" fg:x="204038" fg:w="129"/><text x="57.2649%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (59 samples, 0.02%)</title><rect x="57.0344%" y="133" width="0.0165%" height="15" fill="rgb(229,72,13)" fg:x="204108" fg:w="59"/><text x="57.2844%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (56 samples, 0.02%)</title><rect x="57.0353%" y="117" width="0.0156%" height="15" fill="rgb(240,211,49)" fg:x="204111" fg:w="56"/><text x="57.2853%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (56 samples, 0.02%)</title><rect x="57.0353%" y="101" width="0.0156%" height="15" fill="rgb(219,149,40)" fg:x="204111" fg:w="56"/><text x="57.2853%" y="111.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (171 samples, 0.05%)</title><rect x="57.0034%" y="261" width="0.0478%" height="15" fill="rgb(210,127,46)" fg:x="203997" fg:w="171"/><text x="57.2534%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (169 samples, 0.05%)</title><rect x="57.0040%" y="245" width="0.0472%" height="15" fill="rgb(220,106,7)" fg:x="203999" fg:w="169"/><text x="57.2540%" y="255.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (163 samples, 0.05%)</title><rect x="57.0057%" y="229" width="0.0455%" height="15" fill="rgb(249,31,22)" fg:x="204005" fg:w="163"/><text x="57.2557%" y="239.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.05%)</title><rect x="57.0057%" y="213" width="0.0455%" height="15" fill="rgb(253,1,49)" fg:x="204005" fg:w="163"/><text x="57.2557%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (173 samples, 0.05%)</title><rect x="57.0031%" y="277" width="0.0483%" height="15" fill="rgb(227,144,33)" fg:x="203996" fg:w="173"/><text x="57.2531%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.0515%" y="229" width="0.0103%" height="15" fill="rgb(249,163,44)" fg:x="204169" fg:w="37"/><text x="57.3015%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (37 samples, 0.01%)</title><rect x="57.0515%" y="213" width="0.0103%" height="15" fill="rgb(234,15,39)" fg:x="204169" fg:w="37"/><text x="57.3015%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (38 samples, 0.01%)</title><rect x="57.0515%" y="245" width="0.0106%" height="15" fill="rgb(207,66,16)" fg:x="204169" fg:w="38"/><text x="57.3015%" y="255.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (215 samples, 0.06%)</title><rect x="57.0023%" y="309" width="0.0601%" height="15" fill="rgb(233,112,24)" fg:x="203993" fg:w="215"/><text x="57.2523%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (212 samples, 0.06%)</title><rect x="57.0031%" y="293" width="0.0592%" height="15" fill="rgb(230,90,22)" fg:x="203996" fg:w="212"/><text x="57.2531%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (39 samples, 0.01%)</title><rect x="57.0515%" y="277" width="0.0109%" height="15" fill="rgb(229,61,13)" fg:x="204169" fg:w="39"/><text x="57.3015%" y="287.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (39 samples, 0.01%)</title><rect x="57.0515%" y="261" width="0.0109%" height="15" fill="rgb(225,57,24)" fg:x="204169" fg:w="39"/><text x="57.3015%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (383 samples, 0.11%)</title><rect x="56.9562%" y="469" width="0.1070%" height="15" fill="rgb(208,169,48)" fg:x="203828" fg:w="383"/><text x="57.2062%" y="479.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (382 samples, 0.11%)</title><rect x="56.9565%" y="453" width="0.1067%" height="15" fill="rgb(244,218,51)" fg:x="203829" fg:w="382"/><text x="57.2065%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (382 samples, 0.11%)</title><rect x="56.9565%" y="437" width="0.1067%" height="15" fill="rgb(214,148,10)" fg:x="203829" fg:w="382"/><text x="57.2065%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (381 samples, 0.11%)</title><rect x="56.9568%" y="421" width="0.1065%" height="15" fill="rgb(225,174,27)" fg:x="203830" fg:w="381"/><text x="57.2068%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (379 samples, 0.11%)</title><rect x="56.9573%" y="405" width="0.1059%" height="15" fill="rgb(230,96,26)" fg:x="203832" fg:w="379"/><text x="57.2073%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (379 samples, 0.11%)</title><rect x="56.9573%" y="389" width="0.1059%" height="15" fill="rgb(232,10,30)" fg:x="203832" fg:w="379"/><text x="57.2073%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (378 samples, 0.11%)</title><rect x="56.9576%" y="373" width="0.1056%" height="15" fill="rgb(222,8,50)" fg:x="203833" fg:w="378"/><text x="57.2076%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (219 samples, 0.06%)</title><rect x="57.0020%" y="357" width="0.0612%" height="15" fill="rgb(213,81,27)" fg:x="203992" fg:w="219"/><text x="57.2520%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (219 samples, 0.06%)</title><rect x="57.0020%" y="341" width="0.0612%" height="15" fill="rgb(245,50,10)" fg:x="203992" fg:w="219"/><text x="57.2520%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (219 samples, 0.06%)</title><rect x="57.0020%" y="325" width="0.0612%" height="15" fill="rgb(216,100,18)" fg:x="203992" fg:w="219"/><text x="57.2520%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (528 samples, 0.15%)</title><rect x="56.9201%" y="581" width="0.1475%" height="15" fill="rgb(236,147,54)" fg:x="203699" fg:w="528"/><text x="57.1701%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (526 samples, 0.15%)</title><rect x="56.9207%" y="565" width="0.1470%" height="15" fill="rgb(205,143,26)" fg:x="203701" fg:w="526"/><text x="57.1707%" y="575.50"></text></g><g><title>sk-gen`jaq_core::path::update (526 samples, 0.15%)</title><rect x="56.9207%" y="549" width="0.1470%" height="15" fill="rgb(236,26,9)" fg:x="203701" fg:w="526"/><text x="57.1707%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (525 samples, 0.15%)</title><rect x="56.9210%" y="533" width="0.1467%" height="15" fill="rgb(221,165,53)" fg:x="203702" fg:w="525"/><text x="57.1710%" y="543.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (521 samples, 0.15%)</title><rect x="56.9221%" y="517" width="0.1456%" height="15" fill="rgb(214,110,17)" fg:x="203706" fg:w="521"/><text x="57.1721%" y="527.50"></text></g><g><title>sk-gen`jaq_core::path::update (520 samples, 0.15%)</title><rect x="56.9224%" y="501" width="0.1453%" height="15" fill="rgb(237,197,12)" fg:x="203707" fg:w="520"/><text x="57.1724%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (520 samples, 0.15%)</title><rect x="56.9224%" y="485" width="0.1453%" height="15" fill="rgb(205,84,17)" fg:x="203707" fg:w="520"/><text x="57.1724%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (532 samples, 0.15%)</title><rect x="56.9193%" y="629" width="0.1487%" height="15" fill="rgb(237,18,45)" fg:x="203696" fg:w="532"/><text x="57.1693%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (530 samples, 0.15%)</title><rect x="56.9199%" y="613" width="0.1481%" height="15" fill="rgb(221,87,14)" fg:x="203698" fg:w="530"/><text x="57.1699%" y="623.50"></text></g><g><title>sk-gen`jaq_core::path::update (529 samples, 0.15%)</title><rect x="56.9201%" y="597" width="0.1478%" height="15" fill="rgb(238,186,15)" fg:x="203699" fg:w="529"/><text x="57.1701%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (559 samples, 0.16%)</title><rect x="56.9123%" y="821" width="0.1562%" height="15" fill="rgb(208,115,11)" fg:x="203671" fg:w="559"/><text x="57.1623%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (557 samples, 0.16%)</title><rect x="56.9129%" y="805" width="0.1556%" height="15" fill="rgb(254,175,0)" fg:x="203673" fg:w="557"/><text x="57.1629%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::update (556 samples, 0.16%)</title><rect x="56.9132%" y="789" width="0.1554%" height="15" fill="rgb(227,24,42)" fg:x="203674" fg:w="556"/><text x="57.1632%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (556 samples, 0.16%)</title><rect x="56.9132%" y="773" width="0.1554%" height="15" fill="rgb(223,211,37)" fg:x="203674" fg:w="556"/><text x="57.1632%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (548 samples, 0.15%)</title><rect x="56.9154%" y="757" width="0.1531%" height="15" fill="rgb(235,49,27)" fg:x="203682" fg:w="548"/><text x="57.1654%" y="767.50"></text></g><g><title>sk-gen`jaq_core::path::update (548 samples, 0.15%)</title><rect x="56.9154%" y="741" width="0.1531%" height="15" fill="rgb(254,97,51)" fg:x="203682" fg:w="548"/><text x="57.1654%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (547 samples, 0.15%)</title><rect x="56.9157%" y="725" width="0.1528%" height="15" fill="rgb(249,51,40)" fg:x="203683" fg:w="547"/><text x="57.1657%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (545 samples, 0.15%)</title><rect x="56.9162%" y="709" width="0.1523%" height="15" fill="rgb(210,128,45)" fg:x="203685" fg:w="545"/><text x="57.1662%" y="719.50"></text></g><g><title>sk-gen`jaq_core::path::update (545 samples, 0.15%)</title><rect x="56.9162%" y="693" width="0.1523%" height="15" fill="rgb(224,137,50)" fg:x="203685" fg:w="545"/><text x="57.1662%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (544 samples, 0.15%)</title><rect x="56.9165%" y="677" width="0.1520%" height="15" fill="rgb(242,15,9)" fg:x="203686" fg:w="544"/><text x="57.1665%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (534 samples, 0.15%)</title><rect x="56.9193%" y="661" width="0.1492%" height="15" fill="rgb(233,187,41)" fg:x="203696" fg:w="534"/><text x="57.1693%" y="671.50"></text></g><g><title>sk-gen`jaq_core::path::update (534 samples, 0.15%)</title><rect x="56.9193%" y="645" width="0.1492%" height="15" fill="rgb(227,2,29)" fg:x="203696" fg:w="534"/><text x="57.1693%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (586 samples, 0.16%)</title><rect x="56.9051%" y="917" width="0.1637%" height="15" fill="rgb(222,70,3)" fg:x="203645" fg:w="586"/><text x="57.1551%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (565 samples, 0.16%)</title><rect x="56.9109%" y="901" width="0.1579%" height="15" fill="rgb(213,11,42)" fg:x="203666" fg:w="565"/><text x="57.1609%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::update (564 samples, 0.16%)</title><rect x="56.9112%" y="885" width="0.1576%" height="15" fill="rgb(225,150,9)" fg:x="203667" fg:w="564"/><text x="57.1612%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (564 samples, 0.16%)</title><rect x="56.9112%" y="869" width="0.1576%" height="15" fill="rgb(230,162,45)" fg:x="203667" fg:w="564"/><text x="57.1612%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (562 samples, 0.16%)</title><rect x="56.9118%" y="853" width="0.1570%" height="15" fill="rgb(222,14,52)" fg:x="203669" fg:w="562"/><text x="57.1618%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::update (561 samples, 0.16%)</title><rect x="56.9120%" y="837" width="0.1568%" height="15" fill="rgb(254,198,14)" fg:x="203670" fg:w="561"/><text x="57.1620%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (608 samples, 0.17%)</title><rect x="56.9014%" y="949" width="0.1699%" height="15" fill="rgb(220,217,30)" fg:x="203632" fg:w="608"/><text x="57.1514%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (596 samples, 0.17%)</title><rect x="56.9048%" y="933" width="0.1665%" height="15" fill="rgb(215,146,41)" fg:x="203644" fg:w="596"/><text x="57.1548%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (885 samples, 0.25%)</title><rect x="56.8305%" y="1013" width="0.2473%" height="15" fill="rgb(217,27,36)" fg:x="203378" fg:w="885"/><text x="57.0805%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (664 samples, 0.19%)</title><rect x="56.8922%" y="997" width="0.1855%" height="15" fill="rgb(219,218,39)" fg:x="203599" fg:w="664"/><text x="57.1422%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (662 samples, 0.18%)</title><rect x="56.8928%" y="981" width="0.1850%" height="15" fill="rgb(219,4,42)" fg:x="203601" fg:w="662"/><text x="57.1428%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (662 samples, 0.18%)</title><rect x="56.8928%" y="965" width="0.1850%" height="15" fill="rgb(249,119,36)" fg:x="203601" fg:w="662"/><text x="57.1428%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.02%)</title><rect x="57.1007%" y="949" width="0.0179%" height="15" fill="rgb(209,23,33)" fg:x="204345" fg:w="64"/><text x="57.3507%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="57.0968%" y="965" width="0.0226%" height="15" fill="rgb(211,10,0)" fg:x="204331" fg:w="81"/><text x="57.3468%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.04%)</title><rect x="57.0906%" y="981" width="0.0380%" height="15" fill="rgb(208,99,37)" fg:x="204309" fg:w="136"/><text x="57.3406%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (205 samples, 0.06%)</title><rect x="57.0777%" y="997" width="0.0573%" height="15" fill="rgb(213,132,31)" fg:x="204263" fg:w="205"/><text x="57.3277%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (1,096 samples, 0.31%)</title><rect x="56.8293%" y="1029" width="0.3063%" height="15" fill="rgb(243,129,40)" fg:x="203374" fg:w="1096"/><text x="57.0793%" y="1039.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (207 samples, 0.06%)</title><rect x="57.0777%" y="1013" width="0.0578%" height="15" fill="rgb(210,66,33)" fg:x="204263" fg:w="207"/><text x="57.3277%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (54 samples, 0.02%)</title><rect x="57.1649%" y="405" width="0.0151%" height="15" fill="rgb(209,189,4)" fg:x="204575" fg:w="54"/><text x="57.4149%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (38 samples, 0.01%)</title><rect x="57.1694%" y="389" width="0.0106%" height="15" fill="rgb(214,107,37)" fg:x="204591" fg:w="38"/><text x="57.4194%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (36 samples, 0.01%)</title><rect x="57.1700%" y="373" width="0.0101%" height="15" fill="rgb(245,88,54)" fg:x="204593" fg:w="36"/><text x="57.4200%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.01%)</title><rect x="57.1700%" y="357" width="0.0101%" height="15" fill="rgb(205,146,20)" fg:x="204593" fg:w="36"/><text x="57.4200%" y="367.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.04%)</title><rect x="57.1596%" y="469" width="0.0363%" height="15" fill="rgb(220,161,25)" fg:x="204556" fg:w="130"/><text x="57.4096%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (111 samples, 0.03%)</title><rect x="57.1649%" y="453" width="0.0310%" height="15" fill="rgb(215,152,15)" fg:x="204575" fg:w="111"/><text x="57.4149%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (111 samples, 0.03%)</title><rect x="57.1649%" y="437" width="0.0310%" height="15" fill="rgb(233,192,44)" fg:x="204575" fg:w="111"/><text x="57.4149%" y="447.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (111 samples, 0.03%)</title><rect x="57.1649%" y="421" width="0.0310%" height="15" fill="rgb(240,170,46)" fg:x="204575" fg:w="111"/><text x="57.4149%" y="431.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (57 samples, 0.02%)</title><rect x="57.1800%" y="405" width="0.0159%" height="15" fill="rgb(207,104,33)" fg:x="204629" fg:w="57"/><text x="57.4300%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (54 samples, 0.02%)</title><rect x="57.1809%" y="389" width="0.0151%" height="15" fill="rgb(219,21,39)" fg:x="204632" fg:w="54"/><text x="57.4309%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (52 samples, 0.01%)</title><rect x="57.1814%" y="373" width="0.0145%" height="15" fill="rgb(214,133,29)" fg:x="204634" fg:w="52"/><text x="57.4314%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (41 samples, 0.01%)</title><rect x="57.1845%" y="357" width="0.0115%" height="15" fill="rgb(226,93,6)" fg:x="204645" fg:w="41"/><text x="57.4345%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (40 samples, 0.01%)</title><rect x="57.1848%" y="341" width="0.0112%" height="15" fill="rgb(252,222,34)" fg:x="204646" fg:w="40"/><text x="57.4348%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (40 samples, 0.01%)</title><rect x="57.1848%" y="325" width="0.0112%" height="15" fill="rgb(252,92,48)" fg:x="204646" fg:w="40"/><text x="57.4348%" y="335.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (40 samples, 0.01%)</title><rect x="57.1848%" y="309" width="0.0112%" height="15" fill="rgb(245,223,24)" fg:x="204646" fg:w="40"/><text x="57.4348%" y="319.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (59 samples, 0.02%)</title><rect x="57.2119%" y="277" width="0.0165%" height="15" fill="rgb(205,176,3)" fg:x="204743" fg:w="59"/><text x="57.4619%" y="287.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (58 samples, 0.02%)</title><rect x="57.2122%" y="261" width="0.0162%" height="15" fill="rgb(235,151,15)" fg:x="204744" fg:w="58"/><text x="57.4622%" y="271.50"></text></g><g><title>sk-gen`jaq_std::re (131 samples, 0.04%)</title><rect x="57.1976%" y="293" width="0.0366%" height="15" fill="rgb(237,209,11)" fg:x="204692" fg:w="131"/><text x="57.4476%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (134 samples, 0.04%)</title><rect x="57.1971%" y="325" width="0.0374%" height="15" fill="rgb(243,227,24)" fg:x="204690" fg:w="134"/><text x="57.4471%" y="335.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (133 samples, 0.04%)</title><rect x="57.1973%" y="309" width="0.0372%" height="15" fill="rgb(239,193,16)" fg:x="204691" fg:w="133"/><text x="57.4473%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (149 samples, 0.04%)</title><rect x="57.1971%" y="341" width="0.0416%" height="15" fill="rgb(231,27,9)" fg:x="204690" fg:w="149"/><text x="57.4471%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (162 samples, 0.05%)</title><rect x="57.1968%" y="357" width="0.0453%" height="15" fill="rgb(219,169,10)" fg:x="204689" fg:w="162"/><text x="57.4468%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (36 samples, 0.01%)</title><rect x="57.2594%" y="37" width="0.0101%" height="15" fill="rgb(244,229,43)" fg:x="204913" fg:w="36"/><text x="57.5094%" y="47.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (51 samples, 0.01%)</title><rect x="57.2555%" y="85" width="0.0143%" height="15" fill="rgb(254,38,20)" fg:x="204899" fg:w="51"/><text x="57.5055%" y="95.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (51 samples, 0.01%)</title><rect x="57.2555%" y="69" width="0.0143%" height="15" fill="rgb(250,47,30)" fg:x="204899" fg:w="51"/><text x="57.5055%" y="79.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (38 samples, 0.01%)</title><rect x="57.2591%" y="53" width="0.0106%" height="15" fill="rgb(224,124,36)" fg:x="204912" fg:w="38"/><text x="57.5091%" y="63.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (82 samples, 0.02%)</title><rect x="57.2544%" y="133" width="0.0229%" height="15" fill="rgb(246,68,51)" fg:x="204895" fg:w="82"/><text x="57.5044%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (82 samples, 0.02%)</title><rect x="57.2544%" y="117" width="0.0229%" height="15" fill="rgb(253,43,49)" fg:x="204895" fg:w="82"/><text x="57.5044%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (80 samples, 0.02%)</title><rect x="57.2549%" y="101" width="0.0224%" height="15" fill="rgb(219,54,36)" fg:x="204897" fg:w="80"/><text x="57.5049%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (38 samples, 0.01%)</title><rect x="57.2876%" y="69" width="0.0106%" height="15" fill="rgb(227,133,34)" fg:x="205014" fg:w="38"/><text x="57.5376%" y="79.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (201 samples, 0.06%)</title><rect x="57.2432%" y="261" width="0.0562%" height="15" fill="rgb(247,227,15)" fg:x="204855" fg:w="201"/><text x="57.4932%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (201 samples, 0.06%)</title><rect x="57.2432%" y="245" width="0.0562%" height="15" fill="rgb(229,96,14)" fg:x="204855" fg:w="201"/><text x="57.4932%" y="255.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (193 samples, 0.05%)</title><rect x="57.2454%" y="229" width="0.0539%" height="15" fill="rgb(220,79,17)" fg:x="204863" fg:w="193"/><text x="57.4954%" y="239.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (193 samples, 0.05%)</title><rect x="57.2454%" y="213" width="0.0539%" height="15" fill="rgb(205,131,53)" fg:x="204863" fg:w="193"/><text x="57.4954%" y="223.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (189 samples, 0.05%)</title><rect x="57.2465%" y="197" width="0.0528%" height="15" fill="rgb(209,50,29)" fg:x="204867" fg:w="189"/><text x="57.4965%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (166 samples, 0.05%)</title><rect x="57.2530%" y="181" width="0.0464%" height="15" fill="rgb(245,86,46)" fg:x="204890" fg:w="166"/><text x="57.5030%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (166 samples, 0.05%)</title><rect x="57.2530%" y="165" width="0.0464%" height="15" fill="rgb(235,66,46)" fg:x="204890" fg:w="166"/><text x="57.5030%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (165 samples, 0.05%)</title><rect x="57.2532%" y="149" width="0.0461%" height="15" fill="rgb(232,148,31)" fg:x="204891" fg:w="165"/><text x="57.5032%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (79 samples, 0.02%)</title><rect x="57.2773%" y="133" width="0.0221%" height="15" fill="rgb(217,149,8)" fg:x="204977" fg:w="79"/><text x="57.5273%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (76 samples, 0.02%)</title><rect x="57.2781%" y="117" width="0.0212%" height="15" fill="rgb(209,183,11)" fg:x="204980" fg:w="76"/><text x="57.5281%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (76 samples, 0.02%)</title><rect x="57.2781%" y="101" width="0.0212%" height="15" fill="rgb(208,55,20)" fg:x="204980" fg:w="76"/><text x="57.5281%" y="111.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (46 samples, 0.01%)</title><rect x="57.2865%" y="85" width="0.0129%" height="15" fill="rgb(218,39,14)" fg:x="205010" fg:w="46"/><text x="57.5365%" y="95.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (203 samples, 0.06%)</title><rect x="57.2429%" y="277" width="0.0567%" height="15" fill="rgb(216,169,33)" fg:x="204854" fg:w="203"/><text x="57.4929%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.01%)</title><rect x="57.2999%" y="165" width="0.0101%" height="15" fill="rgb(233,80,24)" fg:x="205058" fg:w="36"/><text x="57.5499%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.2999%" y="229" width="0.0103%" height="15" fill="rgb(213,179,31)" fg:x="205058" fg:w="37"/><text x="57.5499%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (37 samples, 0.01%)</title><rect x="57.2999%" y="213" width="0.0103%" height="15" fill="rgb(209,19,5)" fg:x="205058" fg:w="37"/><text x="57.5499%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.2999%" y="197" width="0.0103%" height="15" fill="rgb(219,18,35)" fg:x="205058" fg:w="37"/><text x="57.5499%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (37 samples, 0.01%)</title><rect x="57.2999%" y="181" width="0.0103%" height="15" fill="rgb(209,169,16)" fg:x="205058" fg:w="37"/><text x="57.5499%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (244 samples, 0.07%)</title><rect x="57.2426%" y="309" width="0.0682%" height="15" fill="rgb(245,90,51)" fg:x="204853" fg:w="244"/><text x="57.4926%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (244 samples, 0.07%)</title><rect x="57.2426%" y="293" width="0.0682%" height="15" fill="rgb(220,99,45)" fg:x="204853" fg:w="244"/><text x="57.4926%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (40 samples, 0.01%)</title><rect x="57.2996%" y="277" width="0.0112%" height="15" fill="rgb(249,89,25)" fg:x="205057" fg:w="40"/><text x="57.5496%" y="287.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (39 samples, 0.01%)</title><rect x="57.2999%" y="261" width="0.0109%" height="15" fill="rgb(239,193,0)" fg:x="205058" fg:w="39"/><text x="57.5499%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (39 samples, 0.01%)</title><rect x="57.2999%" y="245" width="0.0109%" height="15" fill="rgb(231,126,1)" fg:x="205058" fg:w="39"/><text x="57.5499%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (412 samples, 0.12%)</title><rect x="57.1959%" y="469" width="0.1151%" height="15" fill="rgb(243,166,3)" fg:x="204686" fg:w="412"/><text x="57.4459%" y="479.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (412 samples, 0.12%)</title><rect x="57.1959%" y="453" width="0.1151%" height="15" fill="rgb(223,22,34)" fg:x="204686" fg:w="412"/><text x="57.4459%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (412 samples, 0.12%)</title><rect x="57.1959%" y="437" width="0.1151%" height="15" fill="rgb(251,52,51)" fg:x="204686" fg:w="412"/><text x="57.4459%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (412 samples, 0.12%)</title><rect x="57.1959%" y="421" width="0.1151%" height="15" fill="rgb(221,165,28)" fg:x="204686" fg:w="412"/><text x="57.4459%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (412 samples, 0.12%)</title><rect x="57.1959%" y="405" width="0.1151%" height="15" fill="rgb(218,121,47)" fg:x="204686" fg:w="412"/><text x="57.4459%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (410 samples, 0.11%)</title><rect x="57.1965%" y="389" width="0.1146%" height="15" fill="rgb(209,120,9)" fg:x="204688" fg:w="410"/><text x="57.4465%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (409 samples, 0.11%)</title><rect x="57.1968%" y="373" width="0.1143%" height="15" fill="rgb(236,68,12)" fg:x="204689" fg:w="409"/><text x="57.4468%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (247 samples, 0.07%)</title><rect x="57.2421%" y="357" width="0.0690%" height="15" fill="rgb(225,194,26)" fg:x="204851" fg:w="247"/><text x="57.4921%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (246 samples, 0.07%)</title><rect x="57.2423%" y="341" width="0.0687%" height="15" fill="rgb(231,84,39)" fg:x="204852" fg:w="246"/><text x="57.4923%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (246 samples, 0.07%)</title><rect x="57.2423%" y="325" width="0.0687%" height="15" fill="rgb(210,11,45)" fg:x="204852" fg:w="246"/><text x="57.4923%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (565 samples, 0.16%)</title><rect x="57.1565%" y="581" width="0.1579%" height="15" fill="rgb(224,54,52)" fg:x="204545" fg:w="565"/><text x="57.4065%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (561 samples, 0.16%)</title><rect x="57.1577%" y="565" width="0.1568%" height="15" fill="rgb(238,102,14)" fg:x="204549" fg:w="561"/><text x="57.4077%" y="575.50"></text></g><g><title>sk-gen`jaq_core::path::update (561 samples, 0.16%)</title><rect x="57.1577%" y="549" width="0.1568%" height="15" fill="rgb(243,160,52)" fg:x="204549" fg:w="561"/><text x="57.4077%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (561 samples, 0.16%)</title><rect x="57.1577%" y="533" width="0.1568%" height="15" fill="rgb(216,114,19)" fg:x="204549" fg:w="561"/><text x="57.4077%" y="543.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (557 samples, 0.16%)</title><rect x="57.1588%" y="517" width="0.1556%" height="15" fill="rgb(244,166,37)" fg:x="204553" fg:w="557"/><text x="57.4088%" y="527.50"></text></g><g><title>sk-gen`jaq_core::path::update (557 samples, 0.16%)</title><rect x="57.1588%" y="501" width="0.1556%" height="15" fill="rgb(246,29,44)" fg:x="204553" fg:w="557"/><text x="57.4088%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (556 samples, 0.16%)</title><rect x="57.1591%" y="485" width="0.1554%" height="15" fill="rgb(215,56,53)" fg:x="204554" fg:w="556"/><text x="57.4091%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (581 samples, 0.16%)</title><rect x="57.1524%" y="773" width="0.1624%" height="15" fill="rgb(217,60,2)" fg:x="204530" fg:w="581"/><text x="57.4024%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (580 samples, 0.16%)</title><rect x="57.1526%" y="757" width="0.1621%" height="15" fill="rgb(207,26,24)" fg:x="204531" fg:w="580"/><text x="57.4026%" y="767.50"></text></g><g><title>sk-gen`jaq_core::path::update (580 samples, 0.16%)</title><rect x="57.1526%" y="741" width="0.1621%" height="15" fill="rgb(252,210,15)" fg:x="204531" fg:w="580"/><text x="57.4026%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (580 samples, 0.16%)</title><rect x="57.1526%" y="725" width="0.1621%" height="15" fill="rgb(253,209,26)" fg:x="204531" fg:w="580"/><text x="57.4026%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (575 samples, 0.16%)</title><rect x="57.1540%" y="709" width="0.1607%" height="15" fill="rgb(238,170,14)" fg:x="204536" fg:w="575"/><text x="57.4040%" y="719.50"></text></g><g><title>sk-gen`jaq_core::path::update (575 samples, 0.16%)</title><rect x="57.1540%" y="693" width="0.1607%" height="15" fill="rgb(216,178,15)" fg:x="204536" fg:w="575"/><text x="57.4040%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (574 samples, 0.16%)</title><rect x="57.1543%" y="677" width="0.1604%" height="15" fill="rgb(250,197,2)" fg:x="204537" fg:w="574"/><text x="57.4043%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (573 samples, 0.16%)</title><rect x="57.1546%" y="661" width="0.1601%" height="15" fill="rgb(212,70,42)" fg:x="204538" fg:w="573"/><text x="57.4046%" y="671.50"></text></g><g><title>sk-gen`jaq_core::path::update (572 samples, 0.16%)</title><rect x="57.1549%" y="645" width="0.1598%" height="15" fill="rgb(227,213,9)" fg:x="204539" fg:w="572"/><text x="57.4049%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (571 samples, 0.16%)</title><rect x="57.1552%" y="629" width="0.1596%" height="15" fill="rgb(245,99,25)" fg:x="204540" fg:w="571"/><text x="57.4052%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (568 samples, 0.16%)</title><rect x="57.1560%" y="613" width="0.1587%" height="15" fill="rgb(250,82,29)" fg:x="204543" fg:w="568"/><text x="57.4060%" y="623.50"></text></g><g><title>sk-gen`jaq_core::path::update (567 samples, 0.16%)</title><rect x="57.1563%" y="597" width="0.1584%" height="15" fill="rgb(241,226,54)" fg:x="204544" fg:w="567"/><text x="57.4063%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (588 samples, 0.16%)</title><rect x="57.1507%" y="821" width="0.1643%" height="15" fill="rgb(221,99,41)" fg:x="204524" fg:w="588"/><text x="57.4007%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (585 samples, 0.16%)</title><rect x="57.1515%" y="805" width="0.1635%" height="15" fill="rgb(213,90,21)" fg:x="204527" fg:w="585"/><text x="57.4015%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::update (583 samples, 0.16%)</title><rect x="57.1521%" y="789" width="0.1629%" height="15" fill="rgb(205,208,24)" fg:x="204529" fg:w="583"/><text x="57.4021%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (596 samples, 0.17%)</title><rect x="57.1487%" y="869" width="0.1665%" height="15" fill="rgb(246,31,12)" fg:x="204517" fg:w="596"/><text x="57.3987%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (593 samples, 0.17%)</title><rect x="57.1496%" y="853" width="0.1657%" height="15" fill="rgb(213,154,6)" fg:x="204520" fg:w="593"/><text x="57.3996%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::update (591 samples, 0.17%)</title><rect x="57.1501%" y="837" width="0.1651%" height="15" fill="rgb(222,163,29)" fg:x="204522" fg:w="591"/><text x="57.4001%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (619 samples, 0.17%)</title><rect x="57.1426%" y="917" width="0.1730%" height="15" fill="rgb(227,201,8)" fg:x="204495" fg:w="619"/><text x="57.3926%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (597 samples, 0.17%)</title><rect x="57.1487%" y="901" width="0.1668%" height="15" fill="rgb(233,9,32)" fg:x="204517" fg:w="597"/><text x="57.3987%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::update (597 samples, 0.17%)</title><rect x="57.1487%" y="885" width="0.1668%" height="15" fill="rgb(217,54,24)" fg:x="204517" fg:w="597"/><text x="57.3987%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (628 samples, 0.18%)</title><rect x="57.1423%" y="933" width="0.1755%" height="15" fill="rgb(235,192,0)" fg:x="204494" fg:w="628"/><text x="57.3923%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (647 samples, 0.18%)</title><rect x="57.1373%" y="981" width="0.1808%" height="15" fill="rgb(235,45,9)" fg:x="204476" fg:w="647"/><text x="57.3873%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (646 samples, 0.18%)</title><rect x="57.1375%" y="965" width="0.1805%" height="15" fill="rgb(246,42,40)" fg:x="204477" fg:w="646"/><text x="57.3875%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (646 samples, 0.18%)</title><rect x="57.1375%" y="949" width="0.1805%" height="15" fill="rgb(248,111,24)" fg:x="204477" fg:w="646"/><text x="57.3875%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (36 samples, 0.01%)</title><rect x="57.3684%" y="453" width="0.0101%" height="15" fill="rgb(249,65,22)" fg:x="205303" fg:w="36"/><text x="57.6184%" y="463.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.02%)</title><rect x="57.3605%" y="501" width="0.0249%" height="15" fill="rgb(238,111,51)" fg:x="205275" fg:w="89"/><text x="57.6105%" y="511.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (62 samples, 0.02%)</title><rect x="57.3681%" y="485" width="0.0173%" height="15" fill="rgb(250,118,22)" fg:x="205302" fg:w="62"/><text x="57.6181%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (62 samples, 0.02%)</title><rect x="57.3681%" y="469" width="0.0173%" height="15" fill="rgb(234,84,26)" fg:x="205302" fg:w="62"/><text x="57.6181%" y="479.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (38 samples, 0.01%)</title><rect x="57.3896%" y="309" width="0.0106%" height="15" fill="rgb(243,172,12)" fg:x="205379" fg:w="38"/><text x="57.6396%" y="319.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (38 samples, 0.01%)</title><rect x="57.3896%" y="293" width="0.0106%" height="15" fill="rgb(236,150,49)" fg:x="205379" fg:w="38"/><text x="57.6396%" y="303.50"></text></g><g><title>sk-gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.01%)</title><rect x="57.3899%" y="277" width="0.0103%" height="15" fill="rgb(225,197,26)" fg:x="205380" fg:w="37"/><text x="57.6399%" y="287.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (36 samples, 0.01%)</title><rect x="57.3902%" y="261" width="0.0101%" height="15" fill="rgb(214,17,42)" fg:x="205381" fg:w="36"/><text x="57.6402%" y="271.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (47 samples, 0.01%)</title><rect x="57.4016%" y="309" width="0.0131%" height="15" fill="rgb(224,165,40)" fg:x="205422" fg:w="47"/><text x="57.6516%" y="319.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (47 samples, 0.01%)</title><rect x="57.4016%" y="293" width="0.0131%" height="15" fill="rgb(246,100,4)" fg:x="205422" fg:w="47"/><text x="57.6516%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (123 samples, 0.03%)</title><rect x="57.3874%" y="357" width="0.0344%" height="15" fill="rgb(222,103,0)" fg:x="205371" fg:w="123"/><text x="57.6374%" y="367.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (121 samples, 0.03%)</title><rect x="57.3879%" y="341" width="0.0338%" height="15" fill="rgb(227,189,26)" fg:x="205373" fg:w="121"/><text x="57.6379%" y="351.50"></text></g><g><title>sk-gen`jaq_std::re (120 samples, 0.03%)</title><rect x="57.3882%" y="325" width="0.0335%" height="15" fill="rgb(214,202,17)" fg:x="205374" fg:w="120"/><text x="57.6382%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (131 samples, 0.04%)</title><rect x="57.3868%" y="373" width="0.0366%" height="15" fill="rgb(229,111,3)" fg:x="205369" fg:w="131"/><text x="57.6368%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (141 samples, 0.04%)</title><rect x="57.3865%" y="389" width="0.0394%" height="15" fill="rgb(229,172,15)" fg:x="205368" fg:w="141"/><text x="57.6365%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (41 samples, 0.01%)</title><rect x="57.4410%" y="117" width="0.0115%" height="15" fill="rgb(230,224,35)" fg:x="205563" fg:w="41"/><text x="57.6910%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (41 samples, 0.01%)</title><rect x="57.4410%" y="101" width="0.0115%" height="15" fill="rgb(251,141,6)" fg:x="205563" fg:w="41"/><text x="57.6910%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (71 samples, 0.02%)</title><rect x="57.4399%" y="133" width="0.0198%" height="15" fill="rgb(225,208,6)" fg:x="205559" fg:w="71"/><text x="57.6899%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (73 samples, 0.02%)</title><rect x="57.4396%" y="149" width="0.0204%" height="15" fill="rgb(246,181,16)" fg:x="205558" fg:w="73"/><text x="57.6896%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (75 samples, 0.02%)</title><rect x="57.4393%" y="165" width="0.0210%" height="15" fill="rgb(227,129,36)" fg:x="205557" fg:w="75"/><text x="57.6893%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.4664%" y="101" width="0.0103%" height="15" fill="rgb(248,117,24)" fg:x="205654" fg:w="37"/><text x="57.7164%" y="111.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.05%)</title><rect x="57.4315%" y="229" width="0.0464%" height="15" fill="rgb(214,185,35)" fg:x="205529" fg:w="166"/><text x="57.6815%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (145 samples, 0.04%)</title><rect x="57.4374%" y="213" width="0.0405%" height="15" fill="rgb(236,150,34)" fg:x="205550" fg:w="145"/><text x="57.6874%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (143 samples, 0.04%)</title><rect x="57.4379%" y="197" width="0.0400%" height="15" fill="rgb(243,228,27)" fg:x="205552" fg:w="143"/><text x="57.6879%" y="207.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (139 samples, 0.04%)</title><rect x="57.4391%" y="181" width="0.0388%" height="15" fill="rgb(245,77,44)" fg:x="205556" fg:w="139"/><text x="57.6891%" y="191.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (63 samples, 0.02%)</title><rect x="57.4603%" y="165" width="0.0176%" height="15" fill="rgb(235,214,42)" fg:x="205632" fg:w="63"/><text x="57.7103%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (63 samples, 0.02%)</title><rect x="57.4603%" y="149" width="0.0176%" height="15" fill="rgb(221,74,3)" fg:x="205632" fg:w="63"/><text x="57.7103%" y="159.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (62 samples, 0.02%)</title><rect x="57.4606%" y="133" width="0.0173%" height="15" fill="rgb(206,121,29)" fg:x="205633" fg:w="62"/><text x="57.7106%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (41 samples, 0.01%)</title><rect x="57.4664%" y="117" width="0.0115%" height="15" fill="rgb(249,131,53)" fg:x="205654" fg:w="41"/><text x="57.7164%" y="127.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (184 samples, 0.05%)</title><rect x="57.4270%" y="293" width="0.0514%" height="15" fill="rgb(236,170,29)" fg:x="205513" fg:w="184"/><text x="57.6770%" y="303.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (183 samples, 0.05%)</title><rect x="57.4273%" y="277" width="0.0511%" height="15" fill="rgb(247,96,15)" fg:x="205514" fg:w="183"/><text x="57.6773%" y="287.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (170 samples, 0.05%)</title><rect x="57.4310%" y="261" width="0.0475%" height="15" fill="rgb(211,210,7)" fg:x="205527" fg:w="170"/><text x="57.6810%" y="271.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (170 samples, 0.05%)</title><rect x="57.4310%" y="245" width="0.0475%" height="15" fill="rgb(240,88,50)" fg:x="205527" fg:w="170"/><text x="57.6810%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (186 samples, 0.05%)</title><rect x="57.4268%" y="309" width="0.0520%" height="15" fill="rgb(209,229,26)" fg:x="205512" fg:w="186"/><text x="57.6768%" y="319.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (47 samples, 0.01%)</title><rect x="57.4799%" y="213" width="0.0131%" height="15" fill="rgb(210,68,23)" fg:x="205702" fg:w="47"/><text x="57.7299%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (46 samples, 0.01%)</title><rect x="57.4801%" y="197" width="0.0129%" height="15" fill="rgb(229,180,13)" fg:x="205703" fg:w="46"/><text x="57.7301%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (239 samples, 0.07%)</title><rect x="57.4265%" y="341" width="0.0668%" height="15" fill="rgb(236,53,44)" fg:x="205511" fg:w="239"/><text x="57.6765%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (238 samples, 0.07%)</title><rect x="57.4268%" y="325" width="0.0665%" height="15" fill="rgb(244,214,29)" fg:x="205512" fg:w="238"/><text x="57.6768%" y="335.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (52 samples, 0.01%)</title><rect x="57.4787%" y="309" width="0.0145%" height="15" fill="rgb(220,75,29)" fg:x="205698" fg:w="52"/><text x="57.7287%" y="319.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (50 samples, 0.01%)</title><rect x="57.4793%" y="293" width="0.0140%" height="15" fill="rgb(214,183,37)" fg:x="205700" fg:w="50"/><text x="57.7293%" y="303.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (50 samples, 0.01%)</title><rect x="57.4793%" y="277" width="0.0140%" height="15" fill="rgb(239,117,29)" fg:x="205700" fg:w="50"/><text x="57.7293%" y="287.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (49 samples, 0.01%)</title><rect x="57.4796%" y="261" width="0.0137%" height="15" fill="rgb(237,171,35)" fg:x="205701" fg:w="49"/><text x="57.7296%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (49 samples, 0.01%)</title><rect x="57.4796%" y="245" width="0.0137%" height="15" fill="rgb(229,178,53)" fg:x="205701" fg:w="49"/><text x="57.7296%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (48 samples, 0.01%)</title><rect x="57.4799%" y="229" width="0.0134%" height="15" fill="rgb(210,102,19)" fg:x="205702" fg:w="48"/><text x="57.7299%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (384 samples, 0.11%)</title><rect x="57.3862%" y="421" width="0.1073%" height="15" fill="rgb(235,127,22)" fg:x="205367" fg:w="384"/><text x="57.6362%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (384 samples, 0.11%)</title><rect x="57.3862%" y="405" width="0.1073%" height="15" fill="rgb(244,31,31)" fg:x="205367" fg:w="384"/><text x="57.6362%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (242 samples, 0.07%)</title><rect x="57.4259%" y="389" width="0.0676%" height="15" fill="rgb(231,43,21)" fg:x="205509" fg:w="242"/><text x="57.6759%" y="399.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (241 samples, 0.07%)</title><rect x="57.4262%" y="373" width="0.0673%" height="15" fill="rgb(217,131,35)" fg:x="205510" fg:w="241"/><text x="57.6762%" y="383.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (241 samples, 0.07%)</title><rect x="57.4262%" y="357" width="0.0673%" height="15" fill="rgb(221,149,4)" fg:x="205510" fg:w="241"/><text x="57.6762%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (389 samples, 0.11%)</title><rect x="57.3854%" y="501" width="0.1087%" height="15" fill="rgb(232,170,28)" fg:x="205364" fg:w="389"/><text x="57.6354%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (389 samples, 0.11%)</title><rect x="57.3854%" y="485" width="0.1087%" height="15" fill="rgb(238,56,10)" fg:x="205364" fg:w="389"/><text x="57.6354%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (389 samples, 0.11%)</title><rect x="57.3854%" y="469" width="0.1087%" height="15" fill="rgb(235,196,14)" fg:x="205364" fg:w="389"/><text x="57.6354%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (389 samples, 0.11%)</title><rect x="57.3854%" y="453" width="0.1087%" height="15" fill="rgb(216,45,48)" fg:x="205364" fg:w="389"/><text x="57.6354%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (386 samples, 0.11%)</title><rect x="57.3862%" y="437" width="0.1079%" height="15" fill="rgb(238,213,17)" fg:x="205367" fg:w="386"/><text x="57.6362%" y="447.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (493 samples, 0.14%)</title><rect x="57.3600%" y="517" width="0.1378%" height="15" fill="rgb(212,13,2)" fg:x="205273" fg:w="493"/><text x="57.6100%" y="527.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (558 samples, 0.16%)</title><rect x="57.3421%" y="853" width="0.1559%" height="15" fill="rgb(240,114,20)" fg:x="205209" fg:w="558"/><text x="57.5921%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (547 samples, 0.15%)</title><rect x="57.3452%" y="837" width="0.1528%" height="15" fill="rgb(228,41,40)" fg:x="205220" fg:w="547"/><text x="57.5952%" y="847.50"></text></g><g><title>sk-gen`jaq_core::path::update (547 samples, 0.15%)</title><rect x="57.3452%" y="821" width="0.1528%" height="15" fill="rgb(244,132,35)" fg:x="205220" fg:w="547"/><text x="57.5952%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (545 samples, 0.15%)</title><rect x="57.3457%" y="805" width="0.1523%" height="15" fill="rgb(253,189,4)" fg:x="205222" fg:w="545"/><text x="57.5957%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (526 samples, 0.15%)</title><rect x="57.3510%" y="789" width="0.1470%" height="15" fill="rgb(224,37,19)" fg:x="205241" fg:w="526"/><text x="57.6010%" y="799.50"></text></g><g><title>sk-gen`jaq_core::path::update (526 samples, 0.15%)</title><rect x="57.3510%" y="773" width="0.1470%" height="15" fill="rgb(235,223,18)" fg:x="205241" fg:w="526"/><text x="57.6010%" y="783.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (524 samples, 0.15%)</title><rect x="57.3516%" y="757" width="0.1464%" height="15" fill="rgb(235,163,25)" fg:x="205243" fg:w="524"/><text x="57.6016%" y="767.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (523 samples, 0.15%)</title><rect x="57.3519%" y="741" width="0.1461%" height="15" fill="rgb(217,145,28)" fg:x="205244" fg:w="523"/><text x="57.6019%" y="751.50"></text></g><g><title>sk-gen`jaq_core::path::update (522 samples, 0.15%)</title><rect x="57.3522%" y="725" width="0.1459%" height="15" fill="rgb(223,223,32)" fg:x="205245" fg:w="522"/><text x="57.6022%" y="735.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (521 samples, 0.15%)</title><rect x="57.3524%" y="709" width="0.1456%" height="15" fill="rgb(227,189,39)" fg:x="205246" fg:w="521"/><text x="57.6024%" y="719.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (511 samples, 0.14%)</title><rect x="57.3552%" y="693" width="0.1428%" height="15" fill="rgb(248,10,22)" fg:x="205256" fg:w="511"/><text x="57.6052%" y="703.50"></text></g><g><title>sk-gen`jaq_core::path::update (511 samples, 0.14%)</title><rect x="57.3552%" y="677" width="0.1428%" height="15" fill="rgb(248,46,39)" fg:x="205256" fg:w="511"/><text x="57.6052%" y="687.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (511 samples, 0.14%)</title><rect x="57.3552%" y="661" width="0.1428%" height="15" fill="rgb(248,113,48)" fg:x="205256" fg:w="511"/><text x="57.6052%" y="671.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (505 samples, 0.14%)</title><rect x="57.3569%" y="645" width="0.1411%" height="15" fill="rgb(245,16,25)" fg:x="205262" fg:w="505"/><text x="57.6069%" y="655.50"></text></g><g><title>sk-gen`jaq_core::path::update (505 samples, 0.14%)</title><rect x="57.3569%" y="629" width="0.1411%" height="15" fill="rgb(249,152,16)" fg:x="205262" fg:w="505"/><text x="57.6069%" y="639.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (505 samples, 0.14%)</title><rect x="57.3569%" y="613" width="0.1411%" height="15" fill="rgb(250,16,1)" fg:x="205262" fg:w="505"/><text x="57.6069%" y="623.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (497 samples, 0.14%)</title><rect x="57.3591%" y="597" width="0.1389%" height="15" fill="rgb(249,138,3)" fg:x="205270" fg:w="497"/><text x="57.6091%" y="607.50"></text></g><g><title>sk-gen`jaq_core::path::update (497 samples, 0.14%)</title><rect x="57.3591%" y="581" width="0.1389%" height="15" fill="rgb(227,71,41)" fg:x="205270" fg:w="497"/><text x="57.6091%" y="591.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (497 samples, 0.14%)</title><rect x="57.3591%" y="565" width="0.1389%" height="15" fill="rgb(209,184,23)" fg:x="205270" fg:w="497"/><text x="57.6091%" y="575.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (495 samples, 0.14%)</title><rect x="57.3597%" y="549" width="0.1383%" height="15" fill="rgb(223,215,31)" fg:x="205272" fg:w="495"/><text x="57.6097%" y="559.50"></text></g><g><title>sk-gen`jaq_core::path::update (495 samples, 0.14%)</title><rect x="57.3597%" y="533" width="0.1383%" height="15" fill="rgb(210,146,28)" fg:x="205272" fg:w="495"/><text x="57.6097%" y="543.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (567 samples, 0.16%)</title><rect x="57.3401%" y="901" width="0.1584%" height="15" fill="rgb(209,183,41)" fg:x="205202" fg:w="567"/><text x="57.5901%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (562 samples, 0.16%)</title><rect x="57.3415%" y="885" width="0.1570%" height="15" fill="rgb(209,224,45)" fg:x="205207" fg:w="562"/><text x="57.5915%" y="895.50"></text></g><g><title>sk-gen`jaq_core::path::update (560 samples, 0.16%)</title><rect x="57.3421%" y="869" width="0.1565%" height="15" fill="rgb(224,209,51)" fg:x="205209" fg:w="560"/><text x="57.5921%" y="879.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (609 samples, 0.17%)</title><rect x="57.3287%" y="949" width="0.1702%" height="15" fill="rgb(223,17,39)" fg:x="205161" fg:w="609"/><text x="57.5787%" y="959.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (570 samples, 0.16%)</title><rect x="57.3396%" y="933" width="0.1593%" height="15" fill="rgb(234,204,37)" fg:x="205200" fg:w="570"/><text x="57.5896%" y="943.50"></text></g><g><title>sk-gen`jaq_core::path::update (569 samples, 0.16%)</title><rect x="57.3399%" y="917" width="0.1590%" height="15" fill="rgb(236,120,5)" fg:x="205201" fg:w="569"/><text x="57.5899%" y="927.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (626 samples, 0.17%)</title><rect x="57.3276%" y="965" width="0.1749%" height="15" fill="rgb(248,97,27)" fg:x="205157" fg:w="626"/><text x="57.5776%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (661 samples, 0.18%)</title><rect x="57.3181%" y="981" width="0.1847%" height="15" fill="rgb(240,66,17)" fg:x="205123" fg:w="661"/><text x="57.5681%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (1,312 samples, 0.37%)</title><rect x="57.1364%" y="997" width="0.3666%" height="15" fill="rgb(210,79,3)" fg:x="204473" fg:w="1312"/><text x="57.3864%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (1,316 samples, 0.37%)</title><rect x="57.1356%" y="1029" width="0.3677%" height="15" fill="rgb(214,176,27)" fg:x="204470" fg:w="1316"/><text x="57.3856%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (1,313 samples, 0.37%)</title><rect x="57.1364%" y="1013" width="0.3669%" height="15" fill="rgb(235,185,3)" fg:x="204473" fg:w="1313"/><text x="57.3864%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="57.5123%" y="949" width="0.0154%" height="15" fill="rgb(227,24,12)" fg:x="205818" fg:w="55"/><text x="57.7623%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 0.02%)</title><rect x="57.5075%" y="965" width="0.0226%" height="15" fill="rgb(252,169,48)" fg:x="205801" fg:w="81"/><text x="57.7575%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (97 samples, 0.03%)</title><rect x="57.5036%" y="997" width="0.0271%" height="15" fill="rgb(212,65,1)" fg:x="205787" fg:w="97"/><text x="57.7536%" y="1007.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (83 samples, 0.02%)</title><rect x="57.5075%" y="981" width="0.0232%" height="15" fill="rgb(242,39,24)" fg:x="205801" fg:w="83"/><text x="57.7575%" y="991.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.02%)</title><rect x="57.5553%" y="469" width="0.0229%" height="15" fill="rgb(249,32,23)" fg:x="205972" fg:w="82"/><text x="57.8053%" y="479.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (52 samples, 0.01%)</title><rect x="57.5637%" y="453" width="0.0145%" height="15" fill="rgb(251,195,23)" fg:x="206002" fg:w="52"/><text x="57.8137%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (52 samples, 0.01%)</title><rect x="57.5637%" y="437" width="0.0145%" height="15" fill="rgb(236,174,8)" fg:x="206002" fg:w="52"/><text x="57.8137%" y="447.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (36 samples, 0.01%)</title><rect x="57.5827%" y="277" width="0.0101%" height="15" fill="rgb(220,197,8)" fg:x="206070" fg:w="36"/><text x="57.8327%" y="287.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (36 samples, 0.01%)</title><rect x="57.5827%" y="261" width="0.0101%" height="15" fill="rgb(240,108,37)" fg:x="206070" fg:w="36"/><text x="57.8327%" y="271.50"></text></g><g><title>sk-gen`jaq_std::regex::Flags::regex (42 samples, 0.01%)</title><rect x="57.5969%" y="277" width="0.0117%" height="15" fill="rgb(232,176,24)" fg:x="206121" fg:w="42"/><text x="57.8469%" y="287.50"></text></g><g><title>sk-gen`regex_lite::string::RegexBuilder::build (40 samples, 0.01%)</title><rect x="57.5975%" y="261" width="0.0112%" height="15" fill="rgb(243,35,29)" fg:x="206123" fg:w="40"/><text x="57.8475%" y="271.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (115 samples, 0.03%)</title><rect x="57.5804%" y="325" width="0.0321%" height="15" fill="rgb(210,37,18)" fg:x="206062" fg:w="115"/><text x="57.8304%" y="335.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (113 samples, 0.03%)</title><rect x="57.5810%" y="309" width="0.0316%" height="15" fill="rgb(224,184,40)" fg:x="206064" fg:w="113"/><text x="57.8310%" y="319.50"></text></g><g><title>sk-gen`jaq_std::re (110 samples, 0.03%)</title><rect x="57.5818%" y="293" width="0.0307%" height="15" fill="rgb(236,39,29)" fg:x="206067" fg:w="110"/><text x="57.8318%" y="303.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (118 samples, 0.03%)</title><rect x="57.5802%" y="341" width="0.0330%" height="15" fill="rgb(232,48,39)" fg:x="206061" fg:w="118"/><text x="57.8302%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (133 samples, 0.04%)</title><rect x="57.5793%" y="357" width="0.0372%" height="15" fill="rgb(236,34,42)" fg:x="206058" fg:w="133"/><text x="57.8293%" y="367.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (60 samples, 0.02%)</title><rect x="57.6266%" y="133" width="0.0168%" height="15" fill="rgb(243,106,37)" fg:x="206227" fg:w="60"/><text x="57.8766%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (60 samples, 0.02%)</title><rect x="57.6266%" y="117" width="0.0168%" height="15" fill="rgb(218,96,6)" fg:x="206227" fg:w="60"/><text x="57.8766%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (57 samples, 0.02%)</title><rect x="57.6274%" y="101" width="0.0159%" height="15" fill="rgb(235,130,12)" fg:x="206230" fg:w="57"/><text x="57.8774%" y="111.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.04%)</title><rect x="57.6218%" y="197" width="0.0366%" height="15" fill="rgb(231,95,0)" fg:x="206210" fg:w="131"/><text x="57.8718%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (114 samples, 0.03%)</title><rect x="57.6266%" y="181" width="0.0319%" height="15" fill="rgb(228,12,23)" fg:x="206227" fg:w="114"/><text x="57.8766%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (114 samples, 0.03%)</title><rect x="57.6266%" y="165" width="0.0319%" height="15" fill="rgb(216,12,1)" fg:x="206227" fg:w="114"/><text x="57.8766%" y="175.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (114 samples, 0.03%)</title><rect x="57.6266%" y="149" width="0.0319%" height="15" fill="rgb(219,59,3)" fg:x="206227" fg:w="114"/><text x="57.8766%" y="159.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (54 samples, 0.02%)</title><rect x="57.6433%" y="133" width="0.0151%" height="15" fill="rgb(215,208,46)" fg:x="206287" fg:w="54"/><text x="57.8933%" y="143.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (53 samples, 0.01%)</title><rect x="57.6436%" y="117" width="0.0148%" height="15" fill="rgb(254,224,29)" fg:x="206288" fg:w="53"/><text x="57.8936%" y="127.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (53 samples, 0.01%)</title><rect x="57.6436%" y="101" width="0.0148%" height="15" fill="rgb(232,14,29)" fg:x="206288" fg:w="53"/><text x="57.8936%" y="111.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (150 samples, 0.04%)</title><rect x="57.6171%" y="277" width="0.0419%" height="15" fill="rgb(208,45,52)" fg:x="206193" fg:w="150"/><text x="57.8671%" y="287.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (148 samples, 0.04%)</title><rect x="57.6176%" y="261" width="0.0414%" height="15" fill="rgb(234,191,28)" fg:x="206195" fg:w="148"/><text x="57.8676%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (147 samples, 0.04%)</title><rect x="57.6179%" y="245" width="0.0411%" height="15" fill="rgb(244,67,43)" fg:x="206196" fg:w="147"/><text x="57.8679%" y="255.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (134 samples, 0.04%)</title><rect x="57.6215%" y="229" width="0.0374%" height="15" fill="rgb(236,189,24)" fg:x="206209" fg:w="134"/><text x="57.8715%" y="239.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (134 samples, 0.04%)</title><rect x="57.6215%" y="213" width="0.0374%" height="15" fill="rgb(239,214,33)" fg:x="206209" fg:w="134"/><text x="57.8715%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.6604%" y="165" width="0.0103%" height="15" fill="rgb(226,176,41)" fg:x="206348" fg:w="37"/><text x="57.9104%" y="175.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (193 samples, 0.05%)</title><rect x="57.6171%" y="309" width="0.0539%" height="15" fill="rgb(248,47,8)" fg:x="206193" fg:w="193"/><text x="57.8671%" y="319.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (193 samples, 0.05%)</title><rect x="57.6171%" y="293" width="0.0539%" height="15" fill="rgb(218,81,44)" fg:x="206193" fg:w="193"/><text x="57.8671%" y="303.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (43 samples, 0.01%)</title><rect x="57.6590%" y="277" width="0.0120%" height="15" fill="rgb(213,98,6)" fg:x="206343" fg:w="43"/><text x="57.9090%" y="287.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (42 samples, 0.01%)</title><rect x="57.6592%" y="261" width="0.0117%" height="15" fill="rgb(222,85,22)" fg:x="206344" fg:w="42"/><text x="57.9092%" y="271.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (42 samples, 0.01%)</title><rect x="57.6592%" y="245" width="0.0117%" height="15" fill="rgb(239,46,39)" fg:x="206344" fg:w="42"/><text x="57.9092%" y="255.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (41 samples, 0.01%)</title><rect x="57.6595%" y="229" width="0.0115%" height="15" fill="rgb(237,12,29)" fg:x="206345" fg:w="41"/><text x="57.9095%" y="239.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (40 samples, 0.01%)</title><rect x="57.6598%" y="213" width="0.0112%" height="15" fill="rgb(214,77,8)" fg:x="206346" fg:w="40"/><text x="57.9098%" y="223.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (39 samples, 0.01%)</title><rect x="57.6601%" y="197" width="0.0109%" height="15" fill="rgb(217,168,37)" fg:x="206347" fg:w="39"/><text x="57.9101%" y="207.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (39 samples, 0.01%)</title><rect x="57.6601%" y="181" width="0.0109%" height="15" fill="rgb(221,217,23)" fg:x="206347" fg:w="39"/><text x="57.9101%" y="191.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run::_{{closure}} (333 samples, 0.09%)</title><rect x="57.5782%" y="469" width="0.0931%" height="15" fill="rgb(243,229,36)" fg:x="206054" fg:w="333"/><text x="57.8282%" y="479.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (333 samples, 0.09%)</title><rect x="57.5782%" y="453" width="0.0931%" height="15" fill="rgb(251,163,40)" fg:x="206054" fg:w="333"/><text x="57.8282%" y="463.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (333 samples, 0.09%)</title><rect x="57.5782%" y="437" width="0.0931%" height="15" fill="rgb(237,222,12)" fg:x="206054" fg:w="333"/><text x="57.8282%" y="447.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (332 samples, 0.09%)</title><rect x="57.5785%" y="421" width="0.0928%" height="15" fill="rgb(248,132,6)" fg:x="206055" fg:w="332"/><text x="57.8285%" y="431.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (332 samples, 0.09%)</title><rect x="57.5785%" y="405" width="0.0928%" height="15" fill="rgb(227,167,50)" fg:x="206055" fg:w="332"/><text x="57.8285%" y="415.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (331 samples, 0.09%)</title><rect x="57.5788%" y="389" width="0.0925%" height="15" fill="rgb(242,84,37)" fg:x="206056" fg:w="331"/><text x="57.8288%" y="399.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (330 samples, 0.09%)</title><rect x="57.5791%" y="373" width="0.0922%" height="15" fill="rgb(212,4,50)" fg:x="206057" fg:w="330"/><text x="57.8291%" y="383.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (195 samples, 0.05%)</title><rect x="57.6168%" y="357" width="0.0545%" height="15" fill="rgb(230,228,32)" fg:x="206192" fg:w="195"/><text x="57.8668%" y="367.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (195 samples, 0.05%)</title><rect x="57.6168%" y="341" width="0.0545%" height="15" fill="rgb(248,217,23)" fg:x="206192" fg:w="195"/><text x="57.8668%" y="351.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (195 samples, 0.05%)</title><rect x="57.6168%" y="325" width="0.0545%" height="15" fill="rgb(238,197,32)" fg:x="206192" fg:w="195"/><text x="57.8668%" y="335.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (469 samples, 0.13%)</title><rect x="57.5438%" y="821" width="0.1311%" height="15" fill="rgb(236,106,1)" fg:x="205931" fg:w="469"/><text x="57.7938%" y="831.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (467 samples, 0.13%)</title><rect x="57.5444%" y="805" width="0.1305%" height="15" fill="rgb(219,228,13)" fg:x="205933" fg:w="467"/><text x="57.7944%" y="815.50"></text></g><g><title>sk-gen`jaq_core::path::update (465 samples, 0.13%)</title><rect x="57.5450%" y="789" width="0.1299%" height="15" fill="rgb(238,30,35)" fg:x="205935" fg:w="465"/><text x="57.7950%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (465 samples, 0.13%)</title><rect x="57.5450%" y="773" width="0.1299%" height="15" fill="rgb(236,70,23)" fg:x="205935" fg:w="465"/><text x="57.7950%" y="783.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (462 samples, 0.13%)</title><rect x="57.5458%" y="757" width="0.1291%" height="15" fill="rgb(249,104,48)" fg:x="205938" fg:w="462"/><text x="57.7958%" y="767.50"></text></g><g><title>sk-gen`jaq_core::path::update (462 samples, 0.13%)</title><rect x="57.5458%" y="741" width="0.1291%" height="15" fill="rgb(254,117,50)" fg:x="205938" fg:w="462"/><text x="57.7958%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (460 samples, 0.13%)</title><rect x="57.5464%" y="725" width="0.1285%" height="15" fill="rgb(223,152,4)" fg:x="205940" fg:w="460"/><text x="57.7964%" y="735.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (459 samples, 0.13%)</title><rect x="57.5466%" y="709" width="0.1283%" height="15" fill="rgb(245,6,2)" fg:x="205941" fg:w="459"/><text x="57.7966%" y="719.50"></text></g><g><title>sk-gen`jaq_core::path::update (458 samples, 0.13%)</title><rect x="57.5469%" y="693" width="0.1280%" height="15" fill="rgb(249,150,24)" fg:x="205942" fg:w="458"/><text x="57.7969%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (458 samples, 0.13%)</title><rect x="57.5469%" y="677" width="0.1280%" height="15" fill="rgb(228,185,42)" fg:x="205942" fg:w="458"/><text x="57.7969%" y="687.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (454 samples, 0.13%)</title><rect x="57.5480%" y="661" width="0.1269%" height="15" fill="rgb(226,39,33)" fg:x="205946" fg:w="454"/><text x="57.7980%" y="671.50"></text></g><g><title>sk-gen`jaq_core::path::update (454 samples, 0.13%)</title><rect x="57.5480%" y="645" width="0.1269%" height="15" fill="rgb(221,166,19)" fg:x="205946" fg:w="454"/><text x="57.7980%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (453 samples, 0.13%)</title><rect x="57.5483%" y="629" width="0.1266%" height="15" fill="rgb(209,109,2)" fg:x="205947" fg:w="453"/><text x="57.7983%" y="639.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (446 samples, 0.12%)</title><rect x="57.5503%" y="613" width="0.1246%" height="15" fill="rgb(252,216,26)" fg:x="205954" fg:w="446"/><text x="57.8003%" y="623.50"></text></g><g><title>sk-gen`jaq_core::path::update (445 samples, 0.12%)</title><rect x="57.5505%" y="597" width="0.1243%" height="15" fill="rgb(227,173,36)" fg:x="205955" fg:w="445"/><text x="57.8005%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (445 samples, 0.12%)</title><rect x="57.5505%" y="581" width="0.1243%" height="15" fill="rgb(209,90,7)" fg:x="205955" fg:w="445"/><text x="57.8005%" y="591.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (438 samples, 0.12%)</title><rect x="57.5525%" y="565" width="0.1224%" height="15" fill="rgb(250,194,11)" fg:x="205962" fg:w="438"/><text x="57.8025%" y="575.50"></text></g><g><title>sk-gen`jaq_core::path::update (437 samples, 0.12%)</title><rect x="57.5528%" y="549" width="0.1221%" height="15" fill="rgb(220,72,50)" fg:x="205963" fg:w="437"/><text x="57.8028%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (437 samples, 0.12%)</title><rect x="57.5528%" y="533" width="0.1221%" height="15" fill="rgb(222,106,48)" fg:x="205963" fg:w="437"/><text x="57.8028%" y="543.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (435 samples, 0.12%)</title><rect x="57.5533%" y="517" width="0.1216%" height="15" fill="rgb(216,220,45)" fg:x="205965" fg:w="435"/><text x="57.8033%" y="527.50"></text></g><g><title>sk-gen`jaq_core::path::update (434 samples, 0.12%)</title><rect x="57.5536%" y="501" width="0.1213%" height="15" fill="rgb(234,112,18)" fg:x="205966" fg:w="434"/><text x="57.8036%" y="511.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (430 samples, 0.12%)</title><rect x="57.5547%" y="485" width="0.1202%" height="15" fill="rgb(206,179,9)" fg:x="205970" fg:w="430"/><text x="57.8047%" y="495.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as jaq_core::val::ValT&gt;::map_index (476 samples, 0.13%)</title><rect x="57.5422%" y="869" width="0.1330%" height="15" fill="rgb(215,115,40)" fg:x="205925" fg:w="476"/><text x="57.7922%" y="879.50"></text></g><g><title>sk-gen`jaq_core::path::update::_{{closure}} (472 samples, 0.13%)</title><rect x="57.5433%" y="853" width="0.1319%" height="15" fill="rgb(222,69,34)" fg:x="205929" fg:w="472"/><text x="57.7933%" y="863.50"></text></g><g><title>sk-gen`jaq_core::path::update (471 samples, 0.13%)</title><rect x="57.5436%" y="837" width="0.1316%" height="15" fill="rgb(209,161,10)" fg:x="205930" fg:w="471"/><text x="57.7936%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update::_{{closure}} (500 samples, 0.14%)</title><rect x="57.5360%" y="917" width="0.1397%" height="15" fill="rgb(217,6,38)" fg:x="205903" fg:w="500"/><text x="57.7860%" y="927.50"></text></g><g><title>sk-gen`jaq_core::path::Path&lt;V&gt;::update (479 samples, 0.13%)</title><rect x="57.5419%" y="901" width="0.1338%" height="15" fill="rgb(229,229,48)" fg:x="205924" fg:w="479"/><text x="57.7919%" y="911.50"></text></g><g><title>sk-gen`jaq_core::path::update (478 samples, 0.13%)</title><rect x="57.5422%" y="885" width="0.1336%" height="15" fill="rgb(225,21,28)" fg:x="205925" fg:w="478"/><text x="57.7922%" y="895.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (508 samples, 0.14%)</title><rect x="57.5355%" y="933" width="0.1420%" height="15" fill="rgb(206,33,13)" fg:x="205901" fg:w="508"/><text x="57.7855%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (624 samples, 0.17%)</title><rect x="57.5033%" y="1013" width="0.1744%" height="15" fill="rgb(242,178,17)" fg:x="205786" fg:w="624"/><text x="57.7533%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (526 samples, 0.15%)</title><rect x="57.5307%" y="997" width="0.1470%" height="15" fill="rgb(220,162,5)" fg:x="205884" fg:w="526"/><text x="57.7807%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (524 samples, 0.15%)</title><rect x="57.5313%" y="981" width="0.1464%" height="15" fill="rgb(210,33,43)" fg:x="205886" fg:w="524"/><text x="57.7813%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (524 samples, 0.15%)</title><rect x="57.5313%" y="965" width="0.1464%" height="15" fill="rgb(216,116,54)" fg:x="205886" fg:w="524"/><text x="57.7813%" y="975.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::update (524 samples, 0.15%)</title><rect x="57.5313%" y="949" width="0.1464%" height="15" fill="rgb(249,92,24)" fg:x="205886" fg:w="524"/><text x="57.7813%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (53 samples, 0.01%)</title><rect x="57.6785%" y="965" width="0.0148%" height="15" fill="rgb(231,189,14)" fg:x="206413" fg:w="53"/><text x="57.9285%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (39 samples, 0.01%)</title><rect x="57.6824%" y="949" width="0.0109%" height="15" fill="rgb(230,8,41)" fg:x="206427" fg:w="39"/><text x="57.9324%" y="959.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (39 samples, 0.01%)</title><rect x="57.6824%" y="933" width="0.0109%" height="15" fill="rgb(249,7,27)" fg:x="206427" fg:w="39"/><text x="57.9324%" y="943.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (95 samples, 0.03%)</title><rect x="57.6964%" y="805" width="0.0265%" height="15" fill="rgb(232,86,5)" fg:x="206477" fg:w="95"/><text x="57.9464%" y="815.50"></text></g><g><title>sk-gen`core::ops::function::FnOnce::call_once (93 samples, 0.03%)</title><rect x="57.6970%" y="789" width="0.0260%" height="15" fill="rgb(224,175,18)" fg:x="206479" fg:w="93"/><text x="57.9470%" y="799.50"></text></g><g><title>sk-gen`jaq_std::re (91 samples, 0.03%)</title><rect x="57.6975%" y="773" width="0.0254%" height="15" fill="rgb(220,129,12)" fg:x="206481" fg:w="91"/><text x="57.9475%" y="783.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (101 samples, 0.03%)</title><rect x="57.6964%" y="821" width="0.0282%" height="15" fill="rgb(210,19,36)" fg:x="206477" fg:w="101"/><text x="57.9464%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (112 samples, 0.03%)</title><rect x="57.6961%" y="837" width="0.0313%" height="15" fill="rgb(219,96,14)" fg:x="206476" fg:w="112"/><text x="57.9461%" y="847.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (39 samples, 0.01%)</title><rect x="57.7406%" y="565" width="0.0109%" height="15" fill="rgb(249,106,1)" fg:x="206635" fg:w="39"/><text x="57.9906%" y="575.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (39 samples, 0.01%)</title><rect x="57.7406%" y="549" width="0.0109%" height="15" fill="rgb(249,155,20)" fg:x="206635" fg:w="39"/><text x="57.9906%" y="559.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (62 samples, 0.02%)</title><rect x="57.7406%" y="581" width="0.0173%" height="15" fill="rgb(244,168,9)" fg:x="206635" fg:w="62"/><text x="57.9906%" y="591.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (67 samples, 0.02%)</title><rect x="57.7394%" y="597" width="0.0187%" height="15" fill="rgb(216,23,50)" fg:x="206631" fg:w="67"/><text x="57.9894%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (69 samples, 0.02%)</title><rect x="57.7392%" y="613" width="0.0193%" height="15" fill="rgb(224,219,20)" fg:x="206630" fg:w="69"/><text x="57.9892%" y="623.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (159 samples, 0.04%)</title><rect x="57.7294%" y="757" width="0.0444%" height="15" fill="rgb(222,156,15)" fg:x="206595" fg:w="159"/><text x="57.9794%" y="767.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (159 samples, 0.04%)</title><rect x="57.7294%" y="741" width="0.0444%" height="15" fill="rgb(231,97,17)" fg:x="206595" fg:w="159"/><text x="57.9794%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (158 samples, 0.04%)</title><rect x="57.7297%" y="725" width="0.0442%" height="15" fill="rgb(218,70,48)" fg:x="206596" fg:w="158"/><text x="57.9797%" y="735.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (148 samples, 0.04%)</title><rect x="57.7325%" y="709" width="0.0414%" height="15" fill="rgb(212,196,52)" fg:x="206606" fg:w="148"/><text x="57.9825%" y="719.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (148 samples, 0.04%)</title><rect x="57.7325%" y="693" width="0.0414%" height="15" fill="rgb(243,203,18)" fg:x="206606" fg:w="148"/><text x="57.9825%" y="703.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (145 samples, 0.04%)</title><rect x="57.7333%" y="677" width="0.0405%" height="15" fill="rgb(252,125,41)" fg:x="206609" fg:w="145"/><text x="57.9833%" y="687.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (125 samples, 0.03%)</title><rect x="57.7389%" y="661" width="0.0349%" height="15" fill="rgb(223,180,33)" fg:x="206629" fg:w="125"/><text x="57.9889%" y="671.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (125 samples, 0.03%)</title><rect x="57.7389%" y="645" width="0.0349%" height="15" fill="rgb(254,159,46)" fg:x="206629" fg:w="125"/><text x="57.9889%" y="655.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (125 samples, 0.03%)</title><rect x="57.7389%" y="629" width="0.0349%" height="15" fill="rgb(254,38,10)" fg:x="206629" fg:w="125"/><text x="57.9889%" y="639.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (55 samples, 0.02%)</title><rect x="57.7584%" y="613" width="0.0154%" height="15" fill="rgb(208,217,32)" fg:x="206699" fg:w="55"/><text x="58.0084%" y="623.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (54 samples, 0.02%)</title><rect x="57.7587%" y="597" width="0.0151%" height="15" fill="rgb(221,120,13)" fg:x="206700" fg:w="54"/><text x="58.0087%" y="607.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (54 samples, 0.02%)</title><rect x="57.7587%" y="581" width="0.0151%" height="15" fill="rgb(246,54,52)" fg:x="206700" fg:w="54"/><text x="58.0087%" y="591.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (37 samples, 0.01%)</title><rect x="57.7635%" y="565" width="0.0103%" height="15" fill="rgb(242,34,25)" fg:x="206717" fg:w="37"/><text x="58.0135%" y="575.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (38 samples, 0.01%)</title><rect x="57.7741%" y="693" width="0.0106%" height="15" fill="rgb(247,209,9)" fg:x="206755" fg:w="38"/><text x="58.0241%" y="703.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (37 samples, 0.01%)</title><rect x="57.7744%" y="677" width="0.0103%" height="15" fill="rgb(228,71,26)" fg:x="206756" fg:w="37"/><text x="58.0244%" y="687.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (37 samples, 0.01%)</title><rect x="57.7744%" y="661" width="0.0103%" height="15" fill="rgb(222,145,49)" fg:x="206756" fg:w="37"/><text x="58.0244%" y="671.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (204 samples, 0.06%)</title><rect x="57.7280%" y="789" width="0.0570%" height="15" fill="rgb(218,121,17)" fg:x="206590" fg:w="204"/><text x="57.9780%" y="799.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (201 samples, 0.06%)</title><rect x="57.7288%" y="773" width="0.0562%" height="15" fill="rgb(244,50,7)" fg:x="206593" fg:w="201"/><text x="57.9788%" y="783.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (40 samples, 0.01%)</title><rect x="57.7738%" y="757" width="0.0112%" height="15" fill="rgb(246,229,37)" fg:x="206754" fg:w="40"/><text x="58.0238%" y="767.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (40 samples, 0.01%)</title><rect x="57.7738%" y="741" width="0.0112%" height="15" fill="rgb(225,18,5)" fg:x="206754" fg:w="40"/><text x="58.0238%" y="751.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (40 samples, 0.01%)</title><rect x="57.7738%" y="725" width="0.0112%" height="15" fill="rgb(213,204,8)" fg:x="206754" fg:w="40"/><text x="58.0238%" y="735.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (39 samples, 0.01%)</title><rect x="57.7741%" y="709" width="0.0109%" height="15" fill="rgb(238,103,6)" fg:x="206755" fg:w="39"/><text x="58.0241%" y="719.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (326 samples, 0.09%)</title><rect x="57.6945%" y="917" width="0.0911%" height="15" fill="rgb(222,25,35)" fg:x="206470" fg:w="326"/><text x="57.9445%" y="927.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (325 samples, 0.09%)</title><rect x="57.6947%" y="901" width="0.0908%" height="15" fill="rgb(213,203,35)" fg:x="206471" fg:w="325"/><text x="57.9447%" y="911.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (324 samples, 0.09%)</title><rect x="57.6950%" y="885" width="0.0905%" height="15" fill="rgb(221,79,53)" fg:x="206472" fg:w="324"/><text x="57.9450%" y="895.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then (323 samples, 0.09%)</title><rect x="57.6953%" y="869" width="0.0903%" height="15" fill="rgb(243,200,35)" fg:x="206473" fg:w="323"/><text x="57.9453%" y="879.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (322 samples, 0.09%)</title><rect x="57.6956%" y="853" width="0.0900%" height="15" fill="rgb(248,60,25)" fg:x="206474" fg:w="322"/><text x="57.9456%" y="863.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (208 samples, 0.06%)</title><rect x="57.7274%" y="837" width="0.0581%" height="15" fill="rgb(227,53,46)" fg:x="206588" fg:w="208"/><text x="57.9774%" y="847.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (207 samples, 0.06%)</title><rect x="57.7277%" y="821" width="0.0578%" height="15" fill="rgb(216,120,32)" fg:x="206589" fg:w="207"/><text x="57.9777%" y="831.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (207 samples, 0.06%)</title><rect x="57.7277%" y="805" width="0.0578%" height="15" fill="rgb(220,134,1)" fg:x="206589" fg:w="207"/><text x="57.9777%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,587 samples, 1.00%)</title><rect x="56.7835%" y="1077" width="1.0023%" height="15" fill="rgb(237,168,5)" fg:x="203210" fg:w="3587"/><text x="57.0335%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (3,429 samples, 0.96%)</title><rect x="56.8277%" y="1061" width="0.9582%" height="15" fill="rgb(231,100,33)" fg:x="203368" fg:w="3429"/><text x="57.0777%" y="1071.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (3,425 samples, 0.96%)</title><rect x="56.8288%" y="1045" width="0.9571%" height="15" fill="rgb(236,177,47)" fg:x="203372" fg:w="3425"/><text x="57.0788%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::filter::FilterT::pipe (1,011 samples, 0.28%)</title><rect x="57.5033%" y="1029" width="0.2825%" height="15" fill="rgb(235,7,49)" fg:x="205786" fg:w="1011"/><text x="57.7533%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_with (387 samples, 0.11%)</title><rect x="57.6777%" y="1013" width="0.1081%" height="15" fill="rgb(232,119,22)" fg:x="206410" fg:w="387"/><text x="57.9277%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (386 samples, 0.11%)</title><rect x="57.6780%" y="997" width="0.1079%" height="15" fill="rgb(254,73,53)" fg:x="206411" fg:w="386"/><text x="57.9280%" y="1007.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (385 samples, 0.11%)</title><rect x="57.6783%" y="981" width="0.1076%" height="15" fill="rgb(251,35,20)" fg:x="206412" fg:w="385"/><text x="57.9283%" y="991.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with (330 samples, 0.09%)</title><rect x="57.6936%" y="965" width="0.0922%" height="15" fill="rgb(241,119,20)" fg:x="206467" fg:w="330"/><text x="57.9436%" y="975.50"></text></g><g><title>sk-gen`jaq_core::box_iter::flat_map_then_with::_{{closure}} (327 samples, 0.09%)</title><rect x="57.6945%" y="949" width="0.0914%" height="15" fill="rgb(207,102,14)" fg:x="206470" fg:w="327"/><text x="57.9445%" y="959.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (327 samples, 0.09%)</title><rect x="57.6945%" y="933" width="0.0914%" height="15" fill="rgb(248,201,50)" fg:x="206470" fg:w="327"/><text x="57.9445%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,598 samples, 1.01%)</title><rect x="56.7818%" y="1093" width="1.0054%" height="15" fill="rgb(222,185,44)" fg:x="203204" fg:w="3598"/><text x="57.0318%" y="1103.50"></text></g><g><title>sk-gen`&lt;jaq_core::compile::TermId as jaq_core::filter::FilterT&lt;F&gt;&gt;::run (3,657 samples, 1.02%)</title><rect x="56.7737%" y="1125" width="1.0219%" height="15" fill="rgb(218,107,18)" fg:x="203175" fg:w="3657"/><text x="57.0237%" y="1135.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (3,628 samples, 1.01%)</title><rect x="56.7818%" y="1109" width="1.0138%" height="15" fill="rgb(237,177,39)" fg:x="203204" fg:w="3628"/><text x="57.0318%" y="1119.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (49 samples, 0.01%)</title><rect x="57.9406%" y="773" width="0.0137%" height="15" fill="rgb(246,69,6)" fg:x="207351" fg:w="49"/><text x="58.1906%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (87 samples, 0.02%)</title><rect x="57.9373%" y="789" width="0.0243%" height="15" fill="rgb(234,208,37)" fg:x="207339" fg:w="87"/><text x="58.1873%" y="799.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (101 samples, 0.03%)</title><rect x="57.9350%" y="805" width="0.0282%" height="15" fill="rgb(225,4,6)" fg:x="207331" fg:w="101"/><text x="58.1850%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94 samples, 0.03%)</title><rect x="57.9775%" y="757" width="0.0263%" height="15" fill="rgb(233,45,0)" fg:x="207483" fg:w="94"/><text x="58.2275%" y="767.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (152 samples, 0.04%)</title><rect x="57.9658%" y="789" width="0.0425%" height="15" fill="rgb(226,136,5)" fg:x="207441" fg:w="152"/><text x="58.2158%" y="799.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (128 samples, 0.04%)</title><rect x="57.9725%" y="773" width="0.0358%" height="15" fill="rgb(211,91,47)" fg:x="207465" fg:w="128"/><text x="58.2225%" y="783.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (306 samples, 0.09%)</title><rect x="57.9230%" y="821" width="0.0855%" height="15" fill="rgb(242,88,51)" fg:x="207288" fg:w="306"/><text x="58.1730%" y="831.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (161 samples, 0.04%)</title><rect x="57.9636%" y="805" width="0.0450%" height="15" fill="rgb(230,91,28)" fg:x="207433" fg:w="161"/><text x="58.2136%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (390 samples, 0.11%)</title><rect x="57.9121%" y="837" width="0.1090%" height="15" fill="rgb(254,186,29)" fg:x="207249" fg:w="390"/><text x="58.1621%" y="847.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (447 samples, 0.12%)</title><rect x="57.9004%" y="853" width="0.1249%" height="15" fill="rgb(238,6,4)" fg:x="207207" fg:w="447"/><text x="58.1504%" y="863.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (456 samples, 0.13%)</title><rect x="57.8982%" y="869" width="0.1274%" height="15" fill="rgb(221,151,16)" fg:x="207199" fg:w="456"/><text x="58.1482%" y="879.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (543 samples, 0.15%)</title><rect x="57.8744%" y="901" width="0.1517%" height="15" fill="rgb(251,143,52)" fg:x="207114" fg:w="543"/><text x="58.1244%" y="911.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (465 samples, 0.13%)</title><rect x="57.8962%" y="885" width="0.1299%" height="15" fill="rgb(206,90,15)" fg:x="207192" fg:w="465"/><text x="58.1462%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (630 samples, 0.18%)</title><rect x="57.8652%" y="917" width="0.1760%" height="15" fill="rgb(218,35,8)" fg:x="207081" fg:w="630"/><text x="58.1152%" y="927.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (681 samples, 0.19%)</title><rect x="57.8599%" y="933" width="0.1903%" height="15" fill="rgb(239,215,6)" fg:x="207062" fg:w="681"/><text x="58.1099%" y="943.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (722 samples, 0.20%)</title><rect x="57.8490%" y="949" width="0.2018%" height="15" fill="rgb(245,116,39)" fg:x="207023" fg:w="722"/><text x="58.0990%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (45 samples, 0.01%)</title><rect x="58.0513%" y="949" width="0.0126%" height="15" fill="rgb(242,65,28)" fg:x="207747" fg:w="45"/><text x="58.3013%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (834 samples, 0.23%)</title><rect x="57.8381%" y="965" width="0.2330%" height="15" fill="rgb(252,132,53)" fg:x="206984" fg:w="834"/><text x="58.0881%" y="975.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (882 samples, 0.25%)</title><rect x="57.8314%" y="981" width="0.2465%" height="15" fill="rgb(224,159,50)" fg:x="206960" fg:w="882"/><text x="58.0814%" y="991.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (964 samples, 0.27%)</title><rect x="57.8224%" y="997" width="0.2694%" height="15" fill="rgb(224,93,4)" fg:x="206928" fg:w="964"/><text x="58.0724%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,054 samples, 0.29%)</title><rect x="57.8115%" y="1013" width="0.2945%" height="15" fill="rgb(208,81,34)" fg:x="206889" fg:w="1054"/><text x="58.0615%" y="1023.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1,108 samples, 0.31%)</title><rect x="57.8012%" y="1045" width="0.3096%" height="15" fill="rgb(233,92,54)" fg:x="206852" fg:w="1108"/><text x="58.0512%" y="1055.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,087 samples, 0.30%)</title><rect x="57.8071%" y="1029" width="0.3037%" height="15" fill="rgb(237,21,14)" fg:x="206873" fg:w="1087"/><text x="58.0571%" y="1039.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,140 samples, 0.32%)</title><rect x="57.7984%" y="1061" width="0.3186%" height="15" fill="rgb(249,128,51)" fg:x="206842" fg:w="1140"/><text x="58.0484%" y="1071.50"></text></g><g><title>sk-gen`&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,151 samples, 0.32%)</title><rect x="57.7973%" y="1077" width="0.3216%" height="15" fill="rgb(223,129,24)" fg:x="206838" fg:w="1151"/><text x="58.0473%" y="1087.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1,158 samples, 0.32%)</title><rect x="57.7956%" y="1125" width="0.3236%" height="15" fill="rgb(231,168,25)" fg:x="206832" fg:w="1158"/><text x="58.0456%" y="1135.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (1,158 samples, 0.32%)</title><rect x="57.7956%" y="1109" width="0.3236%" height="15" fill="rgb(224,39,20)" fg:x="206832" fg:w="1158"/><text x="58.0456%" y="1119.50"></text></g><g><title>sk-gen`&lt;jaq_json::Val as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1,157 samples, 0.32%)</title><rect x="57.7959%" y="1093" width="0.3233%" height="15" fill="rgb(225,152,53)" fg:x="206833" fg:w="1157"/><text x="58.0459%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::Filter&lt;jaq_core::filter::Native&lt;jaq_json::Val&gt;&gt;&gt; (78 samples, 0.02%)</title><rect x="58.1251%" y="1125" width="0.0218%" height="15" fill="rgb(252,17,24)" fg:x="208011" fg:w="78"/><text x="58.3751%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::compile::Term&gt; (41 samples, 0.01%)</title><rect x="58.1354%" y="1109" width="0.0115%" height="15" fill="rgb(250,114,30)" fg:x="208048" fg:w="41"/><text x="58.3854%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (96 samples, 0.03%)</title><rect x="58.1826%" y="1077" width="0.0268%" height="15" fill="rgb(229,5,4)" fg:x="208217" fg:w="96"/><text x="58.4326%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::iterm (40 samples, 0.01%)</title><rect x="58.2505%" y="1029" width="0.0112%" height="15" fill="rgb(225,176,49)" fg:x="208460" fg:w="40"/><text x="58.5005%" y="1039.50"></text></g><g><title>sk-gen`alloc::boxed::iter::_&lt;impl core::iter::traits::collect::FromIterator&lt;I&gt; for alloc::boxed::Box&lt;[I]&gt;&gt;::from_iter (70 samples, 0.02%)</title><rect x="58.2427%" y="1061" width="0.0196%" height="15" fill="rgb(224,221,49)" fg:x="208432" fg:w="70"/><text x="58.4927%" y="1071.50"></text></g><g><title>sk-gen`alloc::vec::in_place_collect::from_iter_in_place (44 samples, 0.01%)</title><rect x="58.2500%" y="1045" width="0.0123%" height="15" fill="rgb(253,169,27)" fg:x="208458" fg:w="44"/><text x="58.5000%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::def_post (43 samples, 0.01%)</title><rect x="58.2662%" y="1061" width="0.0120%" height="15" fill="rgb(211,206,16)" fg:x="208516" fg:w="43"/><text x="58.5162%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (229 samples, 0.06%)</title><rect x="58.2841%" y="1061" width="0.0640%" height="15" fill="rgb(244,87,35)" fg:x="208580" fg:w="229"/><text x="58.5341%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (98 samples, 0.03%)</title><rect x="58.3207%" y="1045" width="0.0274%" height="15" fill="rgb(246,28,10)" fg:x="208711" fg:w="98"/><text x="58.5707%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (47 samples, 0.01%)</title><rect x="58.3349%" y="1029" width="0.0131%" height="15" fill="rgb(229,12,44)" fg:x="208762" fg:w="47"/><text x="58.5849%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::term (466 samples, 0.13%)</title><rect x="58.2217%" y="1077" width="0.1302%" height="15" fill="rgb(210,145,37)" fg:x="208357" fg:w="466"/><text x="58.4717%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (54 samples, 0.02%)</title><rect x="58.3746%" y="1061" width="0.0151%" height="15" fill="rgb(227,112,52)" fg:x="208904" fg:w="54"/><text x="58.6246%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (68 samples, 0.02%)</title><rect x="58.4059%" y="1045" width="0.0190%" height="15" fill="rgb(238,155,34)" fg:x="209016" fg:w="68"/><text x="58.6559%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::remove::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (63 samples, 0.02%)</title><rect x="58.4073%" y="1029" width="0.0176%" height="15" fill="rgb(239,226,36)" fg:x="209021" fg:w="63"/><text x="58.6573%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::pop (262 samples, 0.07%)</title><rect x="58.3520%" y="1077" width="0.0732%" height="15" fill="rgb(230,16,23)" fg:x="208823" fg:w="262"/><text x="58.6020%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (114 samples, 0.03%)</title><rect x="58.3933%" y="1061" width="0.0319%" height="15" fill="rgb(236,171,36)" fg:x="208971" fg:w="114"/><text x="58.6433%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::compile::MapVec&lt;K,V&gt;::push (89 samples, 0.02%)</title><rect x="58.4252%" y="1077" width="0.0249%" height="15" fill="rgb(221,22,14)" fg:x="209085" fg:w="89"/><text x="58.6752%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::def_post (1,020 samples, 0.29%)</title><rect x="58.1692%" y="1093" width="0.2850%" height="15" fill="rgb(242,43,11)" fg:x="208169" fg:w="1020"/><text x="58.4192%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,031 samples, 0.29%)</title><rect x="58.1673%" y="1109" width="0.2881%" height="15" fill="rgb(232,69,23)" fg:x="208162" fg:w="1031"/><text x="58.4173%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (43 samples, 0.01%)</title><rect x="58.4554%" y="1109" width="0.0120%" height="15" fill="rgb(216,180,54)" fg:x="209193" fg:w="43"/><text x="58.7054%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::compile::Compiler&lt;&amp;str,F&gt;::compile (1,170 samples, 0.33%)</title><rect x="58.1491%" y="1125" width="0.3269%" height="15" fill="rgb(216,5,24)" fg:x="208097" fg:w="1170"/><text x="58.3991%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::finish (40 samples, 0.01%)</title><rect x="58.4892%" y="1045" width="0.0112%" height="15" fill="rgb(225,89,9)" fg:x="209314" fg:w="40"/><text x="58.7392%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (40 samples, 0.01%)</title><rect x="58.4892%" y="1029" width="0.0112%" height="15" fill="rgb(243,75,33)" fg:x="209314" fg:w="40"/><text x="58.7392%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::Loader&lt;&amp;str,P,R&gt;::load (75 samples, 0.02%)</title><rect x="58.4797%" y="1125" width="0.0210%" height="15" fill="rgb(247,141,45)" fg:x="209280" fg:w="75"/><text x="58.7297%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::parse_main (71 samples, 0.02%)</title><rect x="58.4808%" y="1109" width="0.0198%" height="15" fill="rgb(232,177,36)" fg:x="209284" fg:w="71"/><text x="58.7308%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::parse (43 samples, 0.01%)</title><rect x="58.4886%" y="1093" width="0.0120%" height="15" fill="rgb(219,125,36)" fg:x="209312" fg:w="43"/><text x="58.7386%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (41 samples, 0.01%)</title><rect x="58.4892%" y="1077" width="0.0115%" height="15" fill="rgb(227,94,9)" fg:x="209314" fg:w="41"/><text x="58.7392%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (41 samples, 0.01%)</title><rect x="58.4892%" y="1061" width="0.0115%" height="15" fill="rgb(240,34,52)" fg:x="209314" fg:w="41"/><text x="58.7392%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (99 samples, 0.03%)</title><rect x="58.5498%" y="997" width="0.0277%" height="15" fill="rgb(216,45,12)" fg:x="209531" fg:w="99"/><text x="58.7998%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.02%)</title><rect x="58.5582%" y="981" width="0.0193%" height="15" fill="rgb(246,21,19)" fg:x="209561" fg:w="69"/><text x="58.8082%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.02%)</title><rect x="58.5959%" y="981" width="0.0176%" height="15" fill="rgb(213,98,42)" fg:x="209696" fg:w="63"/><text x="58.8459%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (44 samples, 0.01%)</title><rect x="58.6012%" y="965" width="0.0123%" height="15" fill="rgb(250,136,47)" fg:x="209715" fg:w="44"/><text x="58.8512%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="58.6370%" y="965" width="0.0112%" height="15" fill="rgb(251,124,27)" fg:x="209843" fg:w="40"/><text x="58.8870%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (41 samples, 0.01%)</title><rect x="58.6482%" y="965" width="0.0115%" height="15" fill="rgb(229,180,14)" fg:x="209883" fg:w="41"/><text x="58.8982%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (233 samples, 0.07%)</title><rect x="58.6641%" y="965" width="0.0651%" height="15" fill="rgb(245,216,25)" fg:x="209940" fg:w="233"/><text x="58.9141%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (215 samples, 0.06%)</title><rect x="58.6691%" y="949" width="0.0601%" height="15" fill="rgb(251,43,5)" fg:x="209958" fg:w="215"/><text x="58.9191%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (129 samples, 0.04%)</title><rect x="58.6931%" y="933" width="0.0360%" height="15" fill="rgb(250,128,24)" fg:x="210044" fg:w="129"/><text x="58.9431%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (105 samples, 0.03%)</title><rect x="58.6999%" y="917" width="0.0293%" height="15" fill="rgb(217,117,27)" fg:x="210068" fg:w="105"/><text x="58.9499%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.01%)</title><rect x="58.7502%" y="949" width="0.0126%" height="15" fill="rgb(245,147,4)" fg:x="210248" fg:w="45"/><text x="59.0002%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (184 samples, 0.05%)</title><rect x="58.8415%" y="933" width="0.0514%" height="15" fill="rgb(242,201,35)" fg:x="210575" fg:w="184"/><text x="59.0915%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (144 samples, 0.04%)</title><rect x="58.8527%" y="917" width="0.0402%" height="15" fill="rgb(218,181,1)" fg:x="210615" fg:w="144"/><text x="59.1027%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (72 samples, 0.02%)</title><rect x="58.8728%" y="901" width="0.0201%" height="15" fill="rgb(222,6,29)" fg:x="210687" fg:w="72"/><text x="59.1228%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.01%)</title><rect x="58.8941%" y="933" width="0.0126%" height="15" fill="rgb(208,186,3)" fg:x="210763" fg:w="45"/><text x="59.1441%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (80 samples, 0.02%)</title><rect x="58.9460%" y="917" width="0.0224%" height="15" fill="rgb(216,36,26)" fg:x="210949" fg:w="80"/><text x="59.1960%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.02%)</title><rect x="58.9511%" y="901" width="0.0173%" height="15" fill="rgb(248,201,23)" fg:x="210967" fg:w="62"/><text x="59.2011%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (104 samples, 0.03%)</title><rect x="59.0287%" y="901" width="0.0291%" height="15" fill="rgb(251,170,31)" fg:x="211245" fg:w="104"/><text x="59.2787%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (140 samples, 0.04%)</title><rect x="59.0578%" y="901" width="0.0391%" height="15" fill="rgb(207,110,25)" fg:x="211349" fg:w="140"/><text x="59.3078%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (479 samples, 0.13%)</title><rect x="59.1028%" y="901" width="0.1338%" height="15" fill="rgb(250,54,15)" fg:x="211510" fg:w="479"/><text x="59.3528%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (440 samples, 0.12%)</title><rect x="59.1137%" y="885" width="0.1230%" height="15" fill="rgb(227,68,33)" fg:x="211549" fg:w="440"/><text x="59.3637%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (280 samples, 0.08%)</title><rect x="59.1584%" y="869" width="0.0782%" height="15" fill="rgb(238,34,41)" fg:x="211709" fg:w="280"/><text x="59.4084%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (224 samples, 0.06%)</title><rect x="59.1741%" y="853" width="0.0626%" height="15" fill="rgb(220,11,15)" fg:x="211765" fg:w="224"/><text x="59.4241%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.02%)</title><rect x="59.2735%" y="885" width="0.0235%" height="15" fill="rgb(246,111,35)" fg:x="212121" fg:w="84"/><text x="59.5235%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 0.01%)</title><rect x="59.3004%" y="885" width="0.0117%" height="15" fill="rgb(209,88,53)" fg:x="212217" fg:w="42"/><text x="59.5504%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.02%)</title><rect x="59.4281%" y="869" width="0.0154%" height="15" fill="rgb(231,185,47)" fg:x="212674" fg:w="55"/><text x="59.6781%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (108 samples, 0.03%)</title><rect x="59.4929%" y="837" width="0.0302%" height="15" fill="rgb(233,154,1)" fg:x="212906" fg:w="108"/><text x="59.7429%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (431 samples, 0.12%)</title><rect x="59.4487%" y="869" width="0.1204%" height="15" fill="rgb(225,15,46)" fg:x="212748" fg:w="431"/><text x="59.6987%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (370 samples, 0.10%)</title><rect x="59.4658%" y="853" width="0.1034%" height="15" fill="rgb(211,135,41)" fg:x="212809" fg:w="370"/><text x="59.7158%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (165 samples, 0.05%)</title><rect x="59.5231%" y="837" width="0.0461%" height="15" fill="rgb(208,54,0)" fg:x="213014" fg:w="165"/><text x="59.7731%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (85 samples, 0.02%)</title><rect x="59.6058%" y="853" width="0.0238%" height="15" fill="rgb(244,136,14)" fg:x="213310" fg:w="85"/><text x="59.8558%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (77 samples, 0.02%)</title><rect x="59.6742%" y="837" width="0.0215%" height="15" fill="rgb(241,56,14)" fg:x="213555" fg:w="77"/><text x="59.9242%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (84 samples, 0.02%)</title><rect x="59.6958%" y="837" width="0.0235%" height="15" fill="rgb(205,80,24)" fg:x="213632" fg:w="84"/><text x="59.9458%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (410 samples, 0.11%)</title><rect x="59.7257%" y="837" width="0.1146%" height="15" fill="rgb(220,57,4)" fg:x="213739" fg:w="410"/><text x="59.9757%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (363 samples, 0.10%)</title><rect x="59.7388%" y="821" width="0.1014%" height="15" fill="rgb(226,193,50)" fg:x="213786" fg:w="363"/><text x="59.9888%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (226 samples, 0.06%)</title><rect x="59.7771%" y="805" width="0.0632%" height="15" fill="rgb(231,168,22)" fg:x="213923" fg:w="226"/><text x="60.0271%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (175 samples, 0.05%)</title><rect x="59.7913%" y="789" width="0.0489%" height="15" fill="rgb(254,215,14)" fg:x="213974" fg:w="175"/><text x="60.0413%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.03%)</title><rect x="59.8645%" y="821" width="0.0263%" height="15" fill="rgb(211,115,16)" fg:x="214236" fg:w="94"/><text x="60.1145%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (62 samples, 0.02%)</title><rect x="59.8942%" y="821" width="0.0173%" height="15" fill="rgb(236,210,16)" fg:x="214342" fg:w="62"/><text x="60.1442%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="60.0171%" y="805" width="0.0115%" height="15" fill="rgb(221,94,12)" fg:x="214782" fg:w="41"/><text x="60.2671%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (74 samples, 0.02%)</title><rect x="60.0727%" y="773" width="0.0207%" height="15" fill="rgb(235,218,49)" fg:x="214981" fg:w="74"/><text x="60.3227%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (333 samples, 0.09%)</title><rect x="60.0355%" y="805" width="0.0931%" height="15" fill="rgb(217,114,14)" fg:x="214848" fg:w="333"/><text x="60.2855%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (280 samples, 0.08%)</title><rect x="60.0504%" y="789" width="0.0782%" height="15" fill="rgb(216,145,22)" fg:x="214901" fg:w="280"/><text x="60.3004%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (126 samples, 0.04%)</title><rect x="60.0934%" y="773" width="0.0352%" height="15" fill="rgb(217,112,39)" fg:x="215055" fg:w="126"/><text x="60.3434%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (41 samples, 0.01%)</title><rect x="60.1311%" y="805" width="0.0115%" height="15" fill="rgb(225,85,32)" fg:x="215190" fg:w="41"/><text x="60.3811%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (38 samples, 0.01%)</title><rect x="60.1775%" y="789" width="0.0106%" height="15" fill="rgb(245,209,47)" fg:x="215356" fg:w="38"/><text x="60.4275%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (114 samples, 0.03%)</title><rect x="60.1881%" y="789" width="0.0319%" height="15" fill="rgb(218,220,15)" fg:x="215394" fg:w="114"/><text x="60.4381%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (98 samples, 0.03%)</title><rect x="60.1926%" y="773" width="0.0274%" height="15" fill="rgb(222,202,31)" fg:x="215410" fg:w="98"/><text x="60.4426%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (65 samples, 0.02%)</title><rect x="60.2018%" y="757" width="0.0182%" height="15" fill="rgb(243,203,4)" fg:x="215443" fg:w="65"/><text x="60.4518%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (39 samples, 0.01%)</title><rect x="60.2091%" y="741" width="0.0109%" height="15" fill="rgb(237,92,17)" fg:x="215469" fg:w="39"/><text x="60.4591%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (106 samples, 0.03%)</title><rect x="60.2672%" y="773" width="0.0296%" height="15" fill="rgb(231,119,7)" fg:x="215677" fg:w="106"/><text x="60.5172%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (152 samples, 0.04%)</title><rect x="60.2968%" y="773" width="0.0425%" height="15" fill="rgb(237,82,41)" fg:x="215783" fg:w="152"/><text x="60.5468%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (598 samples, 0.17%)</title><rect x="60.3424%" y="773" width="0.1671%" height="15" fill="rgb(226,81,48)" fg:x="215946" fg:w="598"/><text x="60.5924%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (538 samples, 0.15%)</title><rect x="60.3591%" y="757" width="0.1503%" height="15" fill="rgb(234,70,51)" fg:x="216006" fg:w="538"/><text x="60.6091%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (353 samples, 0.10%)</title><rect x="60.4108%" y="741" width="0.0986%" height="15" fill="rgb(251,86,4)" fg:x="216191" fg:w="353"/><text x="60.6608%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (291 samples, 0.08%)</title><rect x="60.4281%" y="725" width="0.0813%" height="15" fill="rgb(244,144,28)" fg:x="216253" fg:w="291"/><text x="60.6781%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (85 samples, 0.02%)</title><rect x="60.5558%" y="757" width="0.0238%" height="15" fill="rgb(232,161,39)" fg:x="216710" fg:w="85"/><text x="60.8058%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (98 samples, 0.03%)</title><rect x="60.5799%" y="757" width="0.0274%" height="15" fill="rgb(247,34,51)" fg:x="216796" fg:w="98"/><text x="60.8299%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.02%)</title><rect x="60.6388%" y="741" width="0.0182%" height="15" fill="rgb(225,132,2)" fg:x="217007" fg:w="65"/><text x="60.8888%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.01%)</title><rect x="60.6428%" y="725" width="0.0143%" height="15" fill="rgb(209,159,44)" fg:x="217021" fg:w="51"/><text x="60.8928%" y="735.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (109 samples, 0.03%)</title><rect x="60.6986%" y="709" width="0.0305%" height="15" fill="rgb(251,214,1)" fg:x="217221" fg:w="109"/><text x="60.9486%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (102 samples, 0.03%)</title><rect x="60.7006%" y="693" width="0.0285%" height="15" fill="rgb(247,84,47)" fg:x="217228" fg:w="102"/><text x="60.9506%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (72 samples, 0.02%)</title><rect x="60.7090%" y="677" width="0.0201%" height="15" fill="rgb(240,111,43)" fg:x="217258" fg:w="72"/><text x="60.9590%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (62 samples, 0.02%)</title><rect x="60.7118%" y="661" width="0.0173%" height="15" fill="rgb(215,214,35)" fg:x="217268" fg:w="62"/><text x="60.9618%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.02%)</title><rect x="60.7397%" y="693" width="0.0170%" height="15" fill="rgb(248,207,23)" fg:x="217368" fg:w="61"/><text x="60.9897%" y="703.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (99 samples, 0.03%)</title><rect x="60.7568%" y="693" width="0.0277%" height="15" fill="rgb(214,186,4)" fg:x="217429" fg:w="99"/><text x="61.0068%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (84 samples, 0.02%)</title><rect x="60.7610%" y="677" width="0.0235%" height="15" fill="rgb(220,133,22)" fg:x="217444" fg:w="84"/><text x="61.0110%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (47 samples, 0.01%)</title><rect x="60.7713%" y="661" width="0.0131%" height="15" fill="rgb(239,134,19)" fg:x="217481" fg:w="47"/><text x="61.0213%" y="671.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (384 samples, 0.11%)</title><rect x="60.6799%" y="725" width="0.1073%" height="15" fill="rgb(250,140,9)" fg:x="217154" fg:w="384"/><text x="60.9299%" y="735.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (199 samples, 0.06%)</title><rect x="60.7316%" y="709" width="0.0556%" height="15" fill="rgb(225,59,14)" fg:x="217339" fg:w="199"/><text x="60.9816%" y="719.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (449 samples, 0.13%)</title><rect x="60.6629%" y="741" width="0.1255%" height="15" fill="rgb(214,152,51)" fg:x="217093" fg:w="449"/><text x="60.9129%" y="751.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (86 samples, 0.02%)</title><rect x="60.7931%" y="741" width="0.0240%" height="15" fill="rgb(251,227,43)" fg:x="217559" fg:w="86"/><text x="61.0431%" y="751.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (757 samples, 0.21%)</title><rect x="60.6073%" y="757" width="0.2115%" height="15" fill="rgb(241,96,17)" fg:x="216894" fg:w="757"/><text x="60.8573%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (338 samples, 0.09%)</title><rect x="60.8188%" y="757" width="0.0944%" height="15" fill="rgb(234,198,43)" fg:x="217651" fg:w="338"/><text x="61.0688%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (296 samples, 0.08%)</title><rect x="60.8305%" y="741" width="0.0827%" height="15" fill="rgb(220,108,29)" fg:x="217693" fg:w="296"/><text x="61.0805%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (195 samples, 0.05%)</title><rect x="60.8588%" y="725" width="0.0545%" height="15" fill="rgb(226,163,33)" fg:x="217794" fg:w="195"/><text x="61.1088%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (163 samples, 0.05%)</title><rect x="60.8677%" y="709" width="0.0455%" height="15" fill="rgb(205,194,45)" fg:x="217826" fg:w="163"/><text x="61.1177%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (71 samples, 0.02%)</title><rect x="60.9244%" y="741" width="0.0198%" height="15" fill="rgb(206,143,44)" fg:x="218029" fg:w="71"/><text x="61.1744%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (39 samples, 0.01%)</title><rect x="60.9334%" y="725" width="0.0109%" height="15" fill="rgb(236,136,36)" fg:x="218061" fg:w="39"/><text x="61.1834%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (45 samples, 0.01%)</title><rect x="61.0616%" y="661" width="0.0126%" height="15" fill="rgb(249,172,42)" fg:x="218520" fg:w="45"/><text x="61.3116%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (206 samples, 0.06%)</title><rect x="61.0390%" y="693" width="0.0576%" height="15" fill="rgb(216,139,23)" fg:x="218439" fg:w="206"/><text x="61.2890%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (165 samples, 0.05%)</title><rect x="61.0504%" y="677" width="0.0461%" height="15" fill="rgb(207,166,20)" fg:x="218480" fg:w="165"/><text x="61.3004%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (80 samples, 0.02%)</title><rect x="61.0742%" y="661" width="0.0224%" height="15" fill="rgb(210,209,22)" fg:x="218565" fg:w="80"/><text x="61.3242%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (81 samples, 0.02%)</title><rect x="61.0977%" y="693" width="0.0226%" height="15" fill="rgb(232,118,20)" fg:x="218649" fg:w="81"/><text x="61.3477%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (87 samples, 0.02%)</title><rect x="61.1536%" y="677" width="0.0243%" height="15" fill="rgb(238,113,42)" fg:x="218849" fg:w="87"/><text x="61.4036%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.02%)</title><rect x="61.1586%" y="661" width="0.0193%" height="15" fill="rgb(231,42,5)" fg:x="218867" fg:w="69"/><text x="61.4086%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.01%)</title><rect x="61.1661%" y="645" width="0.0117%" height="15" fill="rgb(243,166,24)" fg:x="218894" fg:w="42"/><text x="61.4161%" y="655.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (37 samples, 0.01%)</title><rect x="61.1781%" y="677" width="0.0103%" height="15" fill="rgb(237,226,12)" fg:x="218937" fg:w="37"/><text x="61.4281%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (117 samples, 0.03%)</title><rect x="61.2298%" y="661" width="0.0327%" height="15" fill="rgb(229,133,24)" fg:x="219122" fg:w="117"/><text x="61.4798%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (191 samples, 0.05%)</title><rect x="61.2628%" y="661" width="0.0534%" height="15" fill="rgb(238,33,43)" fg:x="219240" fg:w="191"/><text x="61.5128%" y="671.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (563 samples, 0.16%)</title><rect x="61.3184%" y="661" width="0.1573%" height="15" fill="rgb(227,59,38)" fg:x="219439" fg:w="563"/><text x="61.5684%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (502 samples, 0.14%)</title><rect x="61.3355%" y="645" width="0.1403%" height="15" fill="rgb(230,97,0)" fg:x="219500" fg:w="502"/><text x="61.5855%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (306 samples, 0.09%)</title><rect x="61.3902%" y="629" width="0.0855%" height="15" fill="rgb(250,173,50)" fg:x="219696" fg:w="306"/><text x="61.6402%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (247 samples, 0.07%)</title><rect x="61.4067%" y="613" width="0.0690%" height="15" fill="rgb(240,15,50)" fg:x="219755" fg:w="247"/><text x="61.6567%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (133 samples, 0.04%)</title><rect x="61.5241%" y="645" width="0.0372%" height="15" fill="rgb(221,93,22)" fg:x="220175" fg:w="133"/><text x="61.7741%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (157 samples, 0.04%)</title><rect x="61.5629%" y="645" width="0.0439%" height="15" fill="rgb(245,180,53)" fg:x="220314" fg:w="157"/><text x="61.8129%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (36 samples, 0.01%)</title><rect x="61.6951%" y="597" width="0.0101%" height="15" fill="rgb(231,88,51)" fg:x="220787" fg:w="36"/><text x="61.9451%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (167 samples, 0.05%)</title><rect x="61.6761%" y="629" width="0.0467%" height="15" fill="rgb(240,58,21)" fg:x="220719" fg:w="167"/><text x="61.9261%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (134 samples, 0.04%)</title><rect x="61.6853%" y="613" width="0.0374%" height="15" fill="rgb(237,21,10)" fg:x="220752" fg:w="134"/><text x="61.9353%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (63 samples, 0.02%)</title><rect x="61.7052%" y="597" width="0.0176%" height="15" fill="rgb(218,43,11)" fg:x="220823" fg:w="63"/><text x="61.9552%" y="607.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (161 samples, 0.04%)</title><rect x="61.7733%" y="597" width="0.0450%" height="15" fill="rgb(218,221,29)" fg:x="221067" fg:w="161"/><text x="62.0233%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (138 samples, 0.04%)</title><rect x="61.7798%" y="581" width="0.0386%" height="15" fill="rgb(214,118,42)" fg:x="221090" fg:w="138"/><text x="62.0298%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (88 samples, 0.02%)</title><rect x="61.7937%" y="565" width="0.0246%" height="15" fill="rgb(251,200,26)" fg:x="221140" fg:w="88"/><text x="62.0437%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (71 samples, 0.02%)</title><rect x="61.7985%" y="549" width="0.0198%" height="15" fill="rgb(237,101,39)" fg:x="221157" fg:w="71"/><text x="62.0485%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.03%)</title><rect x="61.8725%" y="565" width="0.0263%" height="15" fill="rgb(251,117,11)" fg:x="221422" fg:w="94"/><text x="62.1225%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.02%)</title><rect x="61.8773%" y="549" width="0.0215%" height="15" fill="rgb(216,223,23)" fg:x="221439" fg:w="77"/><text x="62.1273%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.01%)</title><rect x="61.8882%" y="533" width="0.0106%" height="15" fill="rgb(251,54,12)" fg:x="221478" fg:w="38"/><text x="62.1382%" y="543.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (107 samples, 0.03%)</title><rect x="61.9304%" y="533" width="0.0299%" height="15" fill="rgb(254,176,54)" fg:x="221629" fg:w="107"/><text x="62.1804%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (99 samples, 0.03%)</title><rect x="61.9326%" y="517" width="0.0277%" height="15" fill="rgb(210,32,8)" fg:x="221637" fg:w="99"/><text x="62.1826%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (71 samples, 0.02%)</title><rect x="61.9404%" y="501" width="0.0198%" height="15" fill="rgb(235,52,38)" fg:x="221665" fg:w="71"/><text x="62.1904%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (64 samples, 0.02%)</title><rect x="61.9424%" y="485" width="0.0179%" height="15" fill="rgb(231,4,44)" fg:x="221672" fg:w="64"/><text x="62.1924%" y="495.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="61.9782%" y="517" width="0.0321%" height="15" fill="rgb(249,2,32)" fg:x="221800" fg:w="115"/><text x="62.2282%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (102 samples, 0.03%)</title><rect x="61.9818%" y="501" width="0.0285%" height="15" fill="rgb(224,65,26)" fg:x="221813" fg:w="102"/><text x="62.2318%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (60 samples, 0.02%)</title><rect x="61.9935%" y="485" width="0.0168%" height="15" fill="rgb(250,73,40)" fg:x="221855" fg:w="60"/><text x="62.2435%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.01%)</title><rect x="61.9963%" y="469" width="0.0140%" height="15" fill="rgb(253,177,16)" fg:x="221865" fg:w="50"/><text x="62.2463%" y="479.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (347 samples, 0.10%)</title><rect x="61.9156%" y="549" width="0.0970%" height="15" fill="rgb(217,32,34)" fg:x="221576" fg:w="347"/><text x="62.1656%" y="559.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (174 samples, 0.05%)</title><rect x="61.9639%" y="533" width="0.0486%" height="15" fill="rgb(212,7,10)" fg:x="221749" fg:w="174"/><text x="62.2139%" y="543.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (398 samples, 0.11%)</title><rect x="61.9030%" y="565" width="0.1112%" height="15" fill="rgb(245,89,8)" fg:x="221531" fg:w="398"/><text x="62.1530%" y="575.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (91 samples, 0.03%)</title><rect x="62.0187%" y="565" width="0.0254%" height="15" fill="rgb(237,16,53)" fg:x="221945" fg:w="91"/><text x="62.2687%" y="575.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (722 samples, 0.20%)</title><rect x="61.8443%" y="581" width="0.2018%" height="15" fill="rgb(250,204,30)" fg:x="221321" fg:w="722"/><text x="62.0943%" y="591.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (53 samples, 0.01%)</title><rect x="62.0461%" y="581" width="0.0148%" height="15" fill="rgb(208,77,27)" fg:x="222043" fg:w="53"/><text x="62.2961%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (44 samples, 0.01%)</title><rect x="62.0486%" y="565" width="0.0123%" height="15" fill="rgb(250,204,28)" fg:x="222052" fg:w="44"/><text x="62.2986%" y="575.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,157 samples, 0.32%)</title><rect x="61.7432%" y="613" width="0.3233%" height="15" fill="rgb(244,63,21)" fg:x="220959" fg:w="1157"/><text x="61.9932%" y="623.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (873 samples, 0.24%)</title><rect x="61.8225%" y="597" width="0.2439%" height="15" fill="rgb(236,85,44)" fg:x="221243" fg:w="873"/><text x="62.0725%" y="607.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,229 samples, 0.34%)</title><rect x="61.7239%" y="629" width="0.3434%" height="15" fill="rgb(215,98,4)" fg:x="220890" fg:w="1229"/><text x="61.9739%" y="639.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (115 samples, 0.03%)</title><rect x="62.0785%" y="629" width="0.0321%" height="15" fill="rgb(235,38,11)" fg:x="222159" fg:w="115"/><text x="62.3285%" y="639.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,810 samples, 0.51%)</title><rect x="61.6068%" y="645" width="0.5058%" height="15" fill="rgb(254,186,25)" fg:x="220471" fg:w="1810"/><text x="61.8568%" y="655.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (278 samples, 0.08%)</title><rect x="62.1126%" y="645" width="0.0777%" height="15" fill="rgb(225,55,31)" fg:x="222281" fg:w="278"/><text x="62.3626%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (242 samples, 0.07%)</title><rect x="62.1226%" y="629" width="0.0676%" height="15" fill="rgb(211,15,21)" fg:x="222317" fg:w="242"/><text x="62.3726%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (144 samples, 0.04%)</title><rect x="62.1500%" y="613" width="0.0402%" height="15" fill="rgb(215,187,41)" fg:x="222415" fg:w="144"/><text x="62.4000%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (98 samples, 0.03%)</title><rect x="62.1629%" y="597" width="0.0274%" height="15" fill="rgb(248,69,32)" fg:x="222461" fg:w="98"/><text x="62.4129%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (133 samples, 0.04%)</title><rect x="62.2034%" y="629" width="0.0372%" height="15" fill="rgb(252,102,52)" fg:x="222606" fg:w="133"/><text x="62.4534%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (73 samples, 0.02%)</title><rect x="62.2201%" y="613" width="0.0204%" height="15" fill="rgb(253,140,32)" fg:x="222666" fg:w="73"/><text x="62.4701%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (39 samples, 0.01%)</title><rect x="62.2296%" y="597" width="0.0109%" height="15" fill="rgb(216,56,42)" fg:x="222700" fg:w="39"/><text x="62.4796%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.01%)</title><rect x="62.2836%" y="597" width="0.0126%" height="15" fill="rgb(216,184,14)" fg:x="222893" fg:w="45"/><text x="62.5336%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.01%)</title><rect x="62.3906%" y="581" width="0.0123%" height="15" fill="rgb(237,187,27)" fg:x="223276" fg:w="44"/><text x="62.6406%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (72 samples, 0.02%)</title><rect x="62.4384%" y="549" width="0.0201%" height="15" fill="rgb(219,65,3)" fg:x="223447" fg:w="72"/><text x="62.6884%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (310 samples, 0.09%)</title><rect x="62.4071%" y="581" width="0.0866%" height="15" fill="rgb(245,83,25)" fg:x="223335" fg:w="310"/><text x="62.6571%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (266 samples, 0.07%)</title><rect x="62.4194%" y="565" width="0.0743%" height="15" fill="rgb(214,205,45)" fg:x="223379" fg:w="266"/><text x="62.6694%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (126 samples, 0.04%)</title><rect x="62.4585%" y="549" width="0.0352%" height="15" fill="rgb(241,20,18)" fg:x="223519" fg:w="126"/><text x="62.7085%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (66 samples, 0.02%)</title><rect x="62.5180%" y="565" width="0.0184%" height="15" fill="rgb(232,163,23)" fg:x="223732" fg:w="66"/><text x="62.7680%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.03%)</title><rect x="62.5644%" y="549" width="0.0263%" height="15" fill="rgb(214,5,46)" fg:x="223898" fg:w="94"/><text x="62.8144%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.03%)</title><rect x="62.5907%" y="549" width="0.0268%" height="15" fill="rgb(229,78,17)" fg:x="223992" fg:w="96"/><text x="62.8407%" y="559.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (425 samples, 0.12%)</title><rect x="62.6175%" y="549" width="0.1188%" height="15" fill="rgb(248,89,10)" fg:x="224088" fg:w="425"/><text x="62.8675%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (392 samples, 0.11%)</title><rect x="62.6267%" y="533" width="0.1095%" height="15" fill="rgb(248,54,15)" fg:x="224121" fg:w="392"/><text x="62.8767%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (251 samples, 0.07%)</title><rect x="62.6661%" y="517" width="0.0701%" height="15" fill="rgb(223,116,6)" fg:x="224262" fg:w="251"/><text x="62.9161%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (215 samples, 0.06%)</title><rect x="62.6762%" y="501" width="0.0601%" height="15" fill="rgb(205,125,38)" fg:x="224298" fg:w="215"/><text x="62.9262%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.02%)</title><rect x="62.7572%" y="533" width="0.0232%" height="15" fill="rgb(251,78,38)" fg:x="224588" fg:w="83"/><text x="63.0072%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (207 samples, 0.06%)</title><rect x="62.7810%" y="533" width="0.0578%" height="15" fill="rgb(253,78,28)" fg:x="224673" fg:w="207"/><text x="63.0310%" y="543.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (346 samples, 0.10%)</title><rect x="62.8388%" y="533" width="0.0967%" height="15" fill="rgb(209,120,3)" fg:x="224880" fg:w="346"/><text x="63.0888%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (308 samples, 0.09%)</title><rect x="62.8494%" y="517" width="0.0861%" height="15" fill="rgb(238,229,9)" fg:x="224918" fg:w="308"/><text x="63.0994%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (206 samples, 0.06%)</title><rect x="62.8779%" y="501" width="0.0576%" height="15" fill="rgb(253,159,18)" fg:x="225020" fg:w="206"/><text x="63.1279%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (130 samples, 0.04%)</title><rect x="62.8992%" y="485" width="0.0363%" height="15" fill="rgb(244,42,34)" fg:x="225096" fg:w="130"/><text x="63.1492%" y="495.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,444 samples, 0.40%)</title><rect x="62.5404%" y="565" width="0.4035%" height="15" fill="rgb(224,8,7)" fg:x="223812" fg:w="1444"/><text x="62.7904%" y="575.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (702 samples, 0.20%)</title><rect x="62.7477%" y="549" width="0.1962%" height="15" fill="rgb(210,201,45)" fg:x="224554" fg:w="702"/><text x="62.9977%" y="559.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,602 samples, 0.45%)</title><rect x="62.5018%" y="581" width="0.4477%" height="15" fill="rgb(252,185,21)" fg:x="223674" fg:w="1602"/><text x="62.7518%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (71 samples, 0.02%)</title><rect x="63.0523%" y="565" width="0.0198%" height="15" fill="rgb(223,131,1)" fg:x="225644" fg:w="71"/><text x="63.3023%" y="575.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (380 samples, 0.11%)</title><rect x="62.9715%" y="581" width="0.1062%" height="15" fill="rgb(245,141,16)" fg:x="225355" fg:w="380"/><text x="63.2215%" y="591.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,778 samples, 0.78%)</title><rect x="62.3065%" y="597" width="0.7763%" height="15" fill="rgb(229,55,45)" fg:x="222975" fg:w="2778"/><text x="62.5565%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (49 samples, 0.01%)</title><rect x="63.0836%" y="581" width="0.0137%" height="15" fill="rgb(208,92,15)" fg:x="225756" fg:w="49"/><text x="63.3336%" y="591.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (64 samples, 0.02%)</title><rect x="63.0828%" y="597" width="0.0179%" height="15" fill="rgb(234,185,47)" fg:x="225753" fg:w="64"/><text x="63.3328%" y="607.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,140 samples, 0.88%)</title><rect x="62.2405%" y="629" width="0.8774%" height="15" fill="rgb(253,104,50)" fg:x="222739" fg:w="3140"/><text x="62.4905%" y="639.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (3,027 samples, 0.85%)</title><rect x="62.2721%" y="613" width="0.8458%" height="15" fill="rgb(205,70,7)" fg:x="222852" fg:w="3027"/><text x="62.5221%" y="623.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,328 samples, 0.93%)</title><rect x="62.1902%" y="645" width="0.9300%" height="15" fill="rgb(240,178,43)" fg:x="222559" fg:w="3328"/><text x="62.4402%" y="655.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,987 samples, 1.95%)</title><rect x="61.1885%" y="677" width="1.9524%" height="15" fill="rgb(214,112,2)" fg:x="218974" fg:w="6987"/><text x="61.4385%" y="687.50">s..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (5,889 samples, 1.65%)</title><rect x="61.4953%" y="661" width="1.6456%" height="15" fill="rgb(206,46,17)" fg:x="220072" fg:w="5889"/><text x="61.7453%" y="671.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,246 samples, 2.02%)</title><rect x="61.1203%" y="693" width="2.0248%" height="15" fill="rgb(225,220,16)" fg:x="218730" fg:w="7246"/><text x="61.3703%" y="703.50">s..</text></g><g><title>libsystem_malloc.dylib`free_tiny (80 samples, 0.02%)</title><rect x="63.2591%" y="677" width="0.0224%" height="15" fill="rgb(238,65,40)" fg:x="226384" fg:w="80"/><text x="63.5091%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.01%)</title><rect x="63.2666%" y="661" width="0.0148%" height="15" fill="rgb(230,151,21)" fg:x="226411" fg:w="53"/><text x="63.5166%" y="671.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (465 samples, 0.13%)</title><rect x="63.1638%" y="693" width="0.1299%" height="15" fill="rgb(218,58,49)" fg:x="226043" fg:w="465"/><text x="63.4138%" y="703.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8,361 samples, 2.34%)</title><rect x="60.9675%" y="709" width="2.3363%" height="15" fill="rgb(219,179,14)" fg:x="218183" fg:w="8361"/><text x="61.2175%" y="719.50">s..</text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (36 samples, 0.01%)</title><rect x="63.2937%" y="693" width="0.0101%" height="15" fill="rgb(223,72,1)" fg:x="226508" fg:w="36"/><text x="63.5437%" y="703.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,482 samples, 2.37%)</title><rect x="60.9443%" y="741" width="2.3701%" height="15" fill="rgb(238,126,10)" fg:x="218100" fg:w="8482"/><text x="61.1943%" y="751.50">sk..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (8,439 samples, 2.36%)</title><rect x="60.9563%" y="725" width="2.3581%" height="15" fill="rgb(224,206,38)" fg:x="218143" fg:w="8439"/><text x="61.2063%" y="735.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,594 samples, 2.40%)</title><rect x="60.9132%" y="757" width="2.4014%" height="15" fill="rgb(212,201,54)" fg:x="217989" fg:w="8594"/><text x="61.1632%" y="767.50">sk..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,090 samples, 3.10%)</title><rect x="60.2286%" y="789" width="3.0989%" height="15" fill="rgb(218,154,48)" fg:x="215539" fg:w="11090"/><text x="60.4786%" y="799.50">sk-..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (10,025 samples, 2.80%)</title><rect x="60.5262%" y="773" width="2.8013%" height="15" fill="rgb(232,93,24)" fg:x="216604" fg:w="10025"/><text x="60.7762%" y="783.50">sk..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,422 samples, 3.19%)</title><rect x="60.1426%" y="805" width="3.1917%" height="15" fill="rgb(245,30,21)" fg:x="215231" fg:w="11422"/><text x="60.3926%" y="815.50">sk-..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.01%)</title><rect x="63.3342%" y="805" width="0.0145%" height="15" fill="rgb(242,148,29)" fg:x="226653" fg:w="52"/><text x="63.5842%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (75 samples, 0.02%)</title><rect x="63.4524%" y="789" width="0.0210%" height="15" fill="rgb(244,153,54)" fg:x="227076" fg:w="75"/><text x="63.7024%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (86 samples, 0.02%)</title><rect x="63.4751%" y="789" width="0.0240%" height="15" fill="rgb(252,87,22)" fg:x="227157" fg:w="86"/><text x="63.7251%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (63 samples, 0.02%)</title><rect x="63.4815%" y="773" width="0.0176%" height="15" fill="rgb(210,51,29)" fg:x="227180" fg:w="63"/><text x="63.7315%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (540 samples, 0.15%)</title><rect x="63.3594%" y="805" width="0.1509%" height="15" fill="rgb(242,136,47)" fg:x="226743" fg:w="540"/><text x="63.6094%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12,915 samples, 3.61%)</title><rect x="59.9115%" y="821" width="3.6089%" height="15" fill="rgb(238,68,4)" fg:x="214404" fg:w="12915"/><text x="60.1615%" y="831.50">sk-g..</text></g><g><title>sk-gen`core::slice::sort::shared::smallsort::insertion_sort_shift_left (36 samples, 0.01%)</title><rect x="63.5103%" y="805" width="0.0101%" height="15" fill="rgb(242,161,30)" fg:x="227283" fg:w="36"/><text x="63.7603%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (237 samples, 0.07%)</title><rect x="63.5203%" y="821" width="0.0662%" height="15" fill="rgb(218,58,44)" fg:x="227319" fg:w="237"/><text x="63.7703%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (212 samples, 0.06%)</title><rect x="63.5273%" y="805" width="0.0592%" height="15" fill="rgb(252,125,32)" fg:x="227344" fg:w="212"/><text x="63.7773%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (119 samples, 0.03%)</title><rect x="63.5533%" y="789" width="0.0333%" height="15" fill="rgb(219,178,0)" fg:x="227437" fg:w="119"/><text x="63.8033%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (88 samples, 0.02%)</title><rect x="63.5620%" y="773" width="0.0246%" height="15" fill="rgb(213,152,7)" fg:x="227468" fg:w="88"/><text x="63.8120%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,225 samples, 3.97%)</title><rect x="59.6365%" y="853" width="3.9749%" height="15" fill="rgb(249,109,34)" fg:x="213420" fg:w="14225"/><text x="59.8865%" y="863.50">sk-g..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (13,466 samples, 3.76%)</title><rect x="59.8486%" y="837" width="3.7628%" height="15" fill="rgb(232,96,21)" fg:x="214179" fg:w="13466"/><text x="60.0986%" y="847.50">sk-g..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14,434 samples, 4.03%)</title><rect x="59.5803%" y="869" width="4.0333%" height="15" fill="rgb(228,27,39)" fg:x="213219" fg:w="14434"/><text x="59.8303%" y="879.50">sk-g..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (79 samples, 0.02%)</title><rect x="63.7081%" y="853" width="0.0221%" height="15" fill="rgb(211,182,52)" fg:x="227991" fg:w="79"/><text x="63.9581%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (385 samples, 0.11%)</title><rect x="63.6327%" y="869" width="0.1076%" height="15" fill="rgb(234,178,38)" fg:x="227721" fg:w="385"/><text x="63.8827%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15,867 samples, 4.43%)</title><rect x="59.3121%" y="885" width="4.4338%" height="15" fill="rgb(221,111,3)" fg:x="212259" fg:w="15867"/><text x="59.5621%" y="895.50">sk-ge..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (101 samples, 0.03%)</title><rect x="63.7459%" y="885" width="0.0282%" height="15" fill="rgb(228,175,21)" fg:x="228126" fg:w="101"/><text x="63.9959%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (84 samples, 0.02%)</title><rect x="63.7506%" y="869" width="0.0235%" height="15" fill="rgb(228,174,43)" fg:x="228143" fg:w="84"/><text x="64.0006%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (52 samples, 0.01%)</title><rect x="63.7595%" y="853" width="0.0145%" height="15" fill="rgb(211,191,0)" fg:x="228175" fg:w="52"/><text x="64.0095%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (45 samples, 0.01%)</title><rect x="63.7615%" y="837" width="0.0126%" height="15" fill="rgb(253,117,3)" fg:x="228182" fg:w="45"/><text x="64.0115%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (123 samples, 0.03%)</title><rect x="63.8389%" y="789" width="0.0344%" height="15" fill="rgb(241,127,19)" fg:x="228459" fg:w="123"/><text x="64.0889%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (111 samples, 0.03%)</title><rect x="63.8423%" y="773" width="0.0310%" height="15" fill="rgb(218,103,12)" fg:x="228471" fg:w="111"/><text x="64.0923%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (81 samples, 0.02%)</title><rect x="63.8506%" y="757" width="0.0226%" height="15" fill="rgb(236,214,43)" fg:x="228501" fg:w="81"/><text x="64.1006%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (67 samples, 0.02%)</title><rect x="63.8545%" y="741" width="0.0187%" height="15" fill="rgb(244,144,19)" fg:x="228515" fg:w="67"/><text x="64.1045%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.01%)</title><rect x="63.8867%" y="773" width="0.0106%" height="15" fill="rgb(246,188,10)" fg:x="228630" fg:w="38"/><text x="64.1367%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (114 samples, 0.03%)</title><rect x="63.8973%" y="773" width="0.0319%" height="15" fill="rgb(212,193,33)" fg:x="228668" fg:w="114"/><text x="64.1473%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (103 samples, 0.03%)</title><rect x="63.9004%" y="757" width="0.0288%" height="15" fill="rgb(241,51,29)" fg:x="228679" fg:w="103"/><text x="64.1504%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (63 samples, 0.02%)</title><rect x="63.9116%" y="741" width="0.0176%" height="15" fill="rgb(211,58,19)" fg:x="228719" fg:w="63"/><text x="64.1616%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (36 samples, 0.01%)</title><rect x="63.9191%" y="725" width="0.0101%" height="15" fill="rgb(229,111,26)" fg:x="228746" fg:w="36"/><text x="64.1691%" y="735.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (395 samples, 0.11%)</title><rect x="63.8207%" y="805" width="0.1104%" height="15" fill="rgb(213,115,40)" fg:x="228394" fg:w="395"/><text x="64.0707%" y="815.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (196 samples, 0.05%)</title><rect x="63.8763%" y="789" width="0.0548%" height="15" fill="rgb(209,56,44)" fg:x="228593" fg:w="196"/><text x="64.1263%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (445 samples, 0.12%)</title><rect x="63.8076%" y="821" width="0.1243%" height="15" fill="rgb(230,108,32)" fg:x="228347" fg:w="445"/><text x="64.0576%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (97 samples, 0.03%)</title><rect x="63.9384%" y="821" width="0.0271%" height="15" fill="rgb(216,165,31)" fg:x="228815" fg:w="97"/><text x="64.1884%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (643 samples, 0.18%)</title><rect x="63.7883%" y="837" width="0.1797%" height="15" fill="rgb(218,122,21)" fg:x="228278" fg:w="643"/><text x="64.0383%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (697 samples, 0.19%)</title><rect x="63.7741%" y="885" width="0.1948%" height="15" fill="rgb(223,224,47)" fg:x="228227" fg:w="697"/><text x="64.0241%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (669 samples, 0.19%)</title><rect x="63.7819%" y="869" width="0.1869%" height="15" fill="rgb(238,102,44)" fg:x="228255" fg:w="669"/><text x="64.0319%" y="879.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (656 samples, 0.18%)</title><rect x="63.7855%" y="853" width="0.1833%" height="15" fill="rgb(236,46,40)" fg:x="228268" fg:w="656"/><text x="64.0355%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,921 samples, 5.01%)</title><rect x="58.9768%" y="917" width="5.0077%" height="15" fill="rgb(247,202,50)" fg:x="211059" fg:w="17921"/><text x="59.2268%" y="927.50">sk-gen..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (16,951 samples, 4.74%)</title><rect x="59.2478%" y="901" width="4.7367%" height="15" fill="rgb(209,99,20)" fg:x="212029" fg:w="16951"/><text x="59.4978%" y="911.50">sk-gen..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18,202 samples, 5.09%)</title><rect x="58.9066%" y="933" width="5.0862%" height="15" fill="rgb(252,27,34)" fg:x="210808" fg:w="18202"/><text x="59.1566%" y="943.50">sk-gen..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.01%)</title><rect x="63.9929%" y="933" width="0.0129%" height="15" fill="rgb(215,206,23)" fg:x="229010" fg:w="46"/><text x="64.2429%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (83 samples, 0.02%)</title><rect x="64.1044%" y="917" width="0.0232%" height="15" fill="rgb(212,135,36)" fg:x="229409" fg:w="83"/><text x="64.3544%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (44 samples, 0.01%)</title><rect x="64.1153%" y="901" width="0.0123%" height="15" fill="rgb(240,189,1)" fg:x="229448" fg:w="44"/><text x="64.3653%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (433 samples, 0.12%)</title><rect x="64.0144%" y="933" width="0.1210%" height="15" fill="rgb(242,56,20)" fg:x="229087" fg:w="433"/><text x="64.2644%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19,214 samples, 5.37%)</title><rect x="58.7747%" y="949" width="5.3690%" height="15" fill="rgb(247,132,33)" fg:x="210336" fg:w="19214"/><text x="59.0247%" y="959.50">sk-gen`..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (96 samples, 0.03%)</title><rect x="64.1438%" y="949" width="0.0268%" height="15" fill="rgb(208,149,11)" fg:x="229550" fg:w="96"/><text x="64.3938%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (72 samples, 0.02%)</title><rect x="64.1505%" y="933" width="0.0201%" height="15" fill="rgb(211,33,11)" fg:x="229574" fg:w="72"/><text x="64.4005%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (44 samples, 0.01%)</title><rect x="64.1583%" y="917" width="0.0123%" height="15" fill="rgb(221,29,38)" fg:x="229602" fg:w="44"/><text x="64.4083%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (36 samples, 0.01%)</title><rect x="64.1605%" y="901" width="0.0101%" height="15" fill="rgb(206,182,49)" fg:x="229610" fg:w="36"/><text x="64.4105%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,919 samples, 5.57%)</title><rect x="58.6183%" y="981" width="5.5660%" height="15" fill="rgb(216,140,1)" fg:x="209776" fg:w="19919"/><text x="58.8683%" y="991.50">sk-gen`..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (19,496 samples, 5.45%)</title><rect x="58.7365%" y="965" width="5.4478%" height="15" fill="rgb(232,57,40)" fg:x="210199" fg:w="19496"/><text x="58.9865%" y="975.50">sk-gen`..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,043 samples, 5.60%)</title><rect x="58.5853%" y="997" width="5.6007%" height="15" fill="rgb(224,186,18)" fg:x="209658" fg:w="20043"/><text x="58.8353%" y="1007.50">sk-gen`..</text></g><g><title>libsystem_malloc.dylib`free_tiny (72 samples, 0.02%)</title><rect x="64.2318%" y="981" width="0.0201%" height="15" fill="rgb(215,121,11)" fg:x="229865" fg:w="72"/><text x="64.4818%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (38 samples, 0.01%)</title><rect x="64.2413%" y="965" width="0.0106%" height="15" fill="rgb(245,147,10)" fg:x="229899" fg:w="38"/><text x="64.4913%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::append::_&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (225 samples, 0.06%)</title><rect x="64.1943%" y="997" width="0.0629%" height="15" fill="rgb(238,153,13)" fg:x="229731" fg:w="225"/><text x="64.4443%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20,547 samples, 5.74%)</title><rect x="58.5193%" y="1013" width="5.7415%" height="15" fill="rgb(233,108,0)" fg:x="209422" fg:w="20547"/><text x="58.7693%" y="1023.50">sk-gen`..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20,597 samples, 5.76%)</title><rect x="58.5093%" y="1045" width="5.7555%" height="15" fill="rgb(212,157,17)" fg:x="209386" fg:w="20597"/><text x="58.7593%" y="1055.50">sk-gen`..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (20,583 samples, 5.75%)</title><rect x="58.5132%" y="1029" width="5.7516%" height="15" fill="rgb(225,213,38)" fg:x="209400" fg:w="20583"/><text x="58.7632%" y="1039.50">sk-gen`..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,607 samples, 5.76%)</title><rect x="58.5068%" y="1109" width="5.7583%" height="15" fill="rgb(248,16,11)" fg:x="209377" fg:w="20607"/><text x="58.7568%" y="1119.50">sk-gen`..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20,605 samples, 5.76%)</title><rect x="58.5073%" y="1093" width="5.7577%" height="15" fill="rgb(241,33,4)" fg:x="209379" fg:w="20605"/><text x="58.7573%" y="1103.50">sk-gen`..</text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (20,604 samples, 5.76%)</title><rect x="58.5076%" y="1077" width="5.7574%" height="15" fill="rgb(222,26,43)" fg:x="209380" fg:w="20604"/><text x="58.7576%" y="1087.50">sk-gen`..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,602 samples, 5.76%)</title><rect x="58.5082%" y="1061" width="5.7569%" height="15" fill="rgb(243,29,36)" fg:x="209382" fg:w="20602"/><text x="58.7582%" y="1071.50">sk-gen`..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.01%)</title><rect x="64.3234%" y="1029" width="0.0145%" height="15" fill="rgb(241,9,27)" fg:x="230193" fg:w="52"/><text x="64.5734%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (64 samples, 0.02%)</title><rect x="64.3556%" y="1013" width="0.0179%" height="15" fill="rgb(205,117,26)" fg:x="230308" fg:w="64"/><text x="64.6056%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.01%)</title><rect x="64.3978%" y="997" width="0.0145%" height="15" fill="rgb(209,80,39)" fg:x="230459" fg:w="52"/><text x="64.6478%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (43 samples, 0.01%)</title><rect x="64.4257%" y="981" width="0.0120%" height="15" fill="rgb(239,155,6)" fg:x="230559" fg:w="43"/><text x="64.6757%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (46 samples, 0.01%)</title><rect x="64.4618%" y="965" width="0.0129%" height="15" fill="rgb(212,104,12)" fg:x="230688" fg:w="46"/><text x="64.7118%" y="975.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (126 samples, 0.04%)</title><rect x="64.4802%" y="965" width="0.0352%" height="15" fill="rgb(234,204,3)" fg:x="230754" fg:w="126"/><text x="64.7302%" y="975.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (223 samples, 0.06%)</title><rect x="64.4539%" y="981" width="0.0623%" height="15" fill="rgb(251,218,7)" fg:x="230660" fg:w="223"/><text x="64.7039%" y="991.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (345 samples, 0.10%)</title><rect x="64.4207%" y="997" width="0.0964%" height="15" fill="rgb(221,81,32)" fg:x="230541" fg:w="345"/><text x="64.6707%" y="1007.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (461 samples, 0.13%)</title><rect x="64.3916%" y="1013" width="0.1288%" height="15" fill="rgb(214,152,26)" fg:x="230437" fg:w="461"/><text x="64.6416%" y="1023.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (617 samples, 0.17%)</title><rect x="64.3483%" y="1029" width="0.1724%" height="15" fill="rgb(223,22,3)" fg:x="230282" fg:w="617"/><text x="64.5983%" y="1039.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (755 samples, 0.21%)</title><rect x="64.3134%" y="1045" width="0.2110%" height="15" fill="rgb(207,174,7)" fg:x="230157" fg:w="755"/><text x="64.5634%" y="1055.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (846 samples, 0.24%)</title><rect x="64.2899%" y="1061" width="0.2364%" height="15" fill="rgb(224,19,52)" fg:x="230073" fg:w="846"/><text x="64.5399%" y="1071.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (919 samples, 0.26%)</title><rect x="64.2723%" y="1077" width="0.2568%" height="15" fill="rgb(228,24,14)" fg:x="230010" fg:w="919"/><text x="64.5223%" y="1087.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (946 samples, 0.26%)</title><rect x="64.2662%" y="1093" width="0.2643%" height="15" fill="rgb(230,153,43)" fg:x="229988" fg:w="946"/><text x="64.5162%" y="1103.50"></text></g><g><title>sk-gen`alloc::rc::Rc&lt;T,A&gt;::drop_slow (961 samples, 0.27%)</title><rect x="64.2650%" y="1109" width="0.2685%" height="15" fill="rgb(231,106,12)" fg:x="229984" fg:w="961"/><text x="64.5150%" y="1119.50"></text></g><g><title>sk-gen`jaq_json::_&lt;impl core::convert::From&lt;jaq_json::Val&gt; for serde_json::value::Value&gt;::from (21,570 samples, 6.03%)</title><rect x="58.5065%" y="1125" width="6.0274%" height="15" fill="rgb(215,92,2)" fg:x="209376" fg:w="21570"/><text x="58.7565%" y="1135.50">sk-gen`j..</text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::lex (60 samples, 0.02%)</title><rect x="64.5383%" y="1093" width="0.0168%" height="15" fill="rgb(249,143,25)" fg:x="230962" fg:w="60"/><text x="64.7883%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 0.02%)</title><rect x="64.5383%" y="1077" width="0.0168%" height="15" fill="rgb(252,7,35)" fg:x="230962" fg:w="60"/><text x="64.7883%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (50 samples, 0.01%)</title><rect x="64.5411%" y="1061" width="0.0140%" height="15" fill="rgb(216,69,40)" fg:x="230972" fg:w="50"/><text x="64.7911%" y="1071.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (49 samples, 0.01%)</title><rect x="64.5551%" y="1029" width="0.0137%" height="15" fill="rgb(240,36,33)" fg:x="231022" fg:w="49"/><text x="64.8051%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (40 samples, 0.01%)</title><rect x="64.5576%" y="1013" width="0.0112%" height="15" fill="rgb(231,128,14)" fg:x="231031" fg:w="40"/><text x="64.8076%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.01%)</title><rect x="64.5551%" y="1045" width="0.0140%" height="15" fill="rgb(245,143,14)" fg:x="231022" fg:w="50"/><text x="64.8051%" y="1055.50"></text></g><g><title>sk-gen`jaq_json::defs (127 samples, 0.04%)</title><rect x="64.5341%" y="1125" width="0.0355%" height="15" fill="rgb(222,130,28)" fg:x="230947" fg:w="127"/><text x="64.7841%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::parse (123 samples, 0.03%)</title><rect x="64.5352%" y="1109" width="0.0344%" height="15" fill="rgb(212,10,48)" fg:x="230951" fg:w="123"/><text x="64.7852%" y="1119.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::parse (52 samples, 0.01%)</title><rect x="64.5551%" y="1093" width="0.0145%" height="15" fill="rgb(254,118,45)" fg:x="231022" fg:w="52"/><text x="64.8051%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::defs (52 samples, 0.01%)</title><rect x="64.5551%" y="1077" width="0.0145%" height="15" fill="rgb(228,6,45)" fg:x="231022" fg:w="52"/><text x="64.8051%" y="1087.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (52 samples, 0.01%)</title><rect x="64.5551%" y="1061" width="0.0145%" height="15" fill="rgb(241,18,35)" fg:x="231022" fg:w="52"/><text x="64.8051%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;jaq_core::load::lex::Token&lt;&amp;str&gt;&gt; (58 samples, 0.02%)</title><rect x="64.5763%" y="1109" width="0.0162%" height="15" fill="rgb(227,214,53)" fg:x="231098" fg:w="58"/><text x="64.8263%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (38 samples, 0.01%)</title><rect x="64.6467%" y="965" width="0.0106%" height="15" fill="rgb(224,107,51)" fg:x="231350" fg:w="38"/><text x="64.8967%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.01%)</title><rect x="64.6467%" y="949" width="0.0106%" height="15" fill="rgb(248,60,28)" fg:x="231350" fg:w="38"/><text x="64.8967%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.01%)</title><rect x="64.6470%" y="933" width="0.0103%" height="15" fill="rgb(249,101,23)" fg:x="231351" fg:w="37"/><text x="64.8970%" y="943.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (41 samples, 0.01%)</title><rect x="64.6462%" y="1029" width="0.0115%" height="15" fill="rgb(228,51,19)" fg:x="231348" fg:w="41"/><text x="64.8962%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (41 samples, 0.01%)</title><rect x="64.6462%" y="1013" width="0.0115%" height="15" fill="rgb(213,20,6)" fg:x="231348" fg:w="41"/><text x="64.8962%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (41 samples, 0.01%)</title><rect x="64.6462%" y="997" width="0.0115%" height="15" fill="rgb(212,124,10)" fg:x="231348" fg:w="41"/><text x="64.8962%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (41 samples, 0.01%)</title><rect x="64.6462%" y="981" width="0.0115%" height="15" fill="rgb(248,3,40)" fg:x="231348" fg:w="41"/><text x="64.8962%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (151 samples, 0.04%)</title><rect x="64.6409%" y="1045" width="0.0422%" height="15" fill="rgb(223,178,23)" fg:x="231329" fg:w="151"/><text x="64.8909%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (89 samples, 0.02%)</title><rect x="64.6582%" y="1029" width="0.0249%" height="15" fill="rgb(240,132,45)" fg:x="231391" fg:w="89"/><text x="64.9082%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::token (342 samples, 0.10%)</title><rect x="64.6015%" y="1077" width="0.0956%" height="15" fill="rgb(245,164,36)" fg:x="231188" fg:w="342"/><text x="64.8515%" y="1087.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::with_consumed (215 samples, 0.06%)</title><rect x="64.6370%" y="1061" width="0.0601%" height="15" fill="rgb(231,188,53)" fg:x="231315" fg:w="215"/><text x="64.8870%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (375 samples, 0.10%)</title><rect x="64.5925%" y="1093" width="0.1048%" height="15" fill="rgb(237,198,39)" fg:x="231156" fg:w="375"/><text x="64.8425%" y="1103.50"></text></g><g><title>sk-gen`jaq_core::load::lex::Lexer&lt;&amp;str&gt;::lex (385 samples, 0.11%)</title><rect x="64.5925%" y="1109" width="0.1076%" height="15" fill="rgb(223,120,35)" fg:x="231156" fg:w="385"/><text x="64.8425%" y="1119.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (38 samples, 0.01%)</title><rect x="64.7225%" y="1029" width="0.0106%" height="15" fill="rgb(253,107,49)" fg:x="231621" fg:w="38"/><text x="64.9725%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom::_{{closure}} (40 samples, 0.01%)</title><rect x="64.7462%" y="1013" width="0.0112%" height="15" fill="rgb(216,44,31)" fg:x="231706" fg:w="40"/><text x="64.9962%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (40 samples, 0.01%)</title><rect x="64.7462%" y="997" width="0.0112%" height="15" fill="rgb(253,87,21)" fg:x="231706" fg:w="40"/><text x="64.9962%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::maybe (81 samples, 0.02%)</title><rect x="64.7655%" y="1013" width="0.0226%" height="15" fill="rgb(226,18,2)" fg:x="231775" fg:w="81"/><text x="65.0155%" y="1023.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (67 samples, 0.02%)</title><rect x="64.7694%" y="997" width="0.0187%" height="15" fill="rgb(216,8,46)" fg:x="231789" fg:w="67"/><text x="65.0194%" y="1007.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::atom (229 samples, 0.06%)</title><rect x="64.7381%" y="1029" width="0.0640%" height="15" fill="rgb(226,140,39)" fg:x="231677" fg:w="229"/><text x="64.9881%" y="1039.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::term_with_comma (360 samples, 0.10%)</title><rect x="64.7180%" y="1045" width="0.1006%" height="15" fill="rgb(221,194,54)" fg:x="231605" fg:w="360"/><text x="64.9680%" y="1055.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::def_tail (412 samples, 0.12%)</title><rect x="64.7043%" y="1061" width="0.1151%" height="15" fill="rgb(213,92,11)" fg:x="231556" fg:w="412"/><text x="64.9543%" y="1071.50"></text></g><g><title>sk-gen`jaq_std::defs (895 samples, 0.25%)</title><rect x="64.5702%" y="1125" width="0.2501%" height="15" fill="rgb(229,162,46)" fg:x="231076" fg:w="895"/><text x="64.8202%" y="1135.50"></text></g><g><title>sk-gen`jaq_core::load::parse::Parser::defs (430 samples, 0.12%)</title><rect x="64.7001%" y="1109" width="0.1202%" height="15" fill="rgb(214,111,36)" fg:x="231541" fg:w="430"/><text x="64.9501%" y="1119.50"></text></g><g><title>sk-gen`core::iter::adapters::try_process (430 samples, 0.12%)</title><rect x="64.7001%" y="1093" width="0.1202%" height="15" fill="rgb(207,6,21)" fg:x="231541" fg:w="430"/><text x="64.9501%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (430 samples, 0.12%)</title><rect x="64.7001%" y="1077" width="0.1202%" height="15" fill="rgb(213,127,38)" fg:x="231541" fg:w="430"/><text x="64.9501%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (82 samples, 0.02%)</title><rect x="64.8264%" y="1077" width="0.0229%" height="15" fill="rgb(238,118,32)" fg:x="231993" fg:w="82"/><text x="65.0764%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (36 samples, 0.01%)</title><rect x="64.8655%" y="1045" width="0.0101%" height="15" fill="rgb(240,139,39)" fg:x="232133" fg:w="36"/><text x="65.1155%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (83 samples, 0.02%)</title><rect x="64.8803%" y="1045" width="0.0232%" height="15" fill="rgb(235,10,37)" fg:x="232186" fg:w="83"/><text x="65.1303%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (40 samples, 0.01%)</title><rect x="64.9072%" y="1045" width="0.0112%" height="15" fill="rgb(249,171,38)" fg:x="232282" fg:w="40"/><text x="65.1572%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (145 samples, 0.04%)</title><rect x="65.1475%" y="1029" width="0.0405%" height="15" fill="rgb(242,144,32)" fg:x="233142" fg:w="145"/><text x="65.3975%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.01%)</title><rect x="65.1880%" y="1029" width="0.0120%" height="15" fill="rgb(217,117,21)" fg:x="233287" fg:w="43"/><text x="65.4380%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (130 samples, 0.04%)</title><rect x="65.2000%" y="1029" width="0.0363%" height="15" fill="rgb(249,87,1)" fg:x="233330" fg:w="130"/><text x="65.4500%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (93 samples, 0.03%)</title><rect x="65.2394%" y="1029" width="0.0260%" height="15" fill="rgb(248,196,48)" fg:x="233471" fg:w="93"/><text x="65.4894%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.02%)</title><rect x="65.2486%" y="1013" width="0.0168%" height="15" fill="rgb(251,206,33)" fg:x="233504" fg:w="60"/><text x="65.4986%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (68 samples, 0.02%)</title><rect x="65.2674%" y="1029" width="0.0190%" height="15" fill="rgb(232,141,28)" fg:x="233571" fg:w="68"/><text x="65.5174%" y="1039.50"></text></g><g><title>sk-gen`kube_core::metadata::_::_&lt;impl serde::de::Deserialize for kube_core::metadata::TypeMeta&gt;::deserialize (200 samples, 0.06%)</title><rect x="65.3171%" y="1013" width="0.0559%" height="15" fill="rgb(209,167,14)" fg:x="233749" fg:w="200"/><text x="65.5671%" y="1023.50"></text></g><g><title>sk-gen`serde::__private::de::flat_map_take_entry (47 samples, 0.01%)</title><rect x="65.3599%" y="997" width="0.0131%" height="15" fill="rgb(225,11,50)" fg:x="233902" fg:w="47"/><text x="65.6099%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::__private_visit_untagged_option (255 samples, 0.07%)</title><rect x="65.3054%" y="1029" width="0.0713%" height="15" fill="rgb(209,50,20)" fg:x="233707" fg:w="255"/><text x="65.5554%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (51 samples, 0.01%)</title><rect x="65.4314%" y="981" width="0.0143%" height="15" fill="rgb(212,17,46)" fg:x="234158" fg:w="51"/><text x="65.6814%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 0.01%)</title><rect x="65.4521%" y="981" width="0.0101%" height="15" fill="rgb(216,101,39)" fg:x="234232" fg:w="36"/><text x="65.7021%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.01%)</title><rect x="65.4820%" y="965" width="0.0148%" height="15" fill="rgb(212,228,48)" fg:x="234339" fg:w="53"/><text x="65.7320%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="65.5650%" y="901" width="0.0115%" height="15" fill="rgb(250,6,50)" fg:x="234636" fg:w="41"/><text x="65.8150%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (65 samples, 0.02%)</title><rect x="65.5764%" y="901" width="0.0182%" height="15" fill="rgb(250,160,48)" fg:x="234677" fg:w="65"/><text x="65.8264%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (53 samples, 0.01%)</title><rect x="65.5946%" y="901" width="0.0148%" height="15" fill="rgb(244,216,33)" fg:x="234742" fg:w="53"/><text x="65.8446%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="65.5977%" y="885" width="0.0117%" height="15" fill="rgb(207,157,5)" fg:x="234753" fg:w="42"/><text x="65.8477%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (49 samples, 0.01%)</title><rect x="65.6094%" y="901" width="0.0137%" height="15" fill="rgb(228,199,8)" fg:x="234795" fg:w="49"/><text x="65.8594%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (238 samples, 0.07%)</title><rect x="65.5591%" y="917" width="0.0665%" height="15" fill="rgb(227,80,20)" fg:x="234615" fg:w="238"/><text x="65.8091%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (87 samples, 0.02%)</title><rect x="65.6410%" y="901" width="0.0243%" height="15" fill="rgb(222,9,33)" fg:x="234908" fg:w="87"/><text x="65.8910%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (140 samples, 0.04%)</title><rect x="65.6289%" y="917" width="0.0391%" height="15" fill="rgb(239,44,28)" fg:x="234865" fg:w="140"/><text x="65.8789%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (500 samples, 0.14%)</title><rect x="65.5292%" y="933" width="0.1397%" height="15" fill="rgb(249,187,43)" fg:x="234508" fg:w="500"/><text x="65.7792%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (541 samples, 0.15%)</title><rect x="65.5214%" y="949" width="0.1512%" height="15" fill="rgb(216,141,28)" fg:x="234480" fg:w="541"/><text x="65.7714%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.01%)</title><rect x="65.7502%" y="901" width="0.0140%" height="15" fill="rgb(230,154,53)" fg:x="235299" fg:w="50"/><text x="66.0002%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.02%)</title><rect x="65.7661%" y="901" width="0.0165%" height="15" fill="rgb(227,82,4)" fg:x="235356" fg:w="59"/><text x="66.0161%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (97 samples, 0.03%)</title><rect x="65.7826%" y="901" width="0.0271%" height="15" fill="rgb(220,107,16)" fg:x="235415" fg:w="97"/><text x="66.0326%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (53 samples, 0.01%)</title><rect x="65.7949%" y="885" width="0.0148%" height="15" fill="rgb(207,187,2)" fg:x="235459" fg:w="53"/><text x="66.0449%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (82 samples, 0.02%)</title><rect x="65.8097%" y="901" width="0.0229%" height="15" fill="rgb(210,162,52)" fg:x="235512" fg:w="82"/><text x="66.0597%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (60 samples, 0.02%)</title><rect x="65.8159%" y="885" width="0.0168%" height="15" fill="rgb(217,216,49)" fg:x="235534" fg:w="60"/><text x="66.0659%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (36 samples, 0.01%)</title><rect x="65.8983%" y="853" width="0.0101%" height="15" fill="rgb(218,146,49)" fg:x="235829" fg:w="36"/><text x="66.1483%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.01%)</title><rect x="65.9084%" y="853" width="0.0120%" height="15" fill="rgb(216,55,40)" fg:x="235865" fg:w="43"/><text x="66.1584%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (53 samples, 0.01%)</title><rect x="65.9525%" y="837" width="0.0148%" height="15" fill="rgb(208,196,21)" fg:x="236023" fg:w="53"/><text x="66.2025%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (145 samples, 0.04%)</title><rect x="65.9402%" y="853" width="0.0405%" height="15" fill="rgb(242,117,42)" fg:x="235979" fg:w="145"/><text x="66.1902%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (92 samples, 0.03%)</title><rect x="66.0042%" y="821" width="0.0257%" height="15" fill="rgb(210,11,23)" fg:x="236208" fg:w="92"/><text x="66.2542%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (78 samples, 0.02%)</title><rect x="66.0081%" y="805" width="0.0218%" height="15" fill="rgb(217,110,2)" fg:x="236222" fg:w="78"/><text x="66.2581%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (39 samples, 0.01%)</title><rect x="66.0190%" y="789" width="0.0109%" height="15" fill="rgb(229,77,54)" fg:x="236261" fg:w="39"/><text x="66.2690%" y="799.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (141 samples, 0.04%)</title><rect x="65.9925%" y="837" width="0.0394%" height="15" fill="rgb(218,53,16)" fg:x="236166" fg:w="141"/><text x="66.2425%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (179 samples, 0.05%)</title><rect x="65.9824%" y="853" width="0.0500%" height="15" fill="rgb(215,38,13)" fg:x="236130" fg:w="179"/><text x="66.2324%" y="863.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (539 samples, 0.15%)</title><rect x="65.8832%" y="869" width="0.1506%" height="15" fill="rgb(235,42,18)" fg:x="235775" fg:w="539"/><text x="66.1332%" y="879.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (608 samples, 0.17%)</title><rect x="65.8665%" y="885" width="0.1699%" height="15" fill="rgb(219,66,54)" fg:x="235715" fg:w="608"/><text x="66.1165%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (47 samples, 0.01%)</title><rect x="66.0364%" y="885" width="0.0131%" height="15" fill="rgb(222,205,4)" fg:x="236323" fg:w="47"/><text x="66.2864%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (38 samples, 0.01%)</title><rect x="66.0389%" y="869" width="0.0106%" height="15" fill="rgb(227,213,46)" fg:x="236332" fg:w="38"/><text x="66.2889%" y="879.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (775 samples, 0.22%)</title><rect x="65.8346%" y="901" width="0.2166%" height="15" fill="rgb(250,145,42)" fg:x="235601" fg:w="775"/><text x="66.0846%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (57 samples, 0.02%)</title><rect x="66.1409%" y="837" width="0.0159%" height="15" fill="rgb(219,15,2)" fg:x="236697" fg:w="57"/><text x="66.3909%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (262 samples, 0.07%)</title><rect x="66.1171%" y="869" width="0.0732%" height="15" fill="rgb(231,181,52)" fg:x="236612" fg:w="262"/><text x="66.3671%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (218 samples, 0.06%)</title><rect x="66.1294%" y="853" width="0.0609%" height="15" fill="rgb(235,1,42)" fg:x="236656" fg:w="218"/><text x="66.3794%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (120 samples, 0.03%)</title><rect x="66.1568%" y="837" width="0.0335%" height="15" fill="rgb(249,88,27)" fg:x="236754" fg:w="120"/><text x="66.4068%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (432 samples, 0.12%)</title><rect x="66.0777%" y="885" width="0.1207%" height="15" fill="rgb(235,145,16)" fg:x="236471" fg:w="432"/><text x="66.3277%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (515 samples, 0.14%)</title><rect x="66.0576%" y="901" width="0.1439%" height="15" fill="rgb(237,114,19)" fg:x="236399" fg:w="515"/><text x="66.3076%" y="911.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,697 samples, 0.47%)</title><rect x="65.7309%" y="917" width="0.4742%" height="15" fill="rgb(238,51,50)" fg:x="235230" fg:w="1697"/><text x="65.9809%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,798 samples, 0.50%)</title><rect x="65.7094%" y="933" width="0.5024%" height="15" fill="rgb(205,194,25)" fg:x="235153" fg:w="1798"/><text x="65.9594%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (76 samples, 0.02%)</title><rect x="66.2118%" y="933" width="0.0212%" height="15" fill="rgb(215,203,17)" fg:x="236951" fg:w="76"/><text x="66.4618%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (60 samples, 0.02%)</title><rect x="66.2163%" y="917" width="0.0168%" height="15" fill="rgb(233,112,49)" fg:x="236967" fg:w="60"/><text x="66.4663%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (112 samples, 0.03%)</title><rect x="66.3259%" y="885" width="0.0313%" height="15" fill="rgb(241,130,26)" fg:x="237359" fg:w="112"/><text x="66.5759%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (249 samples, 0.07%)</title><rect x="66.4072%" y="837" width="0.0696%" height="15" fill="rgb(252,223,19)" fg:x="237650" fg:w="249"/><text x="66.6572%" y="847.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (54 samples, 0.02%)</title><rect x="66.5106%" y="805" width="0.0151%" height="15" fill="rgb(211,95,25)" fg:x="238020" fg:w="54"/><text x="66.7606%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (93 samples, 0.03%)</title><rect x="66.4999%" y="821" width="0.0260%" height="15" fill="rgb(251,182,27)" fg:x="237982" fg:w="93"/><text x="66.7499%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (65 samples, 0.02%)</title><rect x="66.5379%" y="773" width="0.0182%" height="15" fill="rgb(238,24,4)" fg:x="238118" fg:w="65"/><text x="66.7879%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (57 samples, 0.02%)</title><rect x="66.5402%" y="757" width="0.0159%" height="15" fill="rgb(224,220,25)" fg:x="238126" fg:w="57"/><text x="66.7902%" y="767.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (106 samples, 0.03%)</title><rect x="66.5270%" y="821" width="0.0296%" height="15" fill="rgb(239,133,26)" fg:x="238079" fg:w="106"/><text x="66.7770%" y="831.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (91 samples, 0.03%)</title><rect x="66.5312%" y="805" width="0.0254%" height="15" fill="rgb(211,94,48)" fg:x="238094" fg:w="91"/><text x="66.7812%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (89 samples, 0.02%)</title><rect x="66.5318%" y="789" width="0.0249%" height="15" fill="rgb(239,87,6)" fg:x="238096" fg:w="89"/><text x="66.7818%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (276 samples, 0.08%)</title><rect x="66.4807%" y="837" width="0.0771%" height="15" fill="rgb(227,62,0)" fg:x="237913" fg:w="276"/><text x="66.7307%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (120 samples, 0.03%)</title><rect x="66.5868%" y="821" width="0.0335%" height="15" fill="rgb(211,226,4)" fg:x="238293" fg:w="120"/><text x="66.8368%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (205 samples, 0.06%)</title><rect x="66.6215%" y="821" width="0.0573%" height="15" fill="rgb(253,38,52)" fg:x="238417" fg:w="205"/><text x="66.8715%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (133 samples, 0.04%)</title><rect x="66.7090%" y="805" width="0.0372%" height="15" fill="rgb(229,126,40)" fg:x="238730" fg:w="133"/><text x="66.9590%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (52 samples, 0.01%)</title><rect x="66.7316%" y="789" width="0.0145%" height="15" fill="rgb(229,165,44)" fg:x="238811" fg:w="52"/><text x="66.9816%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.01%)</title><rect x="66.7321%" y="773" width="0.0140%" height="15" fill="rgb(247,95,47)" fg:x="238813" fg:w="50"/><text x="66.9821%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.02%)</title><rect x="66.7908%" y="773" width="0.0154%" height="15" fill="rgb(216,140,30)" fg:x="239023" fg:w="55"/><text x="67.0408%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (58 samples, 0.02%)</title><rect x="66.8137%" y="773" width="0.0162%" height="15" fill="rgb(246,214,8)" fg:x="239105" fg:w="58"/><text x="67.0637%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (99 samples, 0.03%)</title><rect x="66.8299%" y="773" width="0.0277%" height="15" fill="rgb(227,224,15)" fg:x="239163" fg:w="99"/><text x="67.0799%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (65 samples, 0.02%)</title><rect x="66.8394%" y="757" width="0.0182%" height="15" fill="rgb(233,175,4)" fg:x="239197" fg:w="65"/><text x="67.0894%" y="767.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (95 samples, 0.03%)</title><rect x="66.8576%" y="773" width="0.0265%" height="15" fill="rgb(221,66,45)" fg:x="239262" fg:w="95"/><text x="67.1076%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (71 samples, 0.02%)</title><rect x="66.8643%" y="757" width="0.0198%" height="15" fill="rgb(221,178,18)" fg:x="239286" fg:w="71"/><text x="67.1143%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 0.03%)</title><rect x="66.9101%" y="757" width="0.0274%" height="15" fill="rgb(213,81,29)" fg:x="239450" fg:w="98"/><text x="67.1601%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (194 samples, 0.05%)</title><rect x="66.9378%" y="757" width="0.0542%" height="15" fill="rgb(220,89,49)" fg:x="239549" fg:w="194"/><text x="67.1878%" y="767.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (170 samples, 0.05%)</title><rect x="66.9920%" y="757" width="0.0475%" height="15" fill="rgb(227,60,33)" fg:x="239743" fg:w="170"/><text x="67.2420%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (125 samples, 0.03%)</title><rect x="67.0046%" y="741" width="0.0349%" height="15" fill="rgb(205,113,12)" fg:x="239788" fg:w="125"/><text x="67.2546%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (45 samples, 0.01%)</title><rect x="67.0269%" y="725" width="0.0126%" height="15" fill="rgb(211,32,1)" fg:x="239868" fg:w="45"/><text x="67.2769%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (43 samples, 0.01%)</title><rect x="67.0275%" y="709" width="0.0120%" height="15" fill="rgb(246,2,12)" fg:x="239870" fg:w="43"/><text x="67.2775%" y="719.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (133 samples, 0.04%)</title><rect x="67.0395%" y="757" width="0.0372%" height="15" fill="rgb(243,37,27)" fg:x="239913" fg:w="133"/><text x="67.2895%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (95 samples, 0.03%)</title><rect x="67.0501%" y="741" width="0.0265%" height="15" fill="rgb(248,211,31)" fg:x="239951" fg:w="95"/><text x="67.3001%" y="751.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (702 samples, 0.20%)</title><rect x="66.8886%" y="773" width="0.1962%" height="15" fill="rgb(242,146,47)" fg:x="239373" fg:w="702"/><text x="67.1386%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.01%)</title><rect x="67.1155%" y="757" width="0.0101%" height="15" fill="rgb(206,70,20)" fg:x="240185" fg:w="36"/><text x="67.3655%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (36 samples, 0.01%)</title><rect x="67.1865%" y="725" width="0.0101%" height="15" fill="rgb(215,10,51)" fg:x="240439" fg:w="36"/><text x="67.4365%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (71 samples, 0.02%)</title><rect x="67.2111%" y="709" width="0.0198%" height="15" fill="rgb(243,178,53)" fg:x="240527" fg:w="71"/><text x="67.4611%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (273 samples, 0.08%)</title><rect x="67.1823%" y="741" width="0.0763%" height="15" fill="rgb(233,221,20)" fg:x="240424" fg:w="273"/><text x="67.4323%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (214 samples, 0.06%)</title><rect x="67.1988%" y="725" width="0.0598%" height="15" fill="rgb(218,95,35)" fg:x="240483" fg:w="214"/><text x="67.4488%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (97 samples, 0.03%)</title><rect x="67.2315%" y="709" width="0.0271%" height="15" fill="rgb(229,13,5)" fg:x="240600" fg:w="97"/><text x="67.4815%" y="719.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (498 samples, 0.14%)</title><rect x="67.1298%" y="757" width="0.1392%" height="15" fill="rgb(252,164,30)" fg:x="240236" fg:w="498"/><text x="67.3798%" y="767.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (661 samples, 0.18%)</title><rect x="67.0907%" y="773" width="0.1847%" height="15" fill="rgb(232,68,36)" fg:x="240096" fg:w="661"/><text x="67.3407%" y="783.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,864 samples, 0.52%)</title><rect x="66.7646%" y="789" width="0.5209%" height="15" fill="rgb(219,59,54)" fg:x="238929" fg:w="1864"/><text x="67.0146%" y="799.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (36 samples, 0.01%)</title><rect x="67.2754%" y="773" width="0.0101%" height="15" fill="rgb(250,92,33)" fg:x="240757" fg:w="36"/><text x="67.5254%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,962 samples, 0.55%)</title><rect x="66.7461%" y="805" width="0.5482%" height="15" fill="rgb(229,162,54)" fg:x="238863" fg:w="1962"/><text x="66.9961%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (40 samples, 0.01%)</title><rect x="67.3589%" y="741" width="0.0112%" height="15" fill="rgb(244,114,52)" fg:x="241056" fg:w="40"/><text x="67.6089%" y="751.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (123 samples, 0.03%)</title><rect x="67.3447%" y="757" width="0.0344%" height="15" fill="rgb(212,211,43)" fg:x="241005" fg:w="123"/><text x="67.5947%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (85 samples, 0.02%)</title><rect x="67.4039%" y="725" width="0.0238%" height="15" fill="rgb(226,147,8)" fg:x="241217" fg:w="85"/><text x="67.6539%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (64 samples, 0.02%)</title><rect x="67.4098%" y="709" width="0.0179%" height="15" fill="rgb(226,23,13)" fg:x="241238" fg:w="64"/><text x="67.6598%" y="719.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (136 samples, 0.04%)</title><rect x="67.3913%" y="741" width="0.0380%" height="15" fill="rgb(240,63,4)" fg:x="241172" fg:w="136"/><text x="67.6413%" y="751.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (176 samples, 0.05%)</title><rect x="67.3818%" y="757" width="0.0492%" height="15" fill="rgb(221,1,32)" fg:x="241138" fg:w="176"/><text x="67.6318%" y="767.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (427 samples, 0.12%)</title><rect x="67.3134%" y="773" width="0.1193%" height="15" fill="rgb(242,117,10)" fg:x="240893" fg:w="427"/><text x="67.5634%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (464 samples, 0.13%)</title><rect x="67.3064%" y="789" width="0.1297%" height="15" fill="rgb(249,172,44)" fg:x="240868" fg:w="464"/><text x="67.5564%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.03%)</title><rect x="67.4606%" y="757" width="0.0254%" height="15" fill="rgb(244,46,45)" fg:x="241420" fg:w="91"/><text x="67.7106%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.02%)</title><rect x="67.4645%" y="741" width="0.0215%" height="15" fill="rgb(206,43,17)" fg:x="241434" fg:w="77"/><text x="67.7145%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.01%)</title><rect x="67.4757%" y="725" width="0.0103%" height="15" fill="rgb(239,218,39)" fg:x="241474" fg:w="37"/><text x="67.7257%" y="735.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (149 samples, 0.04%)</title><rect x="67.4455%" y="789" width="0.0416%" height="15" fill="rgb(208,169,54)" fg:x="241366" fg:w="149"/><text x="67.6955%" y="799.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (137 samples, 0.04%)</title><rect x="67.4489%" y="773" width="0.0383%" height="15" fill="rgb(247,25,42)" fg:x="241378" fg:w="137"/><text x="67.6989%" y="783.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (692 samples, 0.19%)</title><rect x="67.2955%" y="805" width="0.1934%" height="15" fill="rgb(226,23,31)" fg:x="240829" fg:w="692"/><text x="67.5455%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (174 samples, 0.05%)</title><rect x="67.5084%" y="773" width="0.0486%" height="15" fill="rgb(247,16,28)" fg:x="241591" fg:w="174"/><text x="67.7584%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (116 samples, 0.03%)</title><rect x="67.5246%" y="757" width="0.0324%" height="15" fill="rgb(231,147,38)" fg:x="241649" fg:w="116"/><text x="67.7746%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (96 samples, 0.03%)</title><rect x="67.5302%" y="741" width="0.0268%" height="15" fill="rgb(253,81,48)" fg:x="241669" fg:w="96"/><text x="67.7802%" y="751.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (237 samples, 0.07%)</title><rect x="67.4911%" y="805" width="0.0662%" height="15" fill="rgb(249,222,43)" fg:x="241529" fg:w="237"/><text x="67.7411%" y="815.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (200 samples, 0.06%)</title><rect x="67.5014%" y="789" width="0.0559%" height="15" fill="rgb(221,3,27)" fg:x="241566" fg:w="200"/><text x="67.7514%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3,146 samples, 0.88%)</title><rect x="66.6788%" y="821" width="0.8791%" height="15" fill="rgb(228,180,5)" fg:x="238622" fg:w="3146"/><text x="66.9288%" y="831.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (206 samples, 0.06%)</title><rect x="67.5579%" y="821" width="0.0576%" height="15" fill="rgb(227,131,42)" fg:x="241768" fg:w="206"/><text x="67.8079%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (156 samples, 0.04%)</title><rect x="67.5718%" y="805" width="0.0436%" height="15" fill="rgb(212,3,39)" fg:x="241818" fg:w="156"/><text x="67.8218%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (42 samples, 0.01%)</title><rect x="67.6037%" y="789" width="0.0117%" height="15" fill="rgb(226,45,5)" fg:x="241932" fg:w="42"/><text x="67.8537%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (39 samples, 0.01%)</title><rect x="67.6045%" y="773" width="0.0109%" height="15" fill="rgb(215,167,45)" fg:x="241935" fg:w="39"/><text x="67.8545%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3,803 samples, 1.06%)</title><rect x="66.5678%" y="837" width="1.0627%" height="15" fill="rgb(250,218,53)" fg:x="238225" fg:w="3803"/><text x="66.8178%" y="847.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (43 samples, 0.01%)</title><rect x="67.6311%" y="837" width="0.0120%" height="15" fill="rgb(207,140,0)" fg:x="242030" fg:w="43"/><text x="67.8811%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (39 samples, 0.01%)</title><rect x="67.7700%" y="773" width="0.0109%" height="15" fill="rgb(238,133,51)" fg:x="242527" fg:w="39"/><text x="68.0200%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (113 samples, 0.03%)</title><rect x="67.7635%" y="805" width="0.0316%" height="15" fill="rgb(218,203,53)" fg:x="242504" fg:w="113"/><text x="68.0135%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (103 samples, 0.03%)</title><rect x="67.7663%" y="789" width="0.0288%" height="15" fill="rgb(226,184,25)" fg:x="242514" fg:w="103"/><text x="68.0163%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (51 samples, 0.01%)</title><rect x="67.7809%" y="773" width="0.0143%" height="15" fill="rgb(231,121,21)" fg:x="242566" fg:w="51"/><text x="68.0309%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (320 samples, 0.09%)</title><rect x="67.7241%" y="821" width="0.0894%" height="15" fill="rgb(251,14,34)" fg:x="242363" fg:w="320"/><text x="67.9741%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (64 samples, 0.02%)</title><rect x="67.7957%" y="805" width="0.0179%" height="15" fill="rgb(249,193,11)" fg:x="242619" fg:w="64"/><text x="68.0457%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (646 samples, 0.18%)</title><rect x="67.6434%" y="837" width="0.1805%" height="15" fill="rgb(220,172,37)" fg:x="242074" fg:w="646"/><text x="67.8934%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (37 samples, 0.01%)</title><rect x="67.8136%" y="821" width="0.0103%" height="15" fill="rgb(231,229,43)" fg:x="242683" fg:w="37"/><text x="68.0636%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (37 samples, 0.01%)</title><rect x="67.8239%" y="837" width="0.0103%" height="15" fill="rgb(250,161,5)" fg:x="242720" fg:w="37"/><text x="68.0739%" y="847.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,210 samples, 1.46%)</title><rect x="66.3787%" y="853" width="1.4558%" height="15" fill="rgb(218,225,18)" fg:x="237548" fg:w="5210"/><text x="66.6287%" y="863.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5,296 samples, 1.48%)</title><rect x="66.3683%" y="869" width="1.4799%" height="15" fill="rgb(245,45,42)" fg:x="237511" fg:w="5296"/><text x="66.6183%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (49 samples, 0.01%)</title><rect x="67.8345%" y="853" width="0.0137%" height="15" fill="rgb(211,115,1)" fg:x="242758" fg:w="49"/><text x="68.0845%" y="863.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5,440 samples, 1.52%)</title><rect x="66.3577%" y="885" width="1.5201%" height="15" fill="rgb(248,133,52)" fg:x="237473" fg:w="5440"/><text x="66.6077%" y="895.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (104 samples, 0.03%)</title><rect x="67.8488%" y="869" width="0.0291%" height="15" fill="rgb(238,100,21)" fg:x="242809" fg:w="104"/><text x="68.0988%" y="879.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (93 samples, 0.03%)</title><rect x="67.8518%" y="853" width="0.0260%" height="15" fill="rgb(247,144,11)" fg:x="242820" fg:w="93"/><text x="68.1018%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (88 samples, 0.02%)</title><rect x="67.8532%" y="837" width="0.0246%" height="15" fill="rgb(206,164,16)" fg:x="242825" fg:w="88"/><text x="68.1032%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (65 samples, 0.02%)</title><rect x="67.8597%" y="821" width="0.0182%" height="15" fill="rgb(222,34,3)" fg:x="242848" fg:w="65"/><text x="68.1097%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (49 samples, 0.01%)</title><rect x="67.8641%" y="805" width="0.0137%" height="15" fill="rgb(248,82,4)" fg:x="242864" fg:w="49"/><text x="68.1141%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (120 samples, 0.03%)</title><rect x="67.9055%" y="869" width="0.0335%" height="15" fill="rgb(228,81,46)" fg:x="243012" fg:w="120"/><text x="68.1555%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (132 samples, 0.04%)</title><rect x="67.9390%" y="869" width="0.0369%" height="15" fill="rgb(227,67,47)" fg:x="243132" fg:w="132"/><text x="68.1890%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (77 samples, 0.02%)</title><rect x="68.0011%" y="853" width="0.0215%" height="15" fill="rgb(215,93,53)" fg:x="243354" fg:w="77"/><text x="68.2511%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 0.01%)</title><rect x="68.1075%" y="773" width="0.0117%" height="15" fill="rgb(248,194,39)" fg:x="243735" fg:w="42"/><text x="68.3575%" y="783.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (138 samples, 0.04%)</title><rect x="68.0983%" y="789" width="0.0386%" height="15" fill="rgb(215,5,19)" fg:x="243702" fg:w="138"/><text x="68.3483%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.02%)</title><rect x="68.1620%" y="757" width="0.0226%" height="15" fill="rgb(226,215,51)" fg:x="243930" fg:w="81"/><text x="68.4120%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.02%)</title><rect x="68.1654%" y="741" width="0.0193%" height="15" fill="rgb(225,56,26)" fg:x="243942" fg:w="69"/><text x="68.4154%" y="751.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (135 samples, 0.04%)</title><rect x="68.1483%" y="773" width="0.0377%" height="15" fill="rgb(222,75,29)" fg:x="243881" fg:w="135"/><text x="68.3983%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (173 samples, 0.05%)</title><rect x="68.1385%" y="789" width="0.0483%" height="15" fill="rgb(236,139,6)" fg:x="243846" fg:w="173"/><text x="68.3885%" y="799.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (419 samples, 0.12%)</title><rect x="68.0715%" y="805" width="0.1171%" height="15" fill="rgb(223,137,36)" fg:x="243606" fg:w="419"/><text x="68.3215%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (492 samples, 0.14%)</title><rect x="68.0550%" y="821" width="0.1375%" height="15" fill="rgb(226,99,2)" fg:x="243547" fg:w="492"/><text x="68.3050%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (70 samples, 0.02%)</title><rect x="68.2238%" y="805" width="0.0196%" height="15" fill="rgb(206,133,23)" fg:x="244151" fg:w="70"/><text x="68.4738%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="68.2514%" y="789" width="0.0101%" height="15" fill="rgb(243,173,15)" fg:x="244250" fg:w="36"/><text x="68.5014%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (41 samples, 0.01%)</title><rect x="68.2690%" y="757" width="0.0115%" height="15" fill="rgb(228,69,28)" fg:x="244313" fg:w="41"/><text x="68.5190%" y="767.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (109 samples, 0.03%)</title><rect x="68.2629%" y="773" width="0.0305%" height="15" fill="rgb(212,51,22)" fg:x="244291" fg:w="109"/><text x="68.5129%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (46 samples, 0.01%)</title><rect x="68.2805%" y="757" width="0.0129%" height="15" fill="rgb(227,113,0)" fg:x="244354" fg:w="46"/><text x="68.5305%" y="767.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (114 samples, 0.03%)</title><rect x="68.2618%" y="789" width="0.0319%" height="15" fill="rgb(252,84,27)" fg:x="244287" fg:w="114"/><text x="68.5118%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (40 samples, 0.01%)</title><rect x="68.2945%" y="773" width="0.0112%" height="15" fill="rgb(223,145,39)" fg:x="244404" fg:w="40"/><text x="68.5445%" y="783.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (37 samples, 0.01%)</title><rect x="68.2953%" y="757" width="0.0103%" height="15" fill="rgb(239,219,30)" fg:x="244407" fg:w="37"/><text x="68.5453%" y="767.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (52 samples, 0.01%)</title><rect x="68.2936%" y="789" width="0.0145%" height="15" fill="rgb(224,196,39)" fg:x="244401" fg:w="52"/><text x="68.5436%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (258 samples, 0.07%)</title><rect x="68.2433%" y="805" width="0.0721%" height="15" fill="rgb(205,35,43)" fg:x="244221" fg:w="258"/><text x="68.4933%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (42 samples, 0.01%)</title><rect x="68.3154%" y="805" width="0.0117%" height="15" fill="rgb(228,201,21)" fg:x="244479" fg:w="42"/><text x="68.5654%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (458 samples, 0.13%)</title><rect x="68.2028%" y="821" width="0.1280%" height="15" fill="rgb(237,118,16)" fg:x="244076" fg:w="458"/><text x="68.4528%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (120 samples, 0.03%)</title><rect x="68.3755%" y="789" width="0.0335%" height="15" fill="rgb(241,17,19)" fg:x="244694" fg:w="120"/><text x="68.6255%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (97 samples, 0.03%)</title><rect x="68.3819%" y="773" width="0.0271%" height="15" fill="rgb(214,10,25)" fg:x="244717" fg:w="97"/><text x="68.6319%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.01%)</title><rect x="68.3956%" y="757" width="0.0134%" height="15" fill="rgb(238,37,29)" fg:x="244766" fg:w="48"/><text x="68.6456%" y="767.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (204 samples, 0.06%)</title><rect x="68.3573%" y="805" width="0.0570%" height="15" fill="rgb(253,83,25)" fg:x="244629" fg:w="204"/><text x="68.6073%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (286 samples, 0.08%)</title><rect x="68.3353%" y="821" width="0.0799%" height="15" fill="rgb(234,192,12)" fg:x="244550" fg:w="286"/><text x="68.5853%" y="831.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,396 samples, 0.39%)</title><rect x="68.0298%" y="837" width="0.3901%" height="15" fill="rgb(241,216,45)" fg:x="243457" fg:w="1396"/><text x="68.2798%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,431 samples, 0.40%)</title><rect x="68.0226%" y="853" width="0.3999%" height="15" fill="rgb(242,22,33)" fg:x="243431" fg:w="1431"/><text x="68.2726%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (101 samples, 0.03%)</title><rect x="68.4300%" y="821" width="0.0282%" height="15" fill="rgb(231,105,49)" fg:x="244889" fg:w="101"/><text x="68.6800%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (75 samples, 0.02%)</title><rect x="68.4372%" y="805" width="0.0210%" height="15" fill="rgb(218,204,15)" fg:x="244915" fg:w="75"/><text x="68.6872%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (56 samples, 0.02%)</title><rect x="68.4426%" y="789" width="0.0156%" height="15" fill="rgb(235,138,41)" fg:x="244934" fg:w="56"/><text x="68.6926%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,728 samples, 0.48%)</title><rect x="67.9759%" y="869" width="0.4829%" height="15" fill="rgb(246,0,9)" fg:x="243264" fg:w="1728"/><text x="68.2259%" y="879.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (121 samples, 0.03%)</title><rect x="68.4249%" y="853" width="0.0338%" height="15" fill="rgb(210,74,4)" fg:x="244871" fg:w="121"/><text x="68.6749%" y="863.50"></text></g><g><title>sk-gen`alloc::raw_vec::finish_grow (110 samples, 0.03%)</title><rect x="68.4280%" y="837" width="0.0307%" height="15" fill="rgb(250,60,41)" fg:x="244882" fg:w="110"/><text x="68.6780%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (158 samples, 0.04%)</title><rect x="68.4588%" y="869" width="0.0442%" height="15" fill="rgb(220,115,12)" fg:x="244992" fg:w="158"/><text x="68.7088%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (114 samples, 0.03%)</title><rect x="68.4711%" y="853" width="0.0319%" height="15" fill="rgb(237,100,13)" fg:x="245036" fg:w="114"/><text x="68.7211%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (37 samples, 0.01%)</title><rect x="68.4926%" y="837" width="0.0103%" height="15" fill="rgb(213,55,26)" fg:x="245113" fg:w="37"/><text x="68.7426%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2,263 samples, 0.63%)</title><rect x="67.8884%" y="885" width="0.6324%" height="15" fill="rgb(216,17,4)" fg:x="242951" fg:w="2263"/><text x="68.1384%" y="895.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (38 samples, 0.01%)</title><rect x="68.5208%" y="885" width="0.0106%" height="15" fill="rgb(220,153,47)" fg:x="245214" fg:w="38"/><text x="68.7708%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (36 samples, 0.01%)</title><rect x="68.6270%" y="821" width="0.0101%" height="15" fill="rgb(215,131,9)" fg:x="245594" fg:w="36"/><text x="68.8770%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (90 samples, 0.03%)</title><rect x="68.6180%" y="853" width="0.0251%" height="15" fill="rgb(233,46,42)" fg:x="245562" fg:w="90"/><text x="68.8680%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (76 samples, 0.02%)</title><rect x="68.6219%" y="837" width="0.0212%" height="15" fill="rgb(226,86,7)" fg:x="245576" fg:w="76"/><text x="68.8719%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (233 samples, 0.07%)</title><rect x="68.5904%" y="869" width="0.0651%" height="15" fill="rgb(239,226,21)" fg:x="245463" fg:w="233"/><text x="68.8404%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (43 samples, 0.01%)</title><rect x="68.6435%" y="853" width="0.0120%" height="15" fill="rgb(244,137,22)" fg:x="245653" fg:w="43"/><text x="68.8935%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (475 samples, 0.13%)</title><rect x="68.5320%" y="885" width="0.1327%" height="15" fill="rgb(211,139,35)" fg:x="245254" fg:w="475"/><text x="68.7820%" y="895.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,497 samples, 2.37%)</title><rect x="66.2999%" y="901" width="2.3743%" height="15" fill="rgb(214,62,50)" fg:x="237266" fg:w="8497"/><text x="66.5499%" y="911.50">sk..</text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (8,670 samples, 2.42%)</title><rect x="66.2638%" y="917" width="2.4227%" height="15" fill="rgb(212,113,44)" fg:x="237137" fg:w="8670"/><text x="66.5138%" y="927.50">sk..</text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (44 samples, 0.01%)</title><rect x="68.6742%" y="901" width="0.0123%" height="15" fill="rgb(226,150,43)" fg:x="245763" fg:w="44"/><text x="68.9242%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (50 samples, 0.01%)</title><rect x="68.6865%" y="917" width="0.0140%" height="15" fill="rgb(250,71,37)" fg:x="245807" fg:w="50"/><text x="68.9365%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (8,838 samples, 2.47%)</title><rect x="66.2353%" y="933" width="2.4696%" height="15" fill="rgb(219,76,19)" fg:x="237035" fg:w="8838"/><text x="66.4853%" y="943.50">sk..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (72 samples, 0.02%)</title><rect x="68.7963%" y="869" width="0.0201%" height="15" fill="rgb(250,39,11)" fg:x="246200" fg:w="72"/><text x="69.0463%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (278 samples, 0.08%)</title><rect x="68.7687%" y="901" width="0.0777%" height="15" fill="rgb(230,64,31)" fg:x="246101" fg:w="278"/><text x="69.0187%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (224 samples, 0.06%)</title><rect x="68.7837%" y="885" width="0.0626%" height="15" fill="rgb(208,222,23)" fg:x="246155" fg:w="224"/><text x="69.0337%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (106 samples, 0.03%)</title><rect x="68.8167%" y="869" width="0.0296%" height="15" fill="rgb(227,125,18)" fg:x="246273" fg:w="106"/><text x="69.0667%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (416 samples, 0.12%)</title><rect x="68.7360%" y="917" width="0.1162%" height="15" fill="rgb(234,210,9)" fg:x="245984" fg:w="416"/><text x="68.9860%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (506 samples, 0.14%)</title><rect x="68.7133%" y="933" width="0.1414%" height="15" fill="rgb(217,127,24)" fg:x="245903" fg:w="506"/><text x="68.9633%" y="943.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,389 samples, 3.18%)</title><rect x="65.6773%" y="949" width="3.1825%" height="15" fill="rgb(239,141,48)" fg:x="235038" fg:w="11389"/><text x="65.9273%" y="959.50">sk-..</text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (12,052 samples, 3.37%)</title><rect x="65.5063%" y="965" width="3.3677%" height="15" fill="rgb(227,109,8)" fg:x="234426" fg:w="12052"/><text x="65.7563%" y="975.50">sk-..</text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (126 samples, 0.04%)</title><rect x="68.8740%" y="965" width="0.0352%" height="15" fill="rgb(235,184,23)" fg:x="246478" fg:w="126"/><text x="69.1240%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (93 samples, 0.03%)</title><rect x="68.8832%" y="949" width="0.0260%" height="15" fill="rgb(227,226,48)" fg:x="246511" fg:w="93"/><text x="69.1332%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (12,322 samples, 3.44%)</title><rect x="65.4716%" y="981" width="3.4432%" height="15" fill="rgb(206,150,11)" fg:x="234302" fg:w="12322"/><text x="65.7216%" y="991.50">sk-..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.03%)</title><rect x="68.9900%" y="949" width="0.0263%" height="15" fill="rgb(254,2,33)" fg:x="246893" fg:w="94"/><text x="69.2400%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (80 samples, 0.02%)</title><rect x="68.9939%" y="933" width="0.0224%" height="15" fill="rgb(243,160,20)" fg:x="246907" fg:w="80"/><text x="69.2439%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (47 samples, 0.01%)</title><rect x="69.0031%" y="917" width="0.0131%" height="15" fill="rgb(218,208,30)" fg:x="246940" fg:w="47"/><text x="69.2531%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (246 samples, 0.07%)</title><rect x="68.9645%" y="965" width="0.0687%" height="15" fill="rgb(224,120,49)" fg:x="246802" fg:w="246"/><text x="69.2145%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (60 samples, 0.02%)</title><rect x="69.0165%" y="949" width="0.0168%" height="15" fill="rgb(246,12,2)" fg:x="246988" fg:w="60"/><text x="69.2665%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (419 samples, 0.12%)</title><rect x="68.9249%" y="981" width="0.1171%" height="15" fill="rgb(236,117,3)" fg:x="246660" fg:w="419"/><text x="69.1749%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,024 samples, 3.64%)</title><rect x="65.4113%" y="997" width="3.6393%" height="15" fill="rgb(216,128,52)" fg:x="234086" fg:w="13024"/><text x="65.6613%" y="1007.50">sk-g..</text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (13,109 samples, 3.66%)</title><rect x="65.3976%" y="1013" width="3.6631%" height="15" fill="rgb(246,145,19)" fg:x="234037" fg:w="13109"/><text x="65.6476%" y="1023.50">sk-g..</text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (36 samples, 0.01%)</title><rect x="69.0506%" y="997" width="0.0101%" height="15" fill="rgb(222,11,46)" fg:x="247110" fg:w="36"/><text x="69.3006%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (77 samples, 0.02%)</title><rect x="69.0945%" y="981" width="0.0215%" height="15" fill="rgb(245,82,36)" fg:x="247267" fg:w="77"/><text x="69.3445%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.02%)</title><rect x="69.0973%" y="965" width="0.0187%" height="15" fill="rgb(250,73,51)" fg:x="247277" fg:w="67"/><text x="69.3473%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (136 samples, 0.04%)</title><rect x="69.0811%" y="997" width="0.0380%" height="15" fill="rgb(221,189,23)" fg:x="247219" fg:w="136"/><text x="69.3311%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (164 samples, 0.05%)</title><rect x="69.0741%" y="1013" width="0.0458%" height="15" fill="rgb(210,33,7)" fg:x="247194" fg:w="164"/><text x="69.3241%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,402 samples, 3.74%)</title><rect x="65.3766%" y="1029" width="3.7450%" height="15" fill="rgb(210,107,22)" fg:x="233962" fg:w="13402"/><text x="65.6266%" y="1039.50">sk-g..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (140 samples, 0.04%)</title><rect x="69.1532%" y="1013" width="0.0391%" height="15" fill="rgb(222,116,37)" fg:x="247477" fg:w="140"/><text x="69.4032%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="69.1934%" y="1013" width="0.0156%" height="15" fill="rgb(254,17,48)" fg:x="247621" fg:w="56"/><text x="69.4434%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (88 samples, 0.02%)</title><rect x="69.3502%" y="997" width="0.0246%" height="15" fill="rgb(224,36,32)" fg:x="248182" fg:w="88"/><text x="69.6002%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.01%)</title><rect x="69.3599%" y="981" width="0.0148%" height="15" fill="rgb(232,90,46)" fg:x="248217" fg:w="53"/><text x="69.6099%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (928 samples, 0.26%)</title><rect x="69.1216%" y="1029" width="0.2593%" height="15" fill="rgb(241,66,40)" fg:x="247364" fg:w="928"/><text x="69.3716%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (613 samples, 0.17%)</title><rect x="69.2096%" y="1013" width="0.1713%" height="15" fill="rgb(249,184,29)" fg:x="247679" fg:w="613"/><text x="69.4596%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.01%)</title><rect x="69.3831%" y="1013" width="0.0103%" height="15" fill="rgb(231,181,1)" fg:x="248300" fg:w="37"/><text x="69.6331%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (46 samples, 0.01%)</title><rect x="69.4027%" y="997" width="0.0129%" height="15" fill="rgb(224,94,2)" fg:x="248370" fg:w="46"/><text x="69.6527%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (95 samples, 0.03%)</title><rect x="69.5094%" y="981" width="0.0265%" height="15" fill="rgb(229,170,15)" fg:x="248752" fg:w="95"/><text x="69.7594%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (78 samples, 0.02%)</title><rect x="69.5642%" y="965" width="0.0218%" height="15" fill="rgb(240,127,35)" fg:x="248948" fg:w="78"/><text x="69.8142%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (58 samples, 0.02%)</title><rect x="69.5698%" y="949" width="0.0162%" height="15" fill="rgb(248,196,34)" fg:x="248968" fg:w="58"/><text x="69.8198%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (150 samples, 0.04%)</title><rect x="69.5516%" y="981" width="0.0419%" height="15" fill="rgb(236,137,7)" fg:x="248903" fg:w="150"/><text x="69.8016%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (48 samples, 0.01%)</title><rect x="69.7525%" y="869" width="0.0134%" height="15" fill="rgb(235,127,16)" fg:x="249622" fg:w="48"/><text x="70.0025%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (249 samples, 0.07%)</title><rect x="69.7344%" y="901" width="0.0696%" height="15" fill="rgb(250,192,54)" fg:x="249557" fg:w="249"/><text x="69.9844%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (217 samples, 0.06%)</title><rect x="69.7433%" y="885" width="0.0606%" height="15" fill="rgb(218,98,20)" fg:x="249589" fg:w="217"/><text x="69.9933%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (136 samples, 0.04%)</title><rect x="69.7659%" y="869" width="0.0380%" height="15" fill="rgb(230,176,47)" fg:x="249670" fg:w="136"/><text x="70.0159%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (399 samples, 0.11%)</title><rect x="69.7053%" y="917" width="0.1115%" height="15" fill="rgb(244,2,33)" fg:x="249453" fg:w="399"/><text x="69.9553%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (43 samples, 0.01%)</title><rect x="69.8048%" y="901" width="0.0120%" height="15" fill="rgb(231,100,17)" fg:x="249809" fg:w="43"/><text x="70.0548%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (494 samples, 0.14%)</title><rect x="69.6824%" y="933" width="0.1380%" height="15" fill="rgb(245,23,12)" fg:x="249371" fg:w="494"/><text x="69.9324%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (202 samples, 0.06%)</title><rect x="69.8392%" y="917" width="0.0564%" height="15" fill="rgb(249,55,22)" fg:x="249932" fg:w="202"/><text x="70.0892%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (134 samples, 0.04%)</title><rect x="69.8582%" y="901" width="0.0374%" height="15" fill="rgb(207,134,9)" fg:x="250000" fg:w="134"/><text x="70.1082%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (312 samples, 0.09%)</title><rect x="69.8204%" y="933" width="0.0872%" height="15" fill="rgb(218,134,0)" fg:x="249865" fg:w="312"/><text x="70.0704%" y="943.50"></text></g><g><title>sk-gen`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1,138 samples, 0.32%)</title><rect x="69.5935%" y="981" width="0.3180%" height="15" fill="rgb(213,212,33)" fg:x="249053" fg:w="1138"/><text x="69.8435%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1,118 samples, 0.31%)</title><rect x="69.5991%" y="965" width="0.3124%" height="15" fill="rgb(252,106,18)" fg:x="249073" fg:w="1118"/><text x="69.8491%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,029 samples, 0.29%)</title><rect x="69.6240%" y="949" width="0.2875%" height="15" fill="rgb(208,126,42)" fg:x="249162" fg:w="1029"/><text x="69.8740%" y="959.50"></text></g><g><title>sk-gen`&lt;&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (1,747 samples, 0.49%)</title><rect x="69.4250%" y="997" width="0.4882%" height="15" fill="rgb(246,175,29)" fg:x="248450" fg:w="1747"/><text x="69.6750%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1,983 samples, 0.55%)</title><rect x="69.3809%" y="1029" width="0.5541%" height="15" fill="rgb(215,13,50)" fg:x="248292" fg:w="1983"/><text x="69.6309%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,917 samples, 0.54%)</title><rect x="69.3993%" y="1013" width="0.5357%" height="15" fill="rgb(216,172,15)" fg:x="248358" fg:w="1917"/><text x="69.6493%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (58 samples, 0.02%)</title><rect x="69.9350%" y="1029" width="0.0162%" height="15" fill="rgb(212,103,13)" fg:x="250275" fg:w="58"/><text x="70.1850%" y="1039.50"></text></g><g><title>sk-gen`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45 samples, 0.01%)</title><rect x="69.9657%" y="1029" width="0.0126%" height="15" fill="rgb(231,171,36)" fg:x="250385" fg:w="45"/><text x="70.2157%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (78 samples, 0.02%)</title><rect x="69.9984%" y="1013" width="0.0218%" height="15" fill="rgb(250,123,20)" fg:x="250502" fg:w="78"/><text x="70.2484%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (281 samples, 0.08%)</title><rect x="70.0202%" y="1013" width="0.0785%" height="15" fill="rgb(212,53,50)" fg:x="250580" fg:w="281"/><text x="70.2702%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (232 samples, 0.06%)</title><rect x="70.1541%" y="997" width="0.0648%" height="15" fill="rgb(243,54,12)" fg:x="251059" fg:w="232"/><text x="70.4041%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (245 samples, 0.07%)</title><rect x="70.2189%" y="997" width="0.0685%" height="15" fill="rgb(234,101,34)" fg:x="251291" fg:w="245"/><text x="70.4689%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (91 samples, 0.03%)</title><rect x="70.2899%" y="997" width="0.0254%" height="15" fill="rgb(254,67,22)" fg:x="251545" fg:w="91"/><text x="70.5399%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.02%)</title><rect x="70.2999%" y="981" width="0.0154%" height="15" fill="rgb(250,35,47)" fg:x="251581" fg:w="55"/><text x="70.5499%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (41 samples, 0.01%)</title><rect x="70.3212%" y="997" width="0.0115%" height="15" fill="rgb(226,126,38)" fg:x="251657" fg:w="41"/><text x="70.5712%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (83 samples, 0.02%)</title><rect x="70.3326%" y="997" width="0.0232%" height="15" fill="rgb(216,138,53)" fg:x="251698" fg:w="83"/><text x="70.5826%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (63 samples, 0.02%)</title><rect x="70.4005%" y="981" width="0.0176%" height="15" fill="rgb(246,199,43)" fg:x="251941" fg:w="63"/><text x="70.6505%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (644 samples, 0.18%)</title><rect x="70.4181%" y="981" width="0.1800%" height="15" fill="rgb(232,125,11)" fg:x="252004" fg:w="644"/><text x="70.6681%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (60 samples, 0.02%)</title><rect x="70.6062%" y="981" width="0.0168%" height="15" fill="rgb(218,219,45)" fg:x="252677" fg:w="60"/><text x="70.8562%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (194 samples, 0.05%)</title><rect x="70.6881%" y="965" width="0.0542%" height="15" fill="rgb(216,102,54)" fg:x="252970" fg:w="194"/><text x="70.9381%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (184 samples, 0.05%)</title><rect x="70.7423%" y="965" width="0.0514%" height="15" fill="rgb(250,228,7)" fg:x="253164" fg:w="184"/><text x="70.9923%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 0.03%)</title><rect x="70.7971%" y="965" width="0.0257%" height="15" fill="rgb(226,125,25)" fg:x="253360" fg:w="92"/><text x="71.0471%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.02%)</title><rect x="70.8068%" y="949" width="0.0159%" height="15" fill="rgb(224,165,27)" fg:x="253395" fg:w="57"/><text x="71.0568%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (41 samples, 0.01%)</title><rect x="70.8244%" y="965" width="0.0115%" height="15" fill="rgb(233,86,3)" fg:x="253458" fg:w="41"/><text x="71.0744%" y="975.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (83 samples, 0.02%)</title><rect x="70.8359%" y="965" width="0.0232%" height="15" fill="rgb(228,116,20)" fg:x="253499" fg:w="83"/><text x="71.0859%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (75 samples, 0.02%)</title><rect x="70.8907%" y="949" width="0.0210%" height="15" fill="rgb(209,192,17)" fg:x="253695" fg:w="75"/><text x="71.1407%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (588 samples, 0.16%)</title><rect x="70.9116%" y="949" width="0.1643%" height="15" fill="rgb(224,88,34)" fg:x="253770" fg:w="588"/><text x="71.1616%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (66 samples, 0.02%)</title><rect x="71.0879%" y="949" width="0.0184%" height="15" fill="rgb(233,38,6)" fg:x="254401" fg:w="66"/><text x="71.3379%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_free (188 samples, 0.05%)</title><rect x="71.1813%" y="933" width="0.0525%" height="15" fill="rgb(212,59,30)" fg:x="254735" fg:w="188"/><text x="71.4313%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (311 samples, 0.09%)</title><rect x="71.2338%" y="933" width="0.0869%" height="15" fill="rgb(213,80,3)" fg:x="254923" fg:w="311"/><text x="71.4838%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (40 samples, 0.01%)</title><rect x="71.3299%" y="933" width="0.0112%" height="15" fill="rgb(251,178,7)" fg:x="255267" fg:w="40"/><text x="71.5799%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (66 samples, 0.02%)</title><rect x="71.3411%" y="933" width="0.0184%" height="15" fill="rgb(213,154,26)" fg:x="255307" fg:w="66"/><text x="71.5911%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (429 samples, 0.12%)</title><rect x="71.3998%" y="917" width="0.1199%" height="15" fill="rgb(238,165,49)" fg:x="255517" fg:w="429"/><text x="71.6498%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (53 samples, 0.01%)</title><rect x="71.5197%" y="917" width="0.0148%" height="15" fill="rgb(248,91,46)" fg:x="255946" fg:w="53"/><text x="71.7697%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (53 samples, 0.01%)</title><rect x="71.5197%" y="901" width="0.0148%" height="15" fill="rgb(244,21,52)" fg:x="255946" fg:w="53"/><text x="71.7697%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`madvise (53 samples, 0.01%)</title><rect x="71.5197%" y="885" width="0.0148%" height="15" fill="rgb(247,122,20)" fg:x="255946" fg:w="53"/><text x="71.7697%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.01%)</title><rect x="71.5356%" y="917" width="0.0106%" height="15" fill="rgb(218,27,9)" fg:x="256003" fg:w="38"/><text x="71.7856%" y="927.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5,708 samples, 1.60%)</title><rect x="69.9786%" y="1029" width="1.5950%" height="15" fill="rgb(246,7,6)" fg:x="250431" fg:w="5708"/><text x="70.2286%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (5,205 samples, 1.45%)</title><rect x="70.1192%" y="1013" width="1.4544%" height="15" fill="rgb(227,135,54)" fg:x="250934" fg:w="5205"/><text x="70.3692%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4,334 samples, 1.21%)</title><rect x="70.3625%" y="997" width="1.2111%" height="15" fill="rgb(247,14,11)" fg:x="251805" fg:w="4334"/><text x="70.6125%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3,354 samples, 0.94%)</title><rect x="70.6364%" y="981" width="0.9372%" height="15" fill="rgb(206,149,34)" fg:x="252785" fg:w="3354"/><text x="70.8864%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2,538 samples, 0.71%)</title><rect x="70.8644%" y="965" width="0.7092%" height="15" fill="rgb(227,228,4)" fg:x="253601" fg:w="2538"/><text x="71.1144%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1,617 samples, 0.45%)</title><rect x="71.1218%" y="949" width="0.4518%" height="15" fill="rgb(238,218,28)" fg:x="254522" fg:w="1617"/><text x="71.3718%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (742 samples, 0.21%)</title><rect x="71.3663%" y="933" width="0.2073%" height="15" fill="rgb(252,86,40)" fg:x="255397" fg:w="742"/><text x="71.6163%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (80 samples, 0.02%)</title><rect x="71.5512%" y="917" width="0.0224%" height="15" fill="rgb(251,225,11)" fg:x="256059" fg:w="80"/><text x="71.8012%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.02%)</title><rect x="71.7013%" y="997" width="0.0218%" height="15" fill="rgb(206,46,49)" fg:x="256596" fg:w="78"/><text x="71.9513%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.02%)</title><rect x="71.7074%" y="981" width="0.0156%" height="15" fill="rgb(245,128,24)" fg:x="256618" fg:w="56"/><text x="71.9574%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (115 samples, 0.03%)</title><rect x="71.7709%" y="981" width="0.0321%" height="15" fill="rgb(219,177,34)" fg:x="256845" fg:w="115"/><text x="72.0209%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (70 samples, 0.02%)</title><rect x="71.7835%" y="965" width="0.0196%" height="15" fill="rgb(218,60,48)" fg:x="256890" fg:w="70"/><text x="72.0335%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (273 samples, 0.08%)</title><rect x="71.7357%" y="997" width="0.0763%" height="15" fill="rgb(221,11,5)" fg:x="256719" fg:w="273"/><text x="71.9857%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (67 samples, 0.02%)</title><rect x="71.8757%" y="933" width="0.0187%" height="15" fill="rgb(220,148,13)" fg:x="257220" fg:w="67"/><text x="72.1257%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (193 samples, 0.05%)</title><rect x="71.8435%" y="949" width="0.0539%" height="15" fill="rgb(210,16,3)" fg:x="257105" fg:w="193"/><text x="72.0935%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (245 samples, 0.07%)</title><rect x="71.8337%" y="981" width="0.0685%" height="15" fill="rgb(236,80,2)" fg:x="257070" fg:w="245"/><text x="72.0837%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (215 samples, 0.06%)</title><rect x="71.8421%" y="965" width="0.0601%" height="15" fill="rgb(239,129,19)" fg:x="257100" fg:w="215"/><text x="72.0921%" y="975.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (326 samples, 0.09%)</title><rect x="71.8120%" y="997" width="0.0911%" height="15" fill="rgb(220,106,35)" fg:x="256992" fg:w="326"/><text x="72.0620%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="71.9195%" y="981" width="0.0115%" height="15" fill="rgb(252,139,45)" fg:x="257377" fg:w="41"/><text x="72.1695%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (54 samples, 0.02%)</title><rect x="72.0104%" y="949" width="0.0151%" height="15" fill="rgb(229,8,36)" fg:x="257702" fg:w="54"/><text x="72.2604%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (51 samples, 0.01%)</title><rect x="72.0112%" y="933" width="0.0143%" height="15" fill="rgb(230,126,33)" fg:x="257705" fg:w="51"/><text x="72.2612%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (124 samples, 0.03%)</title><rect x="71.9911%" y="965" width="0.0346%" height="15" fill="rgb(239,140,21)" fg:x="257633" fg:w="124"/><text x="72.2411%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (267 samples, 0.07%)</title><rect x="72.0749%" y="949" width="0.0746%" height="15" fill="rgb(254,104,9)" fg:x="257933" fg:w="267"/><text x="72.3249%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (153 samples, 0.04%)</title><rect x="72.1068%" y="933" width="0.0428%" height="15" fill="rgb(239,52,14)" fg:x="258047" fg:w="153"/><text x="72.3568%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.01%)</title><rect x="72.1392%" y="917" width="0.0103%" height="15" fill="rgb(208,227,44)" fg:x="258163" fg:w="37"/><text x="72.3892%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.01%)</title><rect x="72.1531%" y="949" width="0.0126%" height="15" fill="rgb(246,18,19)" fg:x="258213" fg:w="45"/><text x="72.4031%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (468 samples, 0.13%)</title><rect x="72.0358%" y="965" width="0.1308%" height="15" fill="rgb(235,228,25)" fg:x="257793" fg:w="468"/><text x="72.2858%" y="975.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (59 samples, 0.02%)</title><rect x="72.1666%" y="965" width="0.0165%" height="15" fill="rgb(240,156,20)" fg:x="258261" fg:w="59"/><text x="72.4166%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.02%)</title><rect x="72.2023%" y="949" width="0.0179%" height="15" fill="rgb(224,8,20)" fg:x="258389" fg:w="64"/><text x="72.4523%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (209 samples, 0.06%)</title><rect x="72.3851%" y="933" width="0.0584%" height="15" fill="rgb(214,12,52)" fg:x="259043" fg:w="209"/><text x="72.6351%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (77 samples, 0.02%)</title><rect x="72.4220%" y="917" width="0.0215%" height="15" fill="rgb(211,220,47)" fg:x="259175" fg:w="77"/><text x="72.6720%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (74 samples, 0.02%)</title><rect x="72.4228%" y="901" width="0.0207%" height="15" fill="rgb(250,173,5)" fg:x="259178" fg:w="74"/><text x="72.6728%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (84 samples, 0.02%)</title><rect x="72.4435%" y="933" width="0.0235%" height="15" fill="rgb(250,125,52)" fg:x="259252" fg:w="84"/><text x="72.6935%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.02%)</title><rect x="72.4482%" y="917" width="0.0187%" height="15" fill="rgb(209,133,18)" fg:x="259269" fg:w="67"/><text x="72.6982%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (39 samples, 0.01%)</title><rect x="72.4560%" y="901" width="0.0109%" height="15" fill="rgb(216,173,22)" fg:x="259297" fg:w="39"/><text x="72.7060%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (60 samples, 0.02%)</title><rect x="72.6109%" y="885" width="0.0168%" height="15" fill="rgb(205,3,22)" fg:x="259851" fg:w="60"/><text x="72.8609%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (70 samples, 0.02%)</title><rect x="72.6276%" y="885" width="0.0196%" height="15" fill="rgb(248,22,20)" fg:x="259911" fg:w="70"/><text x="72.8776%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (379 samples, 0.11%)</title><rect x="72.5416%" y="917" width="0.1059%" height="15" fill="rgb(233,6,29)" fg:x="259603" fg:w="379"/><text x="72.7916%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (257 samples, 0.07%)</title><rect x="72.5756%" y="901" width="0.0718%" height="15" fill="rgb(240,22,54)" fg:x="259725" fg:w="257"/><text x="72.8256%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (66 samples, 0.02%)</title><rect x="72.6525%" y="917" width="0.0184%" height="15" fill="rgb(231,133,32)" fg:x="260000" fg:w="66"/><text x="72.9025%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (698 samples, 0.20%)</title><rect x="72.4770%" y="933" width="0.1950%" height="15" fill="rgb(248,193,4)" fg:x="259372" fg:w="698"/><text x="72.7270%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (48 samples, 0.01%)</title><rect x="72.7928%" y="901" width="0.0134%" height="15" fill="rgb(211,178,46)" fg:x="260502" fg:w="48"/><text x="73.0428%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_free (45 samples, 0.01%)</title><rect x="72.9302%" y="869" width="0.0126%" height="15" fill="rgb(224,5,42)" fg:x="260994" fg:w="45"/><text x="73.1802%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (90 samples, 0.03%)</title><rect x="72.9464%" y="869" width="0.0251%" height="15" fill="rgb(239,176,25)" fg:x="261052" fg:w="90"/><text x="73.1964%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (41 samples, 0.01%)</title><rect x="72.9601%" y="853" width="0.0115%" height="15" fill="rgb(245,187,50)" fg:x="261101" fg:w="41"/><text x="73.2101%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (36 samples, 0.01%)</title><rect x="72.9615%" y="837" width="0.0101%" height="15" fill="rgb(248,24,15)" fg:x="261106" fg:w="36"/><text x="73.2115%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (52 samples, 0.01%)</title><rect x="72.9797%" y="837" width="0.0145%" height="15" fill="rgb(205,166,13)" fg:x="261171" fg:w="52"/><text x="73.2297%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (166 samples, 0.05%)</title><rect x="72.9716%" y="869" width="0.0464%" height="15" fill="rgb(208,114,23)" fg:x="261142" fg:w="166"/><text x="73.2216%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (152 samples, 0.04%)</title><rect x="72.9755%" y="853" width="0.0425%" height="15" fill="rgb(239,127,18)" fg:x="261156" fg:w="152"/><text x="73.2255%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (85 samples, 0.02%)</title><rect x="72.9942%" y="837" width="0.0238%" height="15" fill="rgb(219,154,28)" fg:x="261223" fg:w="85"/><text x="73.2442%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (39 samples, 0.01%)</title><rect x="73.1244%" y="821" width="0.0109%" height="15" fill="rgb(225,157,23)" fg:x="261689" fg:w="39"/><text x="73.3744%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (217 samples, 0.06%)</title><rect x="73.0823%" y="853" width="0.0606%" height="15" fill="rgb(219,8,6)" fg:x="261538" fg:w="217"/><text x="73.3323%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (149 samples, 0.04%)</title><rect x="73.1013%" y="837" width="0.0416%" height="15" fill="rgb(212,47,6)" fg:x="261606" fg:w="149"/><text x="73.3513%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (425 samples, 0.12%)</title><rect x="73.0353%" y="869" width="0.1188%" height="15" fill="rgb(224,190,4)" fg:x="261370" fg:w="425"/><text x="73.2853%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.01%)</title><rect x="73.2413%" y="853" width="0.0117%" height="15" fill="rgb(239,183,29)" fg:x="262107" fg:w="42"/><text x="73.4913%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (79 samples, 0.02%)</title><rect x="73.2530%" y="853" width="0.0221%" height="15" fill="rgb(213,57,7)" fg:x="262149" fg:w="79"/><text x="73.5030%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.01%)</title><rect x="73.2784%" y="853" width="0.0126%" height="15" fill="rgb(216,148,1)" fg:x="262240" fg:w="45"/><text x="73.5284%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (76 samples, 0.02%)</title><rect x="73.3343%" y="837" width="0.0212%" height="15" fill="rgb(236,182,29)" fg:x="262440" fg:w="76"/><text x="73.5843%" y="847.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (67 samples, 0.02%)</title><rect x="73.3648%" y="837" width="0.0187%" height="15" fill="rgb(244,120,48)" fg:x="262549" fg:w="67"/><text x="73.6148%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.01%)</title><rect x="73.3935%" y="821" width="0.0117%" height="15" fill="rgb(206,71,34)" fg:x="262652" fg:w="42"/><text x="73.6435%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (155 samples, 0.04%)</title><rect x="73.5341%" y="805" width="0.0433%" height="15" fill="rgb(242,32,6)" fg:x="263155" fg:w="155"/><text x="73.7841%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (88 samples, 0.02%)</title><rect x="73.5528%" y="789" width="0.0246%" height="15" fill="rgb(241,35,3)" fg:x="263222" fg:w="88"/><text x="73.8028%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (79 samples, 0.02%)</title><rect x="73.5553%" y="773" width="0.0221%" height="15" fill="rgb(222,62,19)" fg:x="263231" fg:w="79"/><text x="73.8053%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.01%)</title><rect x="73.6783%" y="757" width="0.0112%" height="15" fill="rgb(223,110,41)" fg:x="263671" fg:w="40"/><text x="73.9283%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (47 samples, 0.01%)</title><rect x="73.6895%" y="757" width="0.0131%" height="15" fill="rgb(208,224,4)" fg:x="263711" fg:w="47"/><text x="73.9395%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (290 samples, 0.08%)</title><rect x="73.6218%" y="789" width="0.0810%" height="15" fill="rgb(241,137,19)" fg:x="263469" fg:w="290"/><text x="73.8718%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (189 samples, 0.05%)</title><rect x="73.6501%" y="773" width="0.0528%" height="15" fill="rgb(244,24,17)" fg:x="263570" fg:w="189"/><text x="73.9001%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (526 samples, 0.15%)</title><rect x="73.5788%" y="805" width="0.1470%" height="15" fill="rgb(245,178,49)" fg:x="263315" fg:w="526"/><text x="73.8288%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (75 samples, 0.02%)</title><rect x="73.7048%" y="789" width="0.0210%" height="15" fill="rgb(219,160,38)" fg:x="263766" fg:w="75"/><text x="73.9548%" y="799.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1,258 samples, 0.35%)</title><rect x="73.4106%" y="821" width="0.3515%" height="15" fill="rgb(228,137,14)" fg:x="262713" fg:w="1258"/><text x="73.6606%" y="831.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (130 samples, 0.04%)</title><rect x="73.7258%" y="805" width="0.0363%" height="15" fill="rgb(237,134,11)" fg:x="263841" fg:w="130"/><text x="73.9758%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (61 samples, 0.02%)</title><rect x="73.7638%" y="821" width="0.0170%" height="15" fill="rgb(211,126,44)" fg:x="263977" fg:w="61"/><text x="74.0138%" y="831.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1,796 samples, 0.50%)</title><rect x="73.2910%" y="853" width="0.5019%" height="15" fill="rgb(226,171,33)" fg:x="262285" fg:w="1796"/><text x="73.5410%" y="863.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,455 samples, 0.41%)</title><rect x="73.3863%" y="837" width="0.4066%" height="15" fill="rgb(253,99,13)" fg:x="262626" fg:w="1455"/><text x="73.6363%" y="847.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (43 samples, 0.01%)</title><rect x="73.7808%" y="821" width="0.0120%" height="15" fill="rgb(244,48,7)" fg:x="264038" fg:w="43"/><text x="74.0308%" y="831.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (2,309 samples, 0.65%)</title><rect x="73.1541%" y="869" width="0.6452%" height="15" fill="rgb(244,217,54)" fg:x="261795" fg:w="2309"/><text x="73.4041%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (74 samples, 0.02%)</title><rect x="73.8717%" y="837" width="0.0207%" height="15" fill="rgb(224,15,18)" fg:x="264363" fg:w="74"/><text x="74.1217%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (39 samples, 0.01%)</title><rect x="73.8814%" y="821" width="0.0109%" height="15" fill="rgb(244,99,12)" fg:x="264398" fg:w="39"/><text x="74.1314%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (38 samples, 0.01%)</title><rect x="73.8817%" y="805" width="0.0106%" height="15" fill="rgb(233,226,8)" fg:x="264399" fg:w="38"/><text x="74.1317%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (193 samples, 0.05%)</title><rect x="73.9172%" y="821" width="0.0539%" height="15" fill="rgb(229,211,3)" fg:x="264526" fg:w="193"/><text x="74.1672%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (127 samples, 0.04%)</title><rect x="73.9356%" y="805" width="0.0355%" height="15" fill="rgb(216,140,21)" fg:x="264592" fg:w="127"/><text x="74.1856%" y="815.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (309 samples, 0.09%)</title><rect x="73.8962%" y="837" width="0.0863%" height="15" fill="rgb(234,122,30)" fg:x="264451" fg:w="309"/><text x="74.1462%" y="847.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (54 samples, 0.02%)</title><rect x="73.9826%" y="837" width="0.0151%" height="15" fill="rgb(236,25,46)" fg:x="264760" fg:w="54"/><text x="74.2326%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (55 samples, 0.02%)</title><rect x="74.0446%" y="805" width="0.0154%" height="15" fill="rgb(217,52,54)" fg:x="264982" fg:w="55"/><text x="74.2946%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (100 samples, 0.03%)</title><rect x="74.0723%" y="789" width="0.0279%" height="15" fill="rgb(222,29,26)" fg:x="265081" fg:w="100"/><text x="74.3223%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (73 samples, 0.02%)</title><rect x="74.0798%" y="773" width="0.0204%" height="15" fill="rgb(216,177,29)" fg:x="265108" fg:w="73"/><text x="74.3298%" y="783.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (161 samples, 0.04%)</title><rect x="74.0605%" y="805" width="0.0450%" height="15" fill="rgb(247,136,51)" fg:x="265039" fg:w="161"/><text x="74.3105%" y="815.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (380 samples, 0.11%)</title><rect x="74.0072%" y="821" width="0.1062%" height="15" fill="rgb(231,47,47)" fg:x="264848" fg:w="380"/><text x="74.2572%" y="831.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1,030 samples, 0.29%)</title><rect x="73.8331%" y="853" width="0.2878%" height="15" fill="rgb(211,192,36)" fg:x="264225" fg:w="1030"/><text x="74.0831%" y="863.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (436 samples, 0.12%)</title><rect x="73.9991%" y="837" width="0.1218%" height="15" fill="rgb(229,156,32)" fg:x="264819" fg:w="436"/><text x="74.2491%" y="847.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4,667 samples, 1.30%)</title><rect x="72.8296%" y="885" width="1.3041%" height="15" fill="rgb(248,213,20)" fg:x="260634" fg:w="4667"/><text x="73.0796%" y="895.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,154 samples, 0.32%)</title><rect x="73.8113%" y="869" width="0.3225%" height="15" fill="rgb(217,64,7)" fg:x="264147" fg:w="1154"/><text x="74.0613%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (46 samples, 0.01%)</title><rect x="74.1377%" y="885" width="0.0129%" height="15" fill="rgb(232,142,8)" fg:x="265315" fg:w="46"/><text x="74.3877%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (4,953 samples, 1.38%)</title><rect x="72.7768%" y="917" width="1.3840%" height="15" fill="rgb(224,92,44)" fg:x="260445" fg:w="4953"/><text x="73.0268%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (4,816 samples, 1.35%)</title><rect x="72.8151%" y="901" width="1.3457%" height="15" fill="rgb(214,169,17)" fg:x="260582" fg:w="4816"/><text x="73.0651%" y="911.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (5,335 samples, 1.49%)</title><rect x="72.6720%" y="933" width="1.4908%" height="15" fill="rgb(210,59,37)" fg:x="260070" fg:w="5335"/><text x="72.9220%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (80 samples, 0.02%)</title><rect x="74.2201%" y="901" width="0.0224%" height="15" fill="rgb(214,116,48)" fg:x="265610" fg:w="80"/><text x="74.4701%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (55 samples, 0.02%)</title><rect x="74.2271%" y="885" width="0.0154%" height="15" fill="rgb(244,191,6)" fg:x="265635" fg:w="55"/><text x="74.4771%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.01%)</title><rect x="74.2285%" y="869" width="0.0140%" height="15" fill="rgb(241,50,52)" fg:x="265640" fg:w="50"/><text x="74.4785%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.02%)</title><rect x="74.2531%" y="885" width="0.0212%" height="15" fill="rgb(236,75,39)" fg:x="265728" fg:w="76"/><text x="74.5031%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (52 samples, 0.01%)</title><rect x="74.2598%" y="869" width="0.0145%" height="15" fill="rgb(236,99,0)" fg:x="265752" fg:w="52"/><text x="74.5098%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (140 samples, 0.04%)</title><rect x="74.2425%" y="901" width="0.0391%" height="15" fill="rgb(207,202,15)" fg:x="265690" fg:w="140"/><text x="74.4925%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (396 samples, 0.11%)</title><rect x="74.1804%" y="917" width="0.1107%" height="15" fill="rgb(233,207,14)" fg:x="265468" fg:w="396"/><text x="74.4304%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (7,423 samples, 2.07%)</title><rect x="72.2247%" y="949" width="2.0742%" height="15" fill="rgb(226,27,51)" fg:x="258469" fg:w="7423"/><text x="72.4747%" y="959.50">s..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (469 samples, 0.13%)</title><rect x="74.1678%" y="933" width="0.1311%" height="15" fill="rgb(206,104,42)" fg:x="265423" fg:w="469"/><text x="74.4178%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (73 samples, 0.02%)</title><rect x="74.3020%" y="949" width="0.0204%" height="15" fill="rgb(212,225,4)" fg:x="265903" fg:w="73"/><text x="74.5520%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (8,564 samples, 2.39%)</title><rect x="71.9394%" y="981" width="2.3931%" height="15" fill="rgb(233,96,42)" fg:x="257448" fg:w="8564"/><text x="72.1894%" y="991.50">sk..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (7,663 samples, 2.14%)</title><rect x="72.1911%" y="965" width="2.1413%" height="15" fill="rgb(229,21,32)" fg:x="258349" fg:w="7663"/><text x="72.4411%" y="975.50">s..</text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (9,843 samples, 2.75%)</title><rect x="71.5960%" y="1013" width="2.7505%" height="15" fill="rgb(226,216,24)" fg:x="256219" fg:w="9843"/><text x="71.8460%" y="1023.50">sk..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (8,728 samples, 2.44%)</title><rect x="71.9075%" y="997" width="2.4389%" height="15" fill="rgb(221,163,17)" fg:x="257334" fg:w="8728"/><text x="72.1575%" y="1007.50">sk..</text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (45 samples, 0.01%)</title><rect x="74.3472%" y="1013" width="0.0126%" height="15" fill="rgb(216,216,42)" fg:x="266065" fg:w="45"/><text x="74.5972%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (34,061 samples, 9.52%)</title><rect x="64.8496%" y="1077" width="9.5178%" height="15" fill="rgb(240,118,7)" fg:x="232076" fg:w="34061"/><text x="65.0996%" y="1087.50">sk-gen`&lt;serde:..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (34,011 samples, 9.50%)</title><rect x="64.8636%" y="1061" width="9.5038%" height="15" fill="rgb(221,67,37)" fg:x="232126" fg:w="34011"/><text x="65.1136%" y="1071.50">sk-gen`serde_j..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (33,767 samples, 9.44%)</title><rect x="64.9318%" y="1045" width="9.4356%" height="15" fill="rgb(241,32,44)" fg:x="232370" fg:w="33767"/><text x="65.1818%" y="1055.50">sk-gen`serde_..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (9,969 samples, 2.79%)</title><rect x="71.5817%" y="1029" width="2.7857%" height="15" fill="rgb(235,204,43)" fg:x="256168" fg:w="9969"/><text x="71.8317%" y="1039.50">sk..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (34,160 samples, 9.55%)</title><rect x="64.8228%" y="1125" width="9.5454%" height="15" fill="rgb(213,116,10)" fg:x="231980" fg:w="34160"/><text x="65.0728%" y="1135.50">sk-gen`serde_j..</text></g><g><title>sk-gen`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (34,158 samples, 9.54%)</title><rect x="64.8233%" y="1109" width="9.5449%" height="15" fill="rgb(239,15,48)" fg:x="231982" fg:w="34158"/><text x="65.0733%" y="1119.50">sk-gen`&lt;serde:..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (34,156 samples, 9.54%)</title><rect x="64.8239%" y="1093" width="9.5443%" height="15" fill="rgb(207,123,36)" fg:x="231984" fg:w="34156"/><text x="65.0739%" y="1103.50">sk-gen`serde_j..</text></g><g><title>sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (193,882 samples, 54.18%)</title><rect x="20.1935%" y="1141" width="54.1770%" height="15" fill="rgb(209,103,30)" fg:x="72266" fg:w="193882"/><text x="20.4435%" y="1151.50">sk-gen`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::It..</text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (47 samples, 0.01%)</title><rect x="74.3864%" y="1029" width="0.0131%" height="15" fill="rgb(238,100,19)" fg:x="266205" fg:w="47"/><text x="74.6364%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (79 samples, 0.02%)</title><rect x="74.3839%" y="1061" width="0.0221%" height="15" fill="rgb(244,30,14)" fg:x="266196" fg:w="79"/><text x="74.6339%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (79 samples, 0.02%)</title><rect x="74.3839%" y="1045" width="0.0221%" height="15" fill="rgb(249,174,6)" fg:x="266196" fg:w="79"/><text x="74.6339%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (117 samples, 0.03%)</title><rect x="74.3799%" y="1077" width="0.0327%" height="15" fill="rgb(235,213,41)" fg:x="266182" fg:w="117"/><text x="74.6299%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (136 samples, 0.04%)</title><rect x="74.3766%" y="1093" width="0.0380%" height="15" fill="rgb(213,118,6)" fg:x="266170" fg:w="136"/><text x="74.6266%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (145 samples, 0.04%)</title><rect x="74.3746%" y="1109" width="0.0405%" height="15" fill="rgb(235,44,51)" fg:x="266163" fg:w="145"/><text x="74.6246%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (163 samples, 0.05%)</title><rect x="74.3718%" y="1125" width="0.0455%" height="15" fill="rgb(217,9,53)" fg:x="266153" fg:w="163"/><text x="74.6218%" y="1135.50"></text></g><g><title>sk-gen`&lt;kube_core::dynamic::DynamicObject as core::clone::Clone&gt;::clone (168 samples, 0.05%)</title><rect x="74.3710%" y="1141" width="0.0469%" height="15" fill="rgb(237,172,34)" fg:x="266150" fg:w="168"/><text x="74.6210%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (194,064 samples, 54.23%)</title><rect x="20.1935%" y="1157" width="54.2278%" height="15" fill="rgb(206,206,11)" fg:x="72266" fg:w="194064"/><text x="20.4435%" y="1167.50">sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (152 samples, 0.04%)</title><rect x="74.4213%" y="1157" width="0.0425%" height="15" fill="rgb(214,149,29)" fg:x="266330" fg:w="152"/><text x="74.6713%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (84 samples, 0.02%)</title><rect x="74.4777%" y="1157" width="0.0235%" height="15" fill="rgb(208,123,3)" fg:x="266532" fg:w="84"/><text x="74.7277%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`_free (70 samples, 0.02%)</title><rect x="74.5442%" y="1109" width="0.0196%" height="15" fill="rgb(229,126,4)" fg:x="266770" fg:w="70"/><text x="74.7942%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_free (114 samples, 0.03%)</title><rect x="74.5850%" y="1093" width="0.0319%" height="15" fill="rgb(222,92,36)" fg:x="266916" fg:w="114"/><text x="74.8350%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (140 samples, 0.04%)</title><rect x="74.6169%" y="1093" width="0.0391%" height="15" fill="rgb(216,39,41)" fg:x="267030" fg:w="140"/><text x="74.8669%" y="1103.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (55 samples, 0.02%)</title><rect x="74.6571%" y="1093" width="0.0154%" height="15" fill="rgb(253,127,28)" fg:x="267174" fg:w="55"/><text x="74.9071%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (79 samples, 0.02%)</title><rect x="74.6993%" y="1077" width="0.0221%" height="15" fill="rgb(249,152,51)" fg:x="267325" fg:w="79"/><text x="74.9493%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (56 samples, 0.02%)</title><rect x="74.7058%" y="1061" width="0.0156%" height="15" fill="rgb(209,123,42)" fg:x="267348" fg:w="56"/><text x="74.9558%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (185 samples, 0.05%)</title><rect x="74.6731%" y="1093" width="0.0517%" height="15" fill="rgb(241,118,22)" fg:x="267231" fg:w="185"/><text x="74.9231%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (144 samples, 0.04%)</title><rect x="74.7502%" y="1077" width="0.0402%" height="15" fill="rgb(208,25,7)" fg:x="267507" fg:w="144"/><text x="75.0002%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (282 samples, 0.08%)</title><rect x="74.7904%" y="1077" width="0.0788%" height="15" fill="rgb(243,144,39)" fg:x="267651" fg:w="282"/><text x="75.0404%" y="1087.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (56 samples, 0.02%)</title><rect x="74.8787%" y="1077" width="0.0156%" height="15" fill="rgb(250,50,5)" fg:x="267967" fg:w="56"/><text x="75.1287%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (274 samples, 0.08%)</title><rect x="74.9491%" y="1061" width="0.0766%" height="15" fill="rgb(207,67,11)" fg:x="268219" fg:w="274"/><text x="75.1991%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (215 samples, 0.06%)</title><rect x="74.9656%" y="1045" width="0.0601%" height="15" fill="rgb(245,204,40)" fg:x="268278" fg:w="215"/><text x="75.2156%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (70 samples, 0.02%)</title><rect x="75.0061%" y="1029" width="0.0196%" height="15" fill="rgb(238,228,24)" fg:x="268423" fg:w="70"/><text x="75.2561%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (513 samples, 0.14%)</title><rect x="74.8949%" y="1077" width="0.1433%" height="15" fill="rgb(217,116,22)" fg:x="268025" fg:w="513"/><text x="75.1449%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.01%)</title><rect x="75.0277%" y="1061" width="0.0106%" height="15" fill="rgb(234,98,12)" fg:x="268500" fg:w="38"/><text x="75.2777%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (229 samples, 0.06%)</title><rect x="75.0707%" y="1061" width="0.0640%" height="15" fill="rgb(242,170,50)" fg:x="268654" fg:w="229"/><text x="75.3207%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (320 samples, 0.09%)</title><rect x="75.1347%" y="1061" width="0.0894%" height="15" fill="rgb(235,7,5)" fg:x="268883" fg:w="320"/><text x="75.3847%" y="1071.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (116 samples, 0.03%)</title><rect x="75.2378%" y="1061" width="0.0324%" height="15" fill="rgb(241,114,28)" fg:x="269252" fg:w="116"/><text x="75.4878%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (55 samples, 0.02%)</title><rect x="75.4155%" y="1013" width="0.0154%" height="15" fill="rgb(246,112,42)" fg:x="269888" fg:w="55"/><text x="75.6655%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (420 samples, 0.12%)</title><rect x="75.3264%" y="1045" width="0.1174%" height="15" fill="rgb(248,228,14)" fg:x="269569" fg:w="420"/><text x="75.5764%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (301 samples, 0.08%)</title><rect x="75.3596%" y="1029" width="0.0841%" height="15" fill="rgb(208,133,18)" fg:x="269688" fg:w="301"/><text x="75.6096%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (46 samples, 0.01%)</title><rect x="75.4309%" y="1013" width="0.0129%" height="15" fill="rgb(207,35,49)" fg:x="269943" fg:w="46"/><text x="75.6809%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (698 samples, 0.20%)</title><rect x="75.2719%" y="1061" width="0.1950%" height="15" fill="rgb(205,68,36)" fg:x="269374" fg:w="698"/><text x="75.5219%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (63 samples, 0.02%)</title><rect x="75.4493%" y="1045" width="0.0176%" height="15" fill="rgb(245,62,40)" fg:x="270009" fg:w="63"/><text x="75.6993%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (104 samples, 0.03%)</title><rect x="75.4887%" y="1029" width="0.0291%" height="15" fill="rgb(228,27,24)" fg:x="270150" fg:w="104"/><text x="75.7387%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.01%)</title><rect x="75.5290%" y="1013" width="0.0112%" height="15" fill="rgb(253,19,12)" fg:x="270294" fg:w="40"/><text x="75.7790%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (65 samples, 0.02%)</title><rect x="75.5237%" y="1029" width="0.0182%" height="15" fill="rgb(232,28,20)" fg:x="270275" fg:w="65"/><text x="75.7737%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (276 samples, 0.08%)</title><rect x="75.4669%" y="1061" width="0.0771%" height="15" fill="rgb(218,35,51)" fg:x="270072" fg:w="276"/><text x="75.7169%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (206 samples, 0.06%)</title><rect x="75.4865%" y="1045" width="0.0576%" height="15" fill="rgb(212,90,40)" fg:x="270142" fg:w="206"/><text x="75.7365%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (65 samples, 0.02%)</title><rect x="75.5773%" y="1045" width="0.0182%" height="15" fill="rgb(220,172,12)" fg:x="270467" fg:w="65"/><text x="75.8273%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (465 samples, 0.13%)</title><rect x="75.5955%" y="1045" width="0.1299%" height="15" fill="rgb(226,159,20)" fg:x="270532" fg:w="465"/><text x="75.8455%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.01%)</title><rect x="75.7321%" y="1045" width="0.0101%" height="15" fill="rgb(234,205,16)" fg:x="271021" fg:w="36"/><text x="75.9821%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (380 samples, 0.11%)</title><rect x="75.8034%" y="1029" width="0.1062%" height="15" fill="rgb(207,9,39)" fg:x="271276" fg:w="380"/><text x="76.0534%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (262 samples, 0.07%)</title><rect x="75.8363%" y="1013" width="0.0732%" height="15" fill="rgb(249,143,15)" fg:x="271394" fg:w="262"/><text x="76.0863%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (68 samples, 0.02%)</title><rect x="75.8906%" y="997" width="0.0190%" height="15" fill="rgb(253,133,29)" fg:x="271588" fg:w="68"/><text x="76.1406%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (640 samples, 0.18%)</title><rect x="75.7508%" y="1045" width="0.1788%" height="15" fill="rgb(221,187,0)" fg:x="271088" fg:w="640"/><text x="76.0008%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (55 samples, 0.02%)</title><rect x="75.9143%" y="1029" width="0.0154%" height="15" fill="rgb(205,204,26)" fg:x="271673" fg:w="55"/><text x="76.1643%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (113 samples, 0.03%)</title><rect x="75.9554%" y="1029" width="0.0316%" height="15" fill="rgb(224,68,54)" fg:x="271820" fg:w="113"/><text x="76.2054%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (74 samples, 0.02%)</title><rect x="76.0018%" y="1013" width="0.0207%" height="15" fill="rgb(209,67,4)" fg:x="271986" fg:w="74"/><text x="76.2518%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51 samples, 0.01%)</title><rect x="76.0082%" y="997" width="0.0143%" height="15" fill="rgb(228,229,18)" fg:x="272009" fg:w="51"/><text x="76.2582%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (135 samples, 0.04%)</title><rect x="75.9903%" y="1029" width="0.0377%" height="15" fill="rgb(231,89,13)" fg:x="271945" fg:w="135"/><text x="76.2403%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (188 samples, 0.05%)</title><rect x="76.0319%" y="1013" width="0.0525%" height="15" fill="rgb(210,182,18)" fg:x="272094" fg:w="188"/><text x="76.2819%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (52 samples, 0.01%)</title><rect x="76.0845%" y="1013" width="0.0145%" height="15" fill="rgb(240,105,2)" fg:x="272282" fg:w="52"/><text x="76.3345%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (88 samples, 0.02%)</title><rect x="76.0990%" y="1013" width="0.0246%" height="15" fill="rgb(207,170,50)" fg:x="272334" fg:w="88"/><text x="76.3490%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (50 samples, 0.01%)</title><rect x="76.1465%" y="997" width="0.0140%" height="15" fill="rgb(232,133,24)" fg:x="272504" fg:w="50"/><text x="76.3965%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (463 samples, 0.13%)</title><rect x="76.1605%" y="997" width="0.1294%" height="15" fill="rgb(235,166,27)" fg:x="272554" fg:w="463"/><text x="76.4105%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (96 samples, 0.03%)</title><rect x="76.2954%" y="997" width="0.0268%" height="15" fill="rgb(209,19,13)" fg:x="273037" fg:w="96"/><text x="76.5454%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (221 samples, 0.06%)</title><rect x="76.3689%" y="981" width="0.0618%" height="15" fill="rgb(226,79,39)" fg:x="273300" fg:w="221"/><text x="76.6189%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (162 samples, 0.05%)</title><rect x="76.3854%" y="965" width="0.0453%" height="15" fill="rgb(222,163,10)" fg:x="273359" fg:w="162"/><text x="76.6354%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (382 samples, 0.11%)</title><rect x="76.3307%" y="997" width="0.1067%" height="15" fill="rgb(214,44,19)" fg:x="273163" fg:w="382"/><text x="76.5807%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (69 samples, 0.02%)</title><rect x="76.4732%" y="981" width="0.0193%" height="15" fill="rgb(210,217,13)" fg:x="273673" fg:w="69"/><text x="76.7232%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (95 samples, 0.03%)</title><rect x="76.4924%" y="981" width="0.0265%" height="15" fill="rgb(237,61,54)" fg:x="273742" fg:w="95"/><text x="76.7424%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (152 samples, 0.04%)</title><rect x="76.5525%" y="965" width="0.0425%" height="15" fill="rgb(226,184,24)" fg:x="273957" fg:w="152"/><text x="76.8025%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (95 samples, 0.03%)</title><rect x="76.5685%" y="949" width="0.0265%" height="15" fill="rgb(223,226,4)" fg:x="274014" fg:w="95"/><text x="76.8185%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (257 samples, 0.07%)</title><rect x="76.5321%" y="981" width="0.0718%" height="15" fill="rgb(210,26,41)" fg:x="273884" fg:w="257"/><text x="76.7821%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (147 samples, 0.04%)</title><rect x="76.6215%" y="965" width="0.0411%" height="15" fill="rgb(220,221,6)" fg:x="274204" fg:w="147"/><text x="76.8715%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (82 samples, 0.02%)</title><rect x="76.6626%" y="965" width="0.0229%" height="15" fill="rgb(225,89,49)" fg:x="274351" fg:w="82"/><text x="76.9126%" y="975.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (75 samples, 0.02%)</title><rect x="76.6920%" y="965" width="0.0210%" height="15" fill="rgb(218,70,45)" fg:x="274456" fg:w="75"/><text x="76.9420%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (335 samples, 0.09%)</title><rect x="76.7392%" y="949" width="0.0936%" height="15" fill="rgb(238,166,21)" fg:x="274625" fg:w="335"/><text x="76.9892%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (62 samples, 0.02%)</title><rect x="76.8381%" y="949" width="0.0173%" height="15" fill="rgb(224,141,44)" fg:x="274979" fg:w="62"/><text x="77.0881%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (307 samples, 0.09%)</title><rect x="76.8962%" y="933" width="0.0858%" height="15" fill="rgb(230,12,49)" fg:x="275187" fg:w="307"/><text x="77.1462%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (200 samples, 0.06%)</title><rect x="76.9261%" y="917" width="0.0559%" height="15" fill="rgb(212,174,12)" fg:x="275294" fg:w="200"/><text x="77.1761%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (41 samples, 0.01%)</title><rect x="76.9706%" y="901" width="0.0115%" height="15" fill="rgb(246,67,9)" fg:x="275453" fg:w="41"/><text x="77.2206%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (503 samples, 0.14%)</title><rect x="76.8585%" y="949" width="0.1406%" height="15" fill="rgb(239,35,23)" fg:x="275052" fg:w="503"/><text x="77.1085%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.01%)</title><rect x="76.9865%" y="933" width="0.0126%" height="15" fill="rgb(211,167,0)" fg:x="275510" fg:w="45"/><text x="77.2365%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,032 samples, 0.29%)</title><rect x="76.7224%" y="965" width="0.2884%" height="15" fill="rgb(225,119,45)" fg:x="274565" fg:w="1032"/><text x="76.9724%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (42 samples, 0.01%)</title><rect x="76.9991%" y="949" width="0.0117%" height="15" fill="rgb(210,162,6)" fg:x="275555" fg:w="42"/><text x="77.2491%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,459 samples, 0.41%)</title><rect x="76.6039%" y="981" width="0.4077%" height="15" fill="rgb(208,118,35)" fg:x="274141" fg:w="1459"/><text x="76.8539%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (84 samples, 0.02%)</title><rect x="77.0200%" y="965" width="0.0235%" height="15" fill="rgb(239,4,53)" fg:x="275630" fg:w="84"/><text x="77.2700%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (133 samples, 0.04%)</title><rect x="77.0552%" y="949" width="0.0372%" height="15" fill="rgb(213,130,21)" fg:x="275756" fg:w="133"/><text x="77.3052%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.03%)</title><rect x="77.0647%" y="933" width="0.0277%" height="15" fill="rgb(235,148,0)" fg:x="275790" fg:w="99"/><text x="77.3147%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (56 samples, 0.02%)</title><rect x="77.0767%" y="917" width="0.0156%" height="15" fill="rgb(244,224,18)" fg:x="275833" fg:w="56"/><text x="77.3267%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (185 samples, 0.05%)</title><rect x="77.0463%" y="965" width="0.0517%" height="15" fill="rgb(211,214,4)" fg:x="275724" fg:w="185"/><text x="77.2963%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,460 samples, 0.97%)</title><rect x="76.1342%" y="1013" width="0.9668%" height="15" fill="rgb(206,119,25)" fg:x="272460" fg:w="3460"/><text x="76.3842%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,368 samples, 0.66%)</title><rect x="76.4394%" y="997" width="0.6617%" height="15" fill="rgb(243,93,47)" fg:x="273552" fg:w="2368"/><text x="76.6894%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (310 samples, 0.09%)</title><rect x="77.0144%" y="981" width="0.0866%" height="15" fill="rgb(224,194,6)" fg:x="275610" fg:w="310"/><text x="77.2644%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,847 samples, 1.07%)</title><rect x="76.0280%" y="1029" width="1.0750%" height="15" fill="rgb(243,229,6)" fg:x="272080" fg:w="3847"/><text x="76.2780%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,044 samples, 2.53%)</title><rect x="74.5803%" y="1109" width="2.5272%" height="15" fill="rgb(207,23,50)" fg:x="266899" fg:w="9044"/><text x="74.8303%" y="1119.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,527 samples, 2.38%)</title><rect x="74.7248%" y="1093" width="2.3827%" height="15" fill="rgb(253,192,32)" fg:x="267416" fg:w="8527"/><text x="74.9748%" y="1103.50">sk..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,405 samples, 2.07%)</title><rect x="75.0383%" y="1077" width="2.0692%" height="15" fill="rgb(213,21,6)" fg:x="268538" fg:w="7405"/><text x="75.2883%" y="1087.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,595 samples, 1.56%)</title><rect x="75.5441%" y="1061" width="1.5634%" height="15" fill="rgb(243,151,13)" fg:x="270348" fg:w="5595"/><text x="75.7941%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,212 samples, 1.18%)</title><rect x="75.9305%" y="1045" width="1.1770%" height="15" fill="rgb(233,165,41)" fg:x="271731" fg:w="4212"/><text x="76.1805%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,177 samples, 2.56%)</title><rect x="74.5434%" y="1125" width="2.5644%" height="15" fill="rgb(246,176,45)" fg:x="266767" fg:w="9177"/><text x="74.7934%" y="1135.50">sk..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (204 samples, 0.06%)</title><rect x="77.1268%" y="1109" width="0.0570%" height="15" fill="rgb(217,170,52)" fg:x="276012" fg:w="204"/><text x="77.3768%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (213 samples, 0.06%)</title><rect x="77.1885%" y="1109" width="0.0595%" height="15" fill="rgb(214,203,54)" fg:x="276233" fg:w="213"/><text x="77.4385%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (132 samples, 0.04%)</title><rect x="77.2913%" y="1093" width="0.0369%" height="15" fill="rgb(248,215,49)" fg:x="276601" fg:w="132"/><text x="77.5413%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="77.3305%" y="1093" width="0.0190%" height="15" fill="rgb(208,46,10)" fg:x="276741" fg:w="68"/><text x="77.5805%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (197 samples, 0.06%)</title><rect x="77.3986%" y="1061" width="0.0550%" height="15" fill="rgb(254,5,31)" fg:x="276985" fg:w="197"/><text x="77.6486%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (144 samples, 0.04%)</title><rect x="77.4135%" y="1045" width="0.0402%" height="15" fill="rgb(222,104,33)" fg:x="277038" fg:w="144"/><text x="77.6635%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (84 samples, 0.02%)</title><rect x="77.4302%" y="1029" width="0.0235%" height="15" fill="rgb(248,49,16)" fg:x="277098" fg:w="84"/><text x="77.6802%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (294 samples, 0.08%)</title><rect x="77.3777%" y="1077" width="0.0822%" height="15" fill="rgb(232,198,41)" fg:x="276910" fg:w="294"/><text x="77.6277%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (409 samples, 0.11%)</title><rect x="77.3506%" y="1093" width="0.1143%" height="15" fill="rgb(214,125,3)" fg:x="276813" fg:w="409"/><text x="77.6006%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (735 samples, 0.21%)</title><rect x="77.2673%" y="1109" width="0.2054%" height="15" fill="rgb(229,220,28)" fg:x="276515" fg:w="735"/><text x="77.5173%" y="1119.50"></text></g><g><title>sk-gen`_RNvCsgoUM7F7eVWR_7___rustc11___rdl_alloc (39 samples, 0.01%)</title><rect x="77.4856%" y="1109" width="0.0109%" height="15" fill="rgb(222,64,37)" fg:x="277296" fg:w="39"/><text x="77.7356%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (77 samples, 0.02%)</title><rect x="77.4967%" y="1109" width="0.0215%" height="15" fill="rgb(249,184,13)" fg:x="277336" fg:w="77"/><text x="77.7467%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (158 samples, 0.04%)</title><rect x="77.5395%" y="1093" width="0.0442%" height="15" fill="rgb(252,176,6)" fg:x="277489" fg:w="158"/><text x="77.7895%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (66 samples, 0.02%)</title><rect x="77.5836%" y="1093" width="0.0184%" height="15" fill="rgb(228,153,7)" fg:x="277647" fg:w="66"/><text x="77.8336%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.02%)</title><rect x="77.6591%" y="1061" width="0.0170%" height="15" fill="rgb(242,193,5)" fg:x="277917" fg:w="61"/><text x="77.9091%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.01%)</title><rect x="77.6636%" y="1045" width="0.0126%" height="15" fill="rgb(232,140,9)" fg:x="277933" fg:w="45"/><text x="77.9136%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (158 samples, 0.04%)</title><rect x="77.6465%" y="1077" width="0.0442%" height="15" fill="rgb(213,222,16)" fg:x="277872" fg:w="158"/><text x="77.8965%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (48 samples, 0.01%)</title><rect x="77.6772%" y="1061" width="0.0134%" height="15" fill="rgb(222,75,50)" fg:x="277982" fg:w="48"/><text x="77.9272%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (310 samples, 0.09%)</title><rect x="77.6124%" y="1093" width="0.0866%" height="15" fill="rgb(205,180,2)" fg:x="277750" fg:w="310"/><text x="77.8624%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (73 samples, 0.02%)</title><rect x="77.7166%" y="1077" width="0.0204%" height="15" fill="rgb(216,34,7)" fg:x="278123" fg:w="73"/><text x="77.9666%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (85 samples, 0.02%)</title><rect x="77.7370%" y="1077" width="0.0238%" height="15" fill="rgb(253,16,32)" fg:x="278196" fg:w="85"/><text x="77.9870%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.01%)</title><rect x="77.7608%" y="1077" width="0.0109%" height="15" fill="rgb(208,97,28)" fg:x="278281" fg:w="39"/><text x="78.0108%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (37 samples, 0.01%)</title><rect x="77.7801%" y="1077" width="0.0103%" height="15" fill="rgb(225,92,11)" fg:x="278350" fg:w="37"/><text x="78.0301%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (139 samples, 0.04%)</title><rect x="77.8094%" y="1061" width="0.0388%" height="15" fill="rgb(243,38,12)" fg:x="278455" fg:w="139"/><text x="78.0594%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (83 samples, 0.02%)</title><rect x="77.8483%" y="1061" width="0.0232%" height="15" fill="rgb(208,139,16)" fg:x="278594" fg:w="83"/><text x="78.0983%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (71 samples, 0.02%)</title><rect x="77.9514%" y="1029" width="0.0198%" height="15" fill="rgb(227,24,9)" fg:x="278963" fg:w="71"/><text x="78.2014%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.02%)</title><rect x="77.9553%" y="1013" width="0.0159%" height="15" fill="rgb(206,62,11)" fg:x="278977" fg:w="57"/><text x="78.2053%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (179 samples, 0.05%)</title><rect x="77.9326%" y="1045" width="0.0500%" height="15" fill="rgb(228,134,27)" fg:x="278896" fg:w="179"/><text x="78.1826%" y="1055.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (38 samples, 0.01%)</title><rect x="77.9720%" y="1029" width="0.0106%" height="15" fill="rgb(205,55,33)" fg:x="279037" fg:w="38"/><text x="78.2220%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (360 samples, 0.10%)</title><rect x="77.8865%" y="1061" width="0.1006%" height="15" fill="rgb(243,75,43)" fg:x="278731" fg:w="360"/><text x="78.1365%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.01%)</title><rect x="78.0117%" y="1045" width="0.0148%" height="15" fill="rgb(223,27,42)" fg:x="279179" fg:w="53"/><text x="78.2617%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (50 samples, 0.01%)</title><rect x="78.0268%" y="1045" width="0.0140%" height="15" fill="rgb(232,189,33)" fg:x="279233" fg:w="50"/><text x="78.2768%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="78.0408%" y="1045" width="0.0193%" height="15" fill="rgb(210,9,39)" fg:x="279283" fg:w="69"/><text x="78.2908%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (91 samples, 0.03%)</title><rect x="78.0894%" y="1029" width="0.0254%" height="15" fill="rgb(242,85,26)" fg:x="279457" fg:w="91"/><text x="78.3394%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (205 samples, 0.06%)</title><rect x="78.1682%" y="997" width="0.0573%" height="15" fill="rgb(248,44,4)" fg:x="279739" fg:w="205"/><text x="78.4182%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (154 samples, 0.04%)</title><rect x="78.1825%" y="981" width="0.0430%" height="15" fill="rgb(250,96,46)" fg:x="279790" fg:w="154"/><text x="78.4325%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (81 samples, 0.02%)</title><rect x="78.2029%" y="965" width="0.0226%" height="15" fill="rgb(229,116,26)" fg:x="279863" fg:w="81"/><text x="78.4529%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (270 samples, 0.08%)</title><rect x="78.1562%" y="1013" width="0.0754%" height="15" fill="rgb(246,94,34)" fg:x="279696" fg:w="270"/><text x="78.4062%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (365 samples, 0.10%)</title><rect x="78.1330%" y="1029" width="0.1020%" height="15" fill="rgb(251,73,21)" fg:x="279613" fg:w="365"/><text x="78.3830%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (148 samples, 0.04%)</title><rect x="78.2741%" y="1013" width="0.0414%" height="15" fill="rgb(254,121,25)" fg:x="280118" fg:w="148"/><text x="78.5241%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (166 samples, 0.05%)</title><rect x="78.3205%" y="1013" width="0.0464%" height="15" fill="rgb(215,161,49)" fg:x="280284" fg:w="166"/><text x="78.5705%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.02%)</title><rect x="78.3669%" y="1013" width="0.0218%" height="15" fill="rgb(221,43,13)" fg:x="280450" fg:w="78"/><text x="78.6169%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (81 samples, 0.02%)</title><rect x="78.4060%" y="1013" width="0.0226%" height="15" fill="rgb(249,5,37)" fg:x="280590" fg:w="81"/><text x="78.6560%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.02%)</title><rect x="78.4543%" y="997" width="0.0176%" height="15" fill="rgb(226,25,44)" fg:x="280763" fg:w="63"/><text x="78.7043%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (254 samples, 0.07%)</title><rect x="78.4720%" y="997" width="0.0710%" height="15" fill="rgb(238,189,16)" fg:x="280826" fg:w="254"/><text x="78.7220%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (48 samples, 0.01%)</title><rect x="78.5295%" y="981" width="0.0134%" height="15" fill="rgb(251,186,8)" fg:x="281032" fg:w="48"/><text x="78.7795%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (45 samples, 0.01%)</title><rect x="78.5304%" y="965" width="0.0126%" height="15" fill="rgb(254,34,31)" fg:x="281035" fg:w="45"/><text x="78.7804%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (171 samples, 0.05%)</title><rect x="78.5429%" y="997" width="0.0478%" height="15" fill="rgb(225,215,27)" fg:x="281080" fg:w="171"/><text x="78.7929%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (117 samples, 0.03%)</title><rect x="78.5907%" y="997" width="0.0327%" height="15" fill="rgb(221,192,48)" fg:x="281251" fg:w="117"/><text x="78.8407%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (45 samples, 0.01%)</title><rect x="78.6323%" y="997" width="0.0126%" height="15" fill="rgb(219,137,20)" fg:x="281400" fg:w="45"/><text x="78.8823%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="78.7234%" y="981" width="0.0112%" height="15" fill="rgb(219,84,11)" fg:x="281726" fg:w="40"/><text x="78.9734%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (67 samples, 0.02%)</title><rect x="78.8028%" y="933" width="0.0187%" height="15" fill="rgb(224,10,23)" fg:x="282010" fg:w="67"/><text x="79.0528%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (284 samples, 0.08%)</title><rect x="78.7715%" y="965" width="0.0794%" height="15" fill="rgb(248,22,39)" fg:x="281898" fg:w="284"/><text x="79.0215%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (224 samples, 0.06%)</title><rect x="78.7883%" y="949" width="0.0626%" height="15" fill="rgb(212,154,20)" fg:x="281958" fg:w="224"/><text x="79.0383%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (105 samples, 0.03%)</title><rect x="78.8215%" y="933" width="0.0293%" height="15" fill="rgb(236,199,50)" fg:x="282077" fg:w="105"/><text x="79.0715%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (457 samples, 0.13%)</title><rect x="78.7419%" y="981" width="0.1277%" height="15" fill="rgb(211,9,17)" fg:x="281792" fg:w="457"/><text x="78.9919%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (55 samples, 0.02%)</title><rect x="78.8542%" y="965" width="0.0154%" height="15" fill="rgb(243,216,36)" fg:x="282194" fg:w="55"/><text x="79.1042%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (829 samples, 0.23%)</title><rect x="78.6494%" y="997" width="0.2316%" height="15" fill="rgb(250,2,10)" fg:x="281461" fg:w="829"/><text x="78.8994%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (41 samples, 0.01%)</title><rect x="78.8696%" y="981" width="0.0115%" height="15" fill="rgb(226,50,48)" fg:x="282249" fg:w="41"/><text x="79.1196%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (51 samples, 0.01%)</title><rect x="78.8810%" y="997" width="0.0143%" height="15" fill="rgb(243,81,16)" fg:x="282290" fg:w="51"/><text x="79.1310%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.02%)</title><rect x="78.9280%" y="981" width="0.0165%" height="15" fill="rgb(250,14,2)" fg:x="282458" fg:w="59"/><text x="79.1780%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (144 samples, 0.04%)</title><rect x="78.9445%" y="981" width="0.0402%" height="15" fill="rgb(233,135,29)" fg:x="282517" fg:w="144"/><text x="79.1945%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="78.9917%" y="981" width="0.0131%" height="15" fill="rgb(224,64,43)" fg:x="282686" fg:w="47"/><text x="79.2417%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (47 samples, 0.01%)</title><rect x="79.0073%" y="981" width="0.0131%" height="15" fill="rgb(238,84,13)" fg:x="282742" fg:w="47"/><text x="79.2573%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (72 samples, 0.02%)</title><rect x="79.0560%" y="965" width="0.0201%" height="15" fill="rgb(253,48,26)" fg:x="282916" fg:w="72"/><text x="79.3060%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.02%)</title><rect x="79.0959%" y="933" width="0.0218%" height="15" fill="rgb(205,223,31)" fg:x="283059" fg:w="78"/><text x="79.3459%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.02%)</title><rect x="79.1021%" y="917" width="0.0156%" height="15" fill="rgb(221,41,32)" fg:x="283081" fg:w="56"/><text x="79.3521%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (103 samples, 0.03%)</title><rect x="79.0915%" y="949" width="0.0288%" height="15" fill="rgb(213,158,31)" fg:x="283043" fg:w="103"/><text x="79.3415%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (151 samples, 0.04%)</title><rect x="79.0794%" y="965" width="0.0422%" height="15" fill="rgb(245,126,43)" fg:x="283000" fg:w="151"/><text x="79.3294%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (394 samples, 0.11%)</title><rect x="79.0269%" y="981" width="0.1101%" height="15" fill="rgb(227,7,22)" fg:x="282812" fg:w="394"/><text x="79.2769%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 0.01%)</title><rect x="79.1244%" y="965" width="0.0126%" height="15" fill="rgb(252,90,44)" fg:x="283161" fg:w="45"/><text x="79.3744%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (119 samples, 0.03%)</title><rect x="79.1543%" y="965" width="0.0333%" height="15" fill="rgb(253,91,0)" fg:x="283268" fg:w="119"/><text x="79.4043%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (212 samples, 0.06%)</title><rect x="79.1879%" y="965" width="0.0592%" height="15" fill="rgb(252,175,49)" fg:x="283388" fg:w="212"/><text x="79.4379%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.03%)</title><rect x="79.2471%" y="965" width="0.0254%" height="15" fill="rgb(246,150,1)" fg:x="283600" fg:w="91"/><text x="79.4971%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (76 samples, 0.02%)</title><rect x="79.2868%" y="965" width="0.0212%" height="15" fill="rgb(241,192,25)" fg:x="283742" fg:w="76"/><text x="79.5368%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.02%)</title><rect x="79.3290%" y="949" width="0.0179%" height="15" fill="rgb(239,187,11)" fg:x="283893" fg:w="64"/><text x="79.5790%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (214 samples, 0.06%)</title><rect x="79.3469%" y="949" width="0.0598%" height="15" fill="rgb(218,202,51)" fg:x="283957" fg:w="214"/><text x="79.5969%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (43 samples, 0.01%)</title><rect x="79.3946%" y="933" width="0.0120%" height="15" fill="rgb(225,176,8)" fg:x="284128" fg:w="43"/><text x="79.6446%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (41 samples, 0.01%)</title><rect x="79.3952%" y="917" width="0.0115%" height="15" fill="rgb(219,122,41)" fg:x="284130" fg:w="41"/><text x="79.6452%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (315 samples, 0.09%)</title><rect x="79.4067%" y="949" width="0.0880%" height="15" fill="rgb(248,140,20)" fg:x="284171" fg:w="315"/><text x="79.6567%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (143 samples, 0.04%)</title><rect x="79.4947%" y="949" width="0.0400%" height="15" fill="rgb(245,41,37)" fg:x="284486" fg:w="143"/><text x="79.7447%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (66 samples, 0.02%)</title><rect x="79.5461%" y="949" width="0.0184%" height="15" fill="rgb(235,82,39)" fg:x="284670" fg:w="66"/><text x="79.7961%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (47 samples, 0.01%)</title><rect x="79.7246%" y="885" width="0.0131%" height="15" fill="rgb(230,108,42)" fg:x="285309" fg:w="47"/><text x="79.9746%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (182 samples, 0.05%)</title><rect x="79.7029%" y="917" width="0.0509%" height="15" fill="rgb(215,150,50)" fg:x="285231" fg:w="182"/><text x="79.9529%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 0.04%)</title><rect x="79.7160%" y="901" width="0.0377%" height="15" fill="rgb(233,212,5)" fg:x="285278" fg:w="135"/><text x="79.9660%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.02%)</title><rect x="79.7378%" y="885" width="0.0159%" height="15" fill="rgb(245,80,22)" fg:x="285356" fg:w="57"/><text x="79.9878%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (351 samples, 0.10%)</title><rect x="79.6721%" y="933" width="0.0981%" height="15" fill="rgb(238,129,16)" fg:x="285121" fg:w="351"/><text x="79.9221%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (54 samples, 0.02%)</title><rect x="79.7551%" y="917" width="0.0151%" height="15" fill="rgb(240,19,0)" fg:x="285418" fg:w="54"/><text x="80.0051%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (753 samples, 0.21%)</title><rect x="79.5704%" y="949" width="0.2104%" height="15" fill="rgb(232,42,35)" fg:x="284757" fg:w="753"/><text x="79.8204%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (38 samples, 0.01%)</title><rect x="79.7702%" y="933" width="0.0106%" height="15" fill="rgb(223,130,24)" fg:x="285472" fg:w="38"/><text x="80.0202%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (39 samples, 0.01%)</title><rect x="79.7808%" y="949" width="0.0109%" height="15" fill="rgb(237,16,22)" fg:x="285510" fg:w="39"/><text x="80.0308%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.02%)</title><rect x="79.8289%" y="933" width="0.0212%" height="15" fill="rgb(248,192,20)" fg:x="285682" fg:w="76"/><text x="80.0789%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (110 samples, 0.03%)</title><rect x="79.8501%" y="933" width="0.0307%" height="15" fill="rgb(233,167,2)" fg:x="285758" fg:w="110"/><text x="80.1001%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (74 samples, 0.02%)</title><rect x="79.8808%" y="933" width="0.0207%" height="15" fill="rgb(252,71,44)" fg:x="285868" fg:w="74"/><text x="80.1308%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.02%)</title><rect x="79.9015%" y="933" width="0.0162%" height="15" fill="rgb(238,37,47)" fg:x="285942" fg:w="58"/><text x="80.1515%" y="943.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (63 samples, 0.02%)</title><rect x="79.9197%" y="933" width="0.0176%" height="15" fill="rgb(214,202,54)" fg:x="286007" fg:w="63"/><text x="80.1697%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (43 samples, 0.01%)</title><rect x="79.9253%" y="917" width="0.0120%" height="15" fill="rgb(254,165,40)" fg:x="286027" fg:w="43"/><text x="80.1753%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="79.9658%" y="917" width="0.0156%" height="15" fill="rgb(246,173,38)" fg:x="286172" fg:w="56"/><text x="80.2158%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (137 samples, 0.04%)</title><rect x="80.0262%" y="885" width="0.0383%" height="15" fill="rgb(215,3,27)" fg:x="286388" fg:w="137"/><text x="80.2762%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (109 samples, 0.03%)</title><rect x="80.0340%" y="869" width="0.0305%" height="15" fill="rgb(239,169,51)" fg:x="286416" fg:w="109"/><text x="80.2840%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (60 samples, 0.02%)</title><rect x="80.0477%" y="853" width="0.0168%" height="15" fill="rgb(212,5,25)" fg:x="286465" fg:w="60"/><text x="80.2977%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (189 samples, 0.05%)</title><rect x="80.0139%" y="901" width="0.0528%" height="15" fill="rgb(243,45,17)" fg:x="286344" fg:w="189"/><text x="80.2639%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (255 samples, 0.07%)</title><rect x="79.9974%" y="917" width="0.0713%" height="15" fill="rgb(242,97,9)" fg:x="286285" fg:w="255"/><text x="80.2474%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.02%)</title><rect x="80.1555%" y="853" width="0.0249%" height="15" fill="rgb(228,71,31)" fg:x="286851" fg:w="89"/><text x="80.4055%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.02%)</title><rect x="80.1611%" y="837" width="0.0193%" height="15" fill="rgb(252,184,16)" fg:x="286871" fg:w="69"/><text x="80.4111%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.01%)</title><rect x="80.1698%" y="821" width="0.0106%" height="15" fill="rgb(236,169,46)" fg:x="286902" fg:w="38"/><text x="80.4198%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (116 samples, 0.03%)</title><rect x="80.1502%" y="869" width="0.0324%" height="15" fill="rgb(207,17,47)" fg:x="286832" fg:w="116"/><text x="80.4002%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (149 samples, 0.04%)</title><rect x="80.1418%" y="885" width="0.0416%" height="15" fill="rgb(206,201,28)" fg:x="286802" fg:w="149"/><text x="80.3918%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (324 samples, 0.09%)</title><rect x="80.1136%" y="901" width="0.0905%" height="15" fill="rgb(224,184,23)" fg:x="286701" fg:w="324"/><text x="80.3636%" y="911.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (67 samples, 0.02%)</title><rect x="80.1854%" y="885" width="0.0187%" height="15" fill="rgb(208,139,48)" fg:x="286958" fg:w="67"/><text x="80.4354%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (47 samples, 0.01%)</title><rect x="80.1910%" y="869" width="0.0131%" height="15" fill="rgb(208,130,10)" fg:x="286978" fg:w="47"/><text x="80.4410%" y="879.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (916 samples, 0.26%)</title><rect x="79.9493%" y="933" width="0.2560%" height="15" fill="rgb(211,213,45)" fg:x="286113" fg:w="916"/><text x="80.1993%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (479 samples, 0.13%)</title><rect x="80.0714%" y="917" width="0.1338%" height="15" fill="rgb(235,100,30)" fg:x="286550" fg:w="479"/><text x="80.3214%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (100 samples, 0.03%)</title><rect x="80.2310%" y="917" width="0.0279%" height="15" fill="rgb(206,144,31)" fg:x="287121" fg:w="100"/><text x="80.4810%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.03%)</title><rect x="80.2648%" y="917" width="0.0268%" height="15" fill="rgb(224,200,26)" fg:x="287242" fg:w="96"/><text x="80.5148%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.02%)</title><rect x="80.2916%" y="917" width="0.0224%" height="15" fill="rgb(247,104,53)" fg:x="287338" fg:w="80"/><text x="80.5416%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (41 samples, 0.01%)</title><rect x="80.3257%" y="917" width="0.0115%" height="15" fill="rgb(220,14,17)" fg:x="287460" fg:w="41"/><text x="80.5757%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (90 samples, 0.03%)</title><rect x="80.3523%" y="901" width="0.0251%" height="15" fill="rgb(230,140,40)" fg:x="287555" fg:w="90"/><text x="80.6023%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (154 samples, 0.04%)</title><rect x="80.3774%" y="901" width="0.0430%" height="15" fill="rgb(229,2,41)" fg:x="287645" fg:w="154"/><text x="80.6274%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (39 samples, 0.01%)</title><rect x="80.4204%" y="901" width="0.0109%" height="15" fill="rgb(232,89,16)" fg:x="287799" fg:w="39"/><text x="80.6704%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (219 samples, 0.06%)</title><rect x="80.4313%" y="901" width="0.0612%" height="15" fill="rgb(247,59,52)" fg:x="287838" fg:w="219"/><text x="80.6813%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (40 samples, 0.01%)</title><rect x="80.5744%" y="853" width="0.0112%" height="15" fill="rgb(226,110,21)" fg:x="288350" fg:w="40"/><text x="80.8244%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (48 samples, 0.01%)</title><rect x="80.5993%" y="837" width="0.0134%" height="15" fill="rgb(224,176,43)" fg:x="288439" fg:w="48"/><text x="80.8493%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (247 samples, 0.07%)</title><rect x="80.5702%" y="869" width="0.0690%" height="15" fill="rgb(221,73,6)" fg:x="288335" fg:w="247"/><text x="80.8202%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (184 samples, 0.05%)</title><rect x="80.5878%" y="853" width="0.0514%" height="15" fill="rgb(232,78,19)" fg:x="288398" fg:w="184"/><text x="80.8378%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (95 samples, 0.03%)</title><rect x="80.6127%" y="837" width="0.0265%" height="15" fill="rgb(233,112,48)" fg:x="288487" fg:w="95"/><text x="80.8627%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (388 samples, 0.11%)</title><rect x="80.5445%" y="885" width="0.1084%" height="15" fill="rgb(243,131,47)" fg:x="288243" fg:w="388"/><text x="80.7945%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (38 samples, 0.01%)</title><rect x="80.6423%" y="869" width="0.0106%" height="15" fill="rgb(226,51,1)" fg:x="288593" fg:w="38"/><text x="80.8923%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (560 samples, 0.16%)</title><rect x="80.5045%" y="901" width="0.1565%" height="15" fill="rgb(247,58,7)" fg:x="288100" fg:w="560"/><text x="80.7545%" y="911.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,361 samples, 0.38%)</title><rect x="80.3372%" y="917" width="0.3803%" height="15" fill="rgb(209,7,32)" fg:x="287501" fg:w="1361"/><text x="80.5872%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (169 samples, 0.05%)</title><rect x="80.6702%" y="901" width="0.0472%" height="15" fill="rgb(209,39,41)" fg:x="288693" fg:w="169"/><text x="80.9202%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (122 samples, 0.03%)</title><rect x="80.6834%" y="885" width="0.0341%" height="15" fill="rgb(226,182,46)" fg:x="288740" fg:w="122"/><text x="80.9334%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (5,076 samples, 1.42%)</title><rect x="79.3080%" y="965" width="1.4184%" height="15" fill="rgb(230,219,10)" fg:x="283818" fg:w="5076"/><text x="79.5580%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3,339 samples, 0.93%)</title><rect x="79.7934%" y="949" width="0.9330%" height="15" fill="rgb(227,175,30)" fg:x="285555" fg:w="3339"/><text x="80.0434%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,865 samples, 0.52%)</title><rect x="80.2053%" y="933" width="0.5211%" height="15" fill="rgb(217,2,50)" fg:x="287029" fg:w="1865"/><text x="80.4553%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (8,287 samples, 2.32%)</title><rect x="78.4286%" y="1013" width="2.3157%" height="15" fill="rgb(229,160,0)" fg:x="280671" fg:w="8287"/><text x="78.6786%" y="1023.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6,616 samples, 1.85%)</title><rect x="78.8956%" y="997" width="1.8487%" height="15" fill="rgb(207,78,37)" fg:x="282342" fg:w="6616"/><text x="79.1456%" y="1007.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5,752 samples, 1.61%)</title><rect x="79.1370%" y="981" width="1.6073%" height="15" fill="rgb(225,57,0)" fg:x="283206" fg:w="5752"/><text x="79.3870%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (64 samples, 0.02%)</title><rect x="80.7264%" y="965" width="0.0179%" height="15" fill="rgb(232,154,2)" fg:x="288894" fg:w="64"/><text x="80.9764%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (9,589 samples, 2.68%)</title><rect x="78.0760%" y="1045" width="2.6795%" height="15" fill="rgb(241,212,25)" fg:x="279409" fg:w="9589"/><text x="78.3260%" y="1055.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8,978 samples, 2.51%)</title><rect x="78.2467%" y="1029" width="2.5087%" height="15" fill="rgb(226,69,20)" fg:x="280020" fg:w="8978"/><text x="78.4967%" y="1039.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (40 samples, 0.01%)</title><rect x="80.7443%" y="1013" width="0.0112%" height="15" fill="rgb(247,184,54)" fg:x="288958" fg:w="40"/><text x="80.9943%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (66 samples, 0.02%)</title><rect x="80.7683%" y="1029" width="0.0184%" height="15" fill="rgb(210,145,0)" fg:x="289044" fg:w="66"/><text x="81.0183%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (58 samples, 0.02%)</title><rect x="80.8147%" y="1013" width="0.0162%" height="15" fill="rgb(253,82,12)" fg:x="289210" fg:w="58"/><text x="81.0647%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.02%)</title><rect x="80.8368%" y="1013" width="0.0170%" height="15" fill="rgb(245,42,11)" fg:x="289289" fg:w="61"/><text x="81.0868%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (64 samples, 0.02%)</title><rect x="80.8737%" y="997" width="0.0179%" height="15" fill="rgb(219,147,32)" fg:x="289421" fg:w="64"/><text x="81.1237%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (122 samples, 0.03%)</title><rect x="80.8591%" y="1013" width="0.0341%" height="15" fill="rgb(246,12,7)" fg:x="289369" fg:w="122"/><text x="81.1091%" y="1023.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (405 samples, 0.11%)</title><rect x="80.8019%" y="1029" width="0.1132%" height="15" fill="rgb(243,50,9)" fg:x="289164" fg:w="405"/><text x="81.0519%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (70 samples, 0.02%)</title><rect x="80.8955%" y="1013" width="0.0196%" height="15" fill="rgb(219,149,6)" fg:x="289499" fg:w="70"/><text x="81.1455%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (60 samples, 0.02%)</title><rect x="80.8983%" y="997" width="0.0168%" height="15" fill="rgb(241,51,42)" fg:x="289509" fg:w="60"/><text x="81.1483%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (11,189 samples, 3.13%)</title><rect x="77.7904%" y="1077" width="3.1266%" height="15" fill="rgb(226,128,27)" fg:x="278387" fg:w="11189"/><text x="78.0404%" y="1087.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10,454 samples, 2.92%)</title><rect x="77.9958%" y="1061" width="2.9212%" height="15" fill="rgb(244,144,4)" fg:x="279122" fg:w="10454"/><text x="78.2458%" y="1071.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (578 samples, 0.16%)</title><rect x="80.7555%" y="1045" width="0.1615%" height="15" fill="rgb(221,4,13)" fg:x="288998" fg:w="578"/><text x="81.0055%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (12,198 samples, 3.41%)</title><rect x="77.5191%" y="1109" width="3.4085%" height="15" fill="rgb(208,170,28)" fg:x="277416" fg:w="12198"/><text x="77.7691%" y="1119.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11,525 samples, 3.22%)</title><rect x="77.7071%" y="1093" width="3.2205%" height="15" fill="rgb(226,131,13)" fg:x="278089" fg:w="11525"/><text x="77.9571%" y="1103.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 0.01%)</title><rect x="80.9170%" y="1077" width="0.0106%" height="15" fill="rgb(215,72,41)" fg:x="289576" fg:w="38"/><text x="81.1670%" y="1087.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13,663 samples, 3.82%)</title><rect x="77.1122%" y="1125" width="3.8179%" height="15" fill="rgb(243,108,20)" fg:x="275960" fg:w="13663"/><text x="77.3622%" y="1135.50">sk-g..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 samples, 0.01%)</title><rect x="80.9402%" y="1109" width="0.0148%" height="15" fill="rgb(230,189,17)" fg:x="289659" fg:w="53"/><text x="81.1902%" y="1119.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 samples, 0.03%)</title><rect x="81.0134%" y="1077" width="0.0263%" height="15" fill="rgb(220,50,17)" fg:x="289921" fg:w="94"/><text x="81.2634%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.01%)</title><rect x="81.0623%" y="1061" width="0.0109%" height="15" fill="rgb(248,152,48)" fg:x="290096" fg:w="39"/><text x="81.3123%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (218 samples, 0.06%)</title><rect x="81.0777%" y="1061" width="0.0609%" height="15" fill="rgb(244,91,11)" fg:x="290151" fg:w="218"/><text x="81.3277%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.02%)</title><rect x="81.2383%" y="1045" width="0.0151%" height="15" fill="rgb(220,157,5)" fg:x="290726" fg:w="54"/><text x="81.4883%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (43 samples, 0.01%)</title><rect x="81.2643%" y="1029" width="0.0120%" height="15" fill="rgb(253,137,8)" fg:x="290819" fg:w="43"/><text x="81.5143%" y="1039.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (244 samples, 0.07%)</title><rect x="81.2856%" y="1029" width="0.0682%" height="15" fill="rgb(217,137,51)" fg:x="290895" fg:w="244"/><text x="81.5356%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (39 samples, 0.01%)</title><rect x="81.3889%" y="1013" width="0.0109%" height="15" fill="rgb(218,209,53)" fg:x="291265" fg:w="39"/><text x="81.6389%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.02%)</title><rect x="81.4046%" y="1013" width="0.0238%" height="15" fill="rgb(249,137,25)" fg:x="291321" fg:w="85"/><text x="81.6546%" y="1023.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (302 samples, 0.08%)</title><rect x="81.4367%" y="1013" width="0.0844%" height="15" fill="rgb(239,155,26)" fg:x="291436" fg:w="302"/><text x="81.6867%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.02%)</title><rect x="81.5792%" y="997" width="0.0176%" height="15" fill="rgb(227,85,46)" fg:x="291946" fg:w="63"/><text x="81.8292%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (90 samples, 0.03%)</title><rect x="81.5968%" y="997" width="0.0251%" height="15" fill="rgb(251,107,43)" fg:x="292009" fg:w="90"/><text x="81.8468%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (75 samples, 0.02%)</title><rect x="81.6443%" y="981" width="0.0210%" height="15" fill="rgb(234,170,33)" fg:x="292179" fg:w="75"/><text x="81.8943%" y="991.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (215 samples, 0.06%)</title><rect x="81.6734%" y="981" width="0.0601%" height="15" fill="rgb(206,29,35)" fg:x="292283" fg:w="215"/><text x="81.9234%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="81.7757%" y="965" width="0.0226%" height="15" fill="rgb(227,138,25)" fg:x="292649" fg:w="81"/><text x="82.0257%" y="975.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (365 samples, 0.10%)</title><rect x="81.8050%" y="965" width="0.1020%" height="15" fill="rgb(249,131,35)" fg:x="292754" fg:w="365"/><text x="82.0550%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.01%)</title><rect x="81.9844%" y="949" width="0.0145%" height="15" fill="rgb(239,6,40)" fg:x="293396" fg:w="52"/><text x="82.2344%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (81 samples, 0.02%)</title><rect x="81.9989%" y="949" width="0.0226%" height="15" fill="rgb(246,136,47)" fg:x="293448" fg:w="81"/><text x="82.2489%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (66 samples, 0.02%)</title><rect x="82.0523%" y="933" width="0.0184%" height="15" fill="rgb(253,58,26)" fg:x="293639" fg:w="66"/><text x="82.3023%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="82.0708%" y="933" width="0.0126%" height="15" fill="rgb(237,141,10)" fg:x="293705" fg:w="45"/><text x="82.3208%" y="943.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (281 samples, 0.08%)</title><rect x="82.0833%" y="933" width="0.0785%" height="15" fill="rgb(234,156,12)" fg:x="293750" fg:w="281"/><text x="82.3333%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.03%)</title><rect x="82.2155%" y="917" width="0.0305%" height="15" fill="rgb(243,224,36)" fg:x="294223" fg:w="109"/><text x="82.4655%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (382 samples, 0.11%)</title><rect x="82.2499%" y="917" width="0.1067%" height="15" fill="rgb(205,229,51)" fg:x="294346" fg:w="382"/><text x="82.4999%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (50 samples, 0.01%)</title><rect x="82.4097%" y="901" width="0.0140%" height="15" fill="rgb(223,189,4)" fg:x="294918" fg:w="50"/><text x="82.6597%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.02%)</title><rect x="82.4435%" y="885" width="0.0156%" height="15" fill="rgb(249,167,54)" fg:x="295039" fg:w="56"/><text x="82.6935%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (102 samples, 0.03%)</title><rect x="82.4715%" y="869" width="0.0285%" height="15" fill="rgb(218,34,28)" fg:x="295139" fg:w="102"/><text x="82.7215%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (168 samples, 0.05%)</title><rect x="82.4592%" y="885" width="0.0469%" height="15" fill="rgb(232,109,42)" fg:x="295095" fg:w="168"/><text x="82.7092%" y="895.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (265 samples, 0.07%)</title><rect x="82.4332%" y="901" width="0.0740%" height="15" fill="rgb(248,214,46)" fg:x="295002" fg:w="265"/><text x="82.6832%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (129 samples, 0.04%)</title><rect x="82.5254%" y="885" width="0.0360%" height="15" fill="rgb(244,216,40)" fg:x="295332" fg:w="129"/><text x="82.7754%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (50 samples, 0.01%)</title><rect x="82.6243%" y="869" width="0.0140%" height="15" fill="rgb(231,226,31)" fg:x="295686" fg:w="50"/><text x="82.8743%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (292 samples, 0.08%)</title><rect x="82.6738%" y="853" width="0.0816%" height="15" fill="rgb(238,38,43)" fg:x="295863" fg:w="292"/><text x="82.9238%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_free (46 samples, 0.01%)</title><rect x="82.7917%" y="837" width="0.0129%" height="15" fill="rgb(208,88,43)" fg:x="296285" fg:w="46"/><text x="83.0417%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="82.8149%" y="837" width="0.0212%" height="15" fill="rgb(205,136,37)" fg:x="296368" fg:w="76"/><text x="83.0649%" y="847.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (473 samples, 0.13%)</title><rect x="82.8381%" y="837" width="0.1322%" height="15" fill="rgb(237,34,14)" fg:x="296451" fg:w="473"/><text x="83.0881%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (98 samples, 0.03%)</title><rect x="83.0331%" y="821" width="0.0274%" height="15" fill="rgb(236,193,44)" fg:x="297149" fg:w="98"/><text x="83.2831%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (50 samples, 0.01%)</title><rect x="83.0605%" y="821" width="0.0140%" height="15" fill="rgb(231,48,10)" fg:x="297247" fg:w="50"/><text x="83.3105%" y="831.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.02%)</title><rect x="83.0966%" y="805" width="0.0156%" height="15" fill="rgb(213,141,34)" fg:x="297376" fg:w="56"/><text x="83.3466%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.02%)</title><rect x="83.1223%" y="789" width="0.0187%" height="15" fill="rgb(249,130,34)" fg:x="297468" fg:w="67"/><text x="83.3723%" y="799.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (131 samples, 0.04%)</title><rect x="83.1427%" y="789" width="0.0366%" height="15" fill="rgb(219,42,41)" fg:x="297541" fg:w="131"/><text x="83.3927%" y="799.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.01%)</title><rect x="83.2371%" y="741" width="0.0134%" height="15" fill="rgb(224,100,54)" fg:x="297879" fg:w="48"/><text x="83.4871%" y="751.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.03%)</title><rect x="83.2276%" y="757" width="0.0277%" height="15" fill="rgb(229,200,27)" fg:x="297845" fg:w="99"/><text x="83.4776%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (164 samples, 0.05%)</title><rect x="83.2111%" y="773" width="0.0458%" height="15" fill="rgb(217,118,10)" fg:x="297786" fg:w="164"/><text x="83.4611%" y="783.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (294 samples, 0.08%)</title><rect x="83.1793%" y="789" width="0.0822%" height="15" fill="rgb(206,22,3)" fg:x="297672" fg:w="294"/><text x="83.4293%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (537 samples, 0.15%)</title><rect x="83.1122%" y="805" width="0.1501%" height="15" fill="rgb(232,163,46)" fg:x="297432" fg:w="537"/><text x="83.3622%" y="815.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (662 samples, 0.18%)</title><rect x="83.0795%" y="821" width="0.1850%" height="15" fill="rgb(206,95,13)" fg:x="297315" fg:w="662"/><text x="83.3295%" y="831.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (171 samples, 0.05%)</title><rect x="83.3025%" y="805" width="0.0478%" height="15" fill="rgb(253,154,18)" fg:x="298113" fg:w="171"/><text x="83.5525%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="83.3902%" y="789" width="0.0112%" height="15" fill="rgb(219,32,23)" fg:x="298427" fg:w="40"/><text x="83.6402%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (66 samples, 0.02%)</title><rect x="83.4014%" y="789" width="0.0184%" height="15" fill="rgb(230,191,45)" fg:x="298467" fg:w="66"/><text x="83.6514%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (46 samples, 0.01%)</title><rect x="83.4408%" y="773" width="0.0129%" height="15" fill="rgb(229,64,36)" fg:x="298608" fg:w="46"/><text x="83.6908%" y="783.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 samples, 0.04%)</title><rect x="83.4601%" y="773" width="0.0450%" height="15" fill="rgb(205,129,25)" fg:x="298677" fg:w="161"/><text x="83.7101%" y="783.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.02%)</title><rect x="83.5344%" y="757" width="0.0173%" height="15" fill="rgb(254,112,7)" fg:x="298943" fg:w="62"/><text x="83.7844%" y="767.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (484 samples, 0.14%)</title><rect x="83.5518%" y="757" width="0.1352%" height="15" fill="rgb(226,53,48)" fg:x="299005" fg:w="484"/><text x="83.8018%" y="767.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (713 samples, 0.20%)</title><rect x="83.5051%" y="773" width="0.1992%" height="15" fill="rgb(214,153,38)" fg:x="298838" fg:w="713"/><text x="83.7551%" y="783.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (62 samples, 0.02%)</title><rect x="83.6870%" y="757" width="0.0173%" height="15" fill="rgb(243,101,7)" fg:x="299489" fg:w="62"/><text x="83.9370%" y="767.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,012 samples, 0.28%)</title><rect x="83.4269%" y="789" width="0.2828%" height="15" fill="rgb(240,140,22)" fg:x="298558" fg:w="1012"/><text x="83.6769%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.02%)</title><rect x="83.7096%" y="789" width="0.0182%" height="15" fill="rgb(235,114,2)" fg:x="299570" fg:w="65"/><text x="83.9596%" y="799.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (1,369 samples, 0.38%)</title><rect x="83.3503%" y="805" width="0.3825%" height="15" fill="rgb(242,59,12)" fg:x="298284" fg:w="1369"/><text x="83.6003%" y="815.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,690 samples, 0.47%)</title><rect x="83.2645%" y="821" width="0.4722%" height="15" fill="rgb(252,134,9)" fg:x="297977" fg:w="1690"/><text x="83.5145%" y="831.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (2,785 samples, 0.78%)</title><rect x="82.9711%" y="837" width="0.7782%" height="15" fill="rgb(236,4,44)" fg:x="296927" fg:w="2785"/><text x="83.2211%" y="847.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,587 samples, 1.00%)</title><rect x="82.7554%" y="853" width="1.0023%" height="15" fill="rgb(254,172,41)" fg:x="296155" fg:w="3587"/><text x="83.0054%" y="863.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,017 samples, 1.12%)</title><rect x="82.6430%" y="869" width="1.1225%" height="15" fill="rgb(244,63,20)" fg:x="295753" fg:w="4017"/><text x="82.8930%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.02%)</title><rect x="83.7655%" y="869" width="0.0226%" height="15" fill="rgb(250,73,31)" fg:x="299770" fg:w="81"/><text x="84.0155%" y="879.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (4,397 samples, 1.23%)</title><rect x="82.5614%" y="885" width="1.2287%" height="15" fill="rgb(241,38,36)" fg:x="295461" fg:w="4397"/><text x="82.8114%" y="895.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,599 samples, 1.29%)</title><rect x="82.5072%" y="901" width="1.2851%" height="15" fill="rgb(245,211,2)" fg:x="295267" fg:w="4599"/><text x="82.7572%" y="911.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (5,161 samples, 1.44%)</title><rect x="82.3572%" y="917" width="1.4422%" height="15" fill="rgb(206,120,28)" fg:x="294730" fg:w="5161"/><text x="82.6072%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,888 samples, 1.65%)</title><rect x="82.1619%" y="933" width="1.6453%" height="15" fill="rgb(211,59,34)" fg:x="294031" fg:w="5888"/><text x="82.4119%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,382 samples, 1.78%)</title><rect x="82.0336%" y="949" width="1.7833%" height="15" fill="rgb(233,168,5)" fg:x="293572" fg:w="6382"/><text x="82.2836%" y="959.50">s..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.02%)</title><rect x="83.8169%" y="949" width="0.0240%" height="15" fill="rgb(234,33,13)" fg:x="299954" fg:w="86"/><text x="84.0669%" y="959.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (6,936 samples, 1.94%)</title><rect x="81.9070%" y="965" width="1.9381%" height="15" fill="rgb(231,150,26)" fg:x="293119" fg:w="6936"/><text x="82.1570%" y="975.50">s..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,572 samples, 2.12%)</title><rect x="81.7335%" y="981" width="2.1159%" height="15" fill="rgb(217,191,4)" fg:x="292498" fg:w="7572"/><text x="81.9835%" y="991.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,971 samples, 2.23%)</title><rect x="81.6293%" y="997" width="2.2274%" height="15" fill="rgb(246,198,38)" fg:x="292125" fg:w="7971"/><text x="81.8793%" y="1007.50">s..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (76 samples, 0.02%)</title><rect x="83.9058%" y="933" width="0.0212%" height="15" fill="rgb(245,64,37)" fg:x="300272" fg:w="76"/><text x="84.1558%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.04%)</title><rect x="83.8957%" y="949" width="0.0372%" height="15" fill="rgb(250,30,36)" fg:x="300236" fg:w="133"/><text x="84.1457%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (182 samples, 0.05%)</title><rect x="83.8834%" y="965" width="0.0509%" height="15" fill="rgb(217,86,53)" fg:x="300192" fg:w="182"/><text x="84.1334%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.08%)</title><rect x="83.8566%" y="997" width="0.0827%" height="15" fill="rgb(228,157,16)" fg:x="300096" fg:w="296"/><text x="84.1066%" y="1007.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (259 samples, 0.07%)</title><rect x="83.8670%" y="981" width="0.0724%" height="15" fill="rgb(217,59,31)" fg:x="300133" fg:w="259"/><text x="84.1170%" y="991.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.02%)</title><rect x="83.9393%" y="997" width="0.0187%" height="15" fill="rgb(237,138,41)" fg:x="300392" fg:w="67"/><text x="84.1893%" y="1007.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (8,731 samples, 2.44%)</title><rect x="81.5214%" y="1013" width="2.4397%" height="15" fill="rgb(227,91,49)" fg:x="291739" fg:w="8731"/><text x="81.7714%" y="1023.50">sk..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,357 samples, 2.61%)</title><rect x="81.3537%" y="1029" width="2.6147%" height="15" fill="rgb(247,21,44)" fg:x="291139" fg:w="9357"/><text x="81.6037%" y="1039.50">sk..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,752 samples, 2.73%)</title><rect x="81.2534%" y="1045" width="2.7250%" height="15" fill="rgb(219,210,51)" fg:x="290780" fg:w="9752"/><text x="81.5034%" y="1055.50">sk..</text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (36 samples, 0.01%)</title><rect x="83.9684%" y="1029" width="0.0101%" height="15" fill="rgb(209,140,6)" fg:x="300496" fg:w="36"/><text x="84.2184%" y="1039.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.03%)</title><rect x="83.9785%" y="1045" width="0.0251%" height="15" fill="rgb(221,188,24)" fg:x="300532" fg:w="90"/><text x="84.2285%" y="1055.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (10,257 samples, 2.87%)</title><rect x="81.1386%" y="1061" width="2.8661%" height="15" fill="rgb(232,154,20)" fg:x="290369" fg:w="10257"/><text x="81.3886%" y="1071.50">sk..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,625 samples, 2.97%)</title><rect x="81.0397%" y="1077" width="2.9690%" height="15" fill="rgb(244,137,50)" fg:x="290015" fg:w="10625"/><text x="81.2897%" y="1087.50">sk-..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,793 samples, 3.02%)</title><rect x="80.9972%" y="1093" width="3.0159%" height="15" fill="rgb(225,185,43)" fg:x="289863" fg:w="10793"/><text x="81.2472%" y="1103.50">sk-..</text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (10,977 samples, 3.07%)</title><rect x="80.9550%" y="1109" width="3.0673%" height="15" fill="rgb(213,205,38)" fg:x="289712" fg:w="10977"/><text x="81.2050%" y="1119.50">sk-..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::hash::Hash&gt;::hash (34,046 samples, 9.51%)</title><rect x="74.5099%" y="1141" width="9.5136%" height="15" fill="rgb(236,73,12)" fg:x="266647" fg:w="34046"/><text x="74.7599%" y="1151.50">sk-gen`&lt;sk_gen..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (11,070 samples, 3.09%)</title><rect x="80.9301%" y="1125" width="3.0933%" height="15" fill="rgb(235,219,13)" fg:x="289623" fg:w="11070"/><text x="81.1801%" y="1135.50">sk-..</text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (34,082 samples, 9.52%)</title><rect x="74.5012%" y="1157" width="9.5236%" height="15" fill="rgb(218,59,36)" fg:x="266616" fg:w="34082"/><text x="74.7512%" y="1167.50">sk-gen`core::h..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (83 samples, 0.02%)</title><rect x="84.0248%" y="1157" width="0.0232%" height="15" fill="rgb(205,110,39)" fg:x="300698" fg:w="83"/><text x="84.2748%" y="1167.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (82 samples, 0.02%)</title><rect x="84.0251%" y="1141" width="0.0229%" height="15" fill="rgb(218,206,42)" fg:x="300699" fg:w="82"/><text x="84.2751%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (74 samples, 0.02%)</title><rect x="84.0274%" y="1125" width="0.0207%" height="15" fill="rgb(248,125,24)" fg:x="300707" fg:w="74"/><text x="84.2774%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (63 samples, 0.02%)</title><rect x="84.0304%" y="1109" width="0.0176%" height="15" fill="rgb(242,28,27)" fg:x="300718" fg:w="63"/><text x="84.2804%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (40 samples, 0.01%)</title><rect x="84.0369%" y="1093" width="0.0112%" height="15" fill="rgb(216,228,15)" fg:x="300741" fg:w="40"/><text x="84.2869%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (253 samples, 0.07%)</title><rect x="84.0721%" y="1141" width="0.0707%" height="15" fill="rgb(235,116,46)" fg:x="300867" fg:w="253"/><text x="84.3221%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (38 samples, 0.01%)</title><rect x="84.1456%" y="1141" width="0.0106%" height="15" fill="rgb(224,18,32)" fg:x="301130" fg:w="38"/><text x="84.3956%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (38 samples, 0.01%)</title><rect x="84.1456%" y="1125" width="0.0106%" height="15" fill="rgb(252,5,12)" fg:x="301130" fg:w="38"/><text x="84.3956%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`madvise (38 samples, 0.01%)</title><rect x="84.1456%" y="1109" width="0.0106%" height="15" fill="rgb(251,36,5)" fg:x="301130" fg:w="38"/><text x="84.3956%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (201 samples, 0.06%)</title><rect x="84.1794%" y="1125" width="0.0562%" height="15" fill="rgb(217,53,14)" fg:x="301251" fg:w="201"/><text x="84.4294%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (138 samples, 0.04%)</title><rect x="84.1970%" y="1109" width="0.0386%" height="15" fill="rgb(215,86,45)" fg:x="301314" fg:w="138"/><text x="84.4470%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (49 samples, 0.01%)</title><rect x="84.2218%" y="1093" width="0.0137%" height="15" fill="rgb(242,169,11)" fg:x="301403" fg:w="49"/><text x="84.4718%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (710 samples, 0.20%)</title><rect x="84.0480%" y="1157" width="0.1984%" height="15" fill="rgb(211,213,45)" fg:x="300781" fg:w="710"/><text x="84.2980%" y="1167.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (302 samples, 0.08%)</title><rect x="84.1620%" y="1141" width="0.0844%" height="15" fill="rgb(205,88,11)" fg:x="301189" fg:w="302"/><text x="84.4120%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (54 samples, 0.02%)</title><rect x="84.2509%" y="1141" width="0.0151%" height="15" fill="rgb(252,69,26)" fg:x="301507" fg:w="54"/><text x="84.5009%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (59 samples, 0.02%)</title><rect x="84.2660%" y="1141" width="0.0165%" height="15" fill="rgb(246,123,37)" fg:x="301561" fg:w="59"/><text x="84.5160%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (44 samples, 0.01%)</title><rect x="84.2839%" y="1141" width="0.0123%" height="15" fill="rgb(212,205,5)" fg:x="301625" fg:w="44"/><text x="84.5339%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (44 samples, 0.01%)</title><rect x="84.2839%" y="1125" width="0.0123%" height="15" fill="rgb(253,148,0)" fg:x="301625" fg:w="44"/><text x="84.5339%" y="1135.50"></text></g><g><title>libsystem_kernel.dylib`madvise (44 samples, 0.01%)</title><rect x="84.2839%" y="1109" width="0.0123%" height="15" fill="rgb(239,22,4)" fg:x="301625" fg:w="44"/><text x="84.5339%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (94 samples, 0.03%)</title><rect x="84.3191%" y="1125" width="0.0263%" height="15" fill="rgb(226,26,53)" fg:x="301751" fg:w="94"/><text x="84.5691%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (68 samples, 0.02%)</title><rect x="84.3263%" y="1109" width="0.0190%" height="15" fill="rgb(225,229,45)" fg:x="301777" fg:w="68"/><text x="84.5763%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (169 samples, 0.05%)</title><rect x="84.3032%" y="1141" width="0.0472%" height="15" fill="rgb(220,60,37)" fg:x="301694" fg:w="169"/><text x="84.5532%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_free (76 samples, 0.02%)</title><rect x="84.3671%" y="1125" width="0.0212%" height="15" fill="rgb(217,180,35)" fg:x="301923" fg:w="76"/><text x="84.6171%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (157 samples, 0.04%)</title><rect x="84.3884%" y="1125" width="0.0439%" height="15" fill="rgb(229,7,53)" fg:x="301999" fg:w="157"/><text x="84.6384%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (80 samples, 0.02%)</title><rect x="84.4325%" y="1125" width="0.0224%" height="15" fill="rgb(254,137,3)" fg:x="302157" fg:w="80"/><text x="84.6825%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (80 samples, 0.02%)</title><rect x="84.4325%" y="1109" width="0.0224%" height="15" fill="rgb(215,140,41)" fg:x="302157" fg:w="80"/><text x="84.6825%" y="1119.50"></text></g><g><title>libsystem_kernel.dylib`madvise (80 samples, 0.02%)</title><rect x="84.4325%" y="1093" width="0.0224%" height="15" fill="rgb(250,80,15)" fg:x="302157" fg:w="80"/><text x="84.6825%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (142 samples, 0.04%)</title><rect x="84.4932%" y="1109" width="0.0397%" height="15" fill="rgb(252,191,6)" fg:x="302374" fg:w="142"/><text x="84.7432%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (110 samples, 0.03%)</title><rect x="84.5021%" y="1093" width="0.0307%" height="15" fill="rgb(246,217,18)" fg:x="302406" fg:w="110"/><text x="84.7521%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (252 samples, 0.07%)</title><rect x="84.4663%" y="1125" width="0.0704%" height="15" fill="rgb(223,93,7)" fg:x="302278" fg:w="252"/><text x="84.7163%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (211 samples, 0.06%)</title><rect x="84.5524%" y="1109" width="0.0590%" height="15" fill="rgb(225,55,52)" fg:x="302586" fg:w="211"/><text x="84.8024%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (155 samples, 0.04%)</title><rect x="84.6114%" y="1109" width="0.0433%" height="15" fill="rgb(240,31,24)" fg:x="302797" fg:w="155"/><text x="84.8614%" y="1119.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (84 samples, 0.02%)</title><rect x="84.6608%" y="1109" width="0.0235%" height="15" fill="rgb(205,56,52)" fg:x="302974" fg:w="84"/><text x="84.9108%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (312 samples, 0.09%)</title><rect x="84.7284%" y="1093" width="0.0872%" height="15" fill="rgb(246,146,12)" fg:x="303216" fg:w="312"/><text x="84.9784%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (234 samples, 0.07%)</title><rect x="84.7502%" y="1077" width="0.0654%" height="15" fill="rgb(239,84,36)" fg:x="303294" fg:w="234"/><text x="85.0002%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (66 samples, 0.02%)</title><rect x="84.7972%" y="1061" width="0.0184%" height="15" fill="rgb(207,41,40)" fg:x="303462" fg:w="66"/><text x="85.0472%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (535 samples, 0.15%)</title><rect x="84.6849%" y="1109" width="0.1495%" height="15" fill="rgb(241,179,25)" fg:x="303060" fg:w="535"/><text x="84.9349%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.02%)</title><rect x="84.8173%" y="1093" width="0.0170%" height="15" fill="rgb(210,0,34)" fg:x="303534" fg:w="61"/><text x="85.0673%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (39 samples, 0.01%)</title><rect x="84.8374%" y="1093" width="0.0109%" height="15" fill="rgb(225,217,29)" fg:x="303606" fg:w="39"/><text x="85.0874%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (109 samples, 0.03%)</title><rect x="84.8601%" y="1077" width="0.0305%" height="15" fill="rgb(216,191,38)" fg:x="303687" fg:w="109"/><text x="85.1101%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (60 samples, 0.02%)</title><rect x="84.8986%" y="1077" width="0.0168%" height="15" fill="rgb(232,140,52)" fg:x="303825" fg:w="60"/><text x="85.1486%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (296 samples, 0.08%)</title><rect x="84.8344%" y="1109" width="0.0827%" height="15" fill="rgb(223,158,51)" fg:x="303595" fg:w="296"/><text x="85.0844%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (213 samples, 0.06%)</title><rect x="84.8575%" y="1093" width="0.0595%" height="15" fill="rgb(235,29,51)" fg:x="303678" fg:w="213"/><text x="85.1075%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (59 samples, 0.02%)</title><rect x="84.9436%" y="1093" width="0.0165%" height="15" fill="rgb(215,181,18)" fg:x="303986" fg:w="59"/><text x="85.1936%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (509 samples, 0.14%)</title><rect x="84.9601%" y="1093" width="0.1422%" height="15" fill="rgb(227,125,34)" fg:x="304045" fg:w="509"/><text x="85.2101%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (69 samples, 0.02%)</title><rect x="85.1082%" y="1093" width="0.0193%" height="15" fill="rgb(230,197,49)" fg:x="304575" fg:w="69"/><text x="85.3582%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (69 samples, 0.02%)</title><rect x="85.1082%" y="1077" width="0.0193%" height="15" fill="rgb(239,141,16)" fg:x="304575" fg:w="69"/><text x="85.3582%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`madvise (69 samples, 0.02%)</title><rect x="85.1082%" y="1061" width="0.0193%" height="15" fill="rgb(225,105,43)" fg:x="304575" fg:w="69"/><text x="85.3582%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (323 samples, 0.09%)</title><rect x="85.1954%" y="1077" width="0.0903%" height="15" fill="rgb(214,131,14)" fg:x="304887" fg:w="323"/><text x="85.4454%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (205 samples, 0.06%)</title><rect x="85.2284%" y="1061" width="0.0573%" height="15" fill="rgb(229,177,11)" fg:x="305005" fg:w="205"/><text x="85.4784%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (589 samples, 0.16%)</title><rect x="85.1440%" y="1093" width="0.1646%" height="15" fill="rgb(231,180,14)" fg:x="304703" fg:w="589"/><text x="85.3940%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (68 samples, 0.02%)</title><rect x="85.2895%" y="1077" width="0.0190%" height="15" fill="rgb(232,88,2)" fg:x="305224" fg:w="68"/><text x="85.5395%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (103 samples, 0.03%)</title><rect x="85.3446%" y="1077" width="0.0288%" height="15" fill="rgb(205,220,8)" fg:x="305421" fg:w="103"/><text x="85.5946%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (55 samples, 0.02%)</title><rect x="85.3751%" y="1077" width="0.0154%" height="15" fill="rgb(225,23,53)" fg:x="305530" fg:w="55"/><text x="85.6251%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (55 samples, 0.02%)</title><rect x="85.3751%" y="1061" width="0.0154%" height="15" fill="rgb(213,62,29)" fg:x="305530" fg:w="55"/><text x="85.6251%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`madvise (55 samples, 0.02%)</title><rect x="85.3751%" y="1045" width="0.0154%" height="15" fill="rgb(227,75,7)" fg:x="305530" fg:w="55"/><text x="85.6251%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (65 samples, 0.02%)</title><rect x="85.4052%" y="1061" width="0.0182%" height="15" fill="rgb(207,105,14)" fg:x="305638" fg:w="65"/><text x="85.6552%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (114 samples, 0.03%)</title><rect x="85.3952%" y="1077" width="0.0319%" height="15" fill="rgb(245,62,29)" fg:x="305602" fg:w="114"/><text x="85.6452%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (168 samples, 0.05%)</title><rect x="85.4309%" y="1061" width="0.0469%" height="15" fill="rgb(236,202,4)" fg:x="305730" fg:w="168"/><text x="85.6809%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (46 samples, 0.01%)</title><rect x="85.4779%" y="1061" width="0.0129%" height="15" fill="rgb(250,67,1)" fg:x="305898" fg:w="46"/><text x="85.7279%" y="1071.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (75 samples, 0.02%)</title><rect x="85.4910%" y="1061" width="0.0210%" height="15" fill="rgb(253,115,44)" fg:x="305945" fg:w="75"/><text x="85.7410%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (38 samples, 0.01%)</title><rect x="85.5125%" y="1061" width="0.0106%" height="15" fill="rgb(251,139,18)" fg:x="306022" fg:w="38"/><text x="85.7625%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (51 samples, 0.01%)</title><rect x="85.5335%" y="1045" width="0.0143%" height="15" fill="rgb(218,22,32)" fg:x="306097" fg:w="51"/><text x="85.7835%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (502 samples, 0.14%)</title><rect x="85.5477%" y="1045" width="0.1403%" height="15" fill="rgb(243,53,5)" fg:x="306148" fg:w="502"/><text x="85.7977%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (78 samples, 0.02%)</title><rect x="85.6995%" y="1045" width="0.0218%" height="15" fill="rgb(227,56,16)" fg:x="306691" fg:w="78"/><text x="85.9495%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (255 samples, 0.07%)</title><rect x="85.7668%" y="1029" width="0.0713%" height="15" fill="rgb(245,53,0)" fg:x="306932" fg:w="255"/><text x="86.0168%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (193 samples, 0.05%)</title><rect x="85.7841%" y="1013" width="0.0539%" height="15" fill="rgb(216,170,35)" fg:x="306994" fg:w="193"/><text x="86.0341%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (39 samples, 0.01%)</title><rect x="85.8272%" y="997" width="0.0109%" height="15" fill="rgb(211,200,8)" fg:x="307148" fg:w="39"/><text x="86.0772%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (425 samples, 0.12%)</title><rect x="85.7277%" y="1045" width="0.1188%" height="15" fill="rgb(228,204,44)" fg:x="306792" fg:w="425"/><text x="85.9777%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_free (49 samples, 0.01%)</title><rect x="85.8730%" y="1029" width="0.0137%" height="15" fill="rgb(214,121,17)" fg:x="307312" fg:w="49"/><text x="86.1230%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (96 samples, 0.03%)</title><rect x="85.8867%" y="1029" width="0.0268%" height="15" fill="rgb(233,64,38)" fg:x="307361" fg:w="96"/><text x="86.1367%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (199 samples, 0.06%)</title><rect x="85.9512%" y="1013" width="0.0556%" height="15" fill="rgb(253,54,19)" fg:x="307592" fg:w="199"/><text x="86.2012%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (139 samples, 0.04%)</title><rect x="85.9680%" y="997" width="0.0388%" height="15" fill="rgb(253,94,18)" fg:x="307652" fg:w="139"/><text x="86.2180%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (331 samples, 0.09%)</title><rect x="85.9303%" y="1029" width="0.0925%" height="15" fill="rgb(227,57,52)" fg:x="307517" fg:w="331"/><text x="86.1803%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (49 samples, 0.01%)</title><rect x="86.0091%" y="1013" width="0.0137%" height="15" fill="rgb(230,228,50)" fg:x="307799" fg:w="49"/><text x="86.2591%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (144 samples, 0.04%)</title><rect x="86.0429%" y="1013" width="0.0402%" height="15" fill="rgb(217,205,27)" fg:x="307920" fg:w="144"/><text x="86.2929%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (74 samples, 0.02%)</title><rect x="86.0831%" y="1013" width="0.0207%" height="15" fill="rgb(252,71,50)" fg:x="308064" fg:w="74"/><text x="86.3331%" y="1023.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (53 samples, 0.01%)</title><rect x="86.1105%" y="1013" width="0.0148%" height="15" fill="rgb(209,86,4)" fg:x="308162" fg:w="53"/><text x="86.3605%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (40 samples, 0.01%)</title><rect x="86.1259%" y="1013" width="0.0112%" height="15" fill="rgb(229,94,0)" fg:x="308217" fg:w="40"/><text x="86.3759%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (343 samples, 0.10%)</title><rect x="86.1485%" y="997" width="0.0958%" height="15" fill="rgb(252,223,21)" fg:x="308298" fg:w="343"/><text x="86.3985%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (59 samples, 0.02%)</title><rect x="86.2539%" y="997" width="0.0165%" height="15" fill="rgb(230,210,4)" fg:x="308675" fg:w="59"/><text x="86.5039%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (288 samples, 0.08%)</title><rect x="86.3103%" y="981" width="0.0805%" height="15" fill="rgb(240,149,38)" fg:x="308877" fg:w="288"/><text x="86.5603%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (187 samples, 0.05%)</title><rect x="86.3385%" y="965" width="0.0523%" height="15" fill="rgb(254,105,20)" fg:x="308978" fg:w="187"/><text x="86.5885%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (43 samples, 0.01%)</title><rect x="86.3788%" y="949" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="309122" fg:w="43"/><text x="86.6288%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (486 samples, 0.14%)</title><rect x="86.2723%" y="997" width="0.1358%" height="15" fill="rgb(253,116,33)" fg:x="308741" fg:w="486"/><text x="86.5223%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (52 samples, 0.01%)</title><rect x="86.3936%" y="981" width="0.0145%" height="15" fill="rgb(229,198,5)" fg:x="309175" fg:w="52"/><text x="86.6436%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,014 samples, 0.28%)</title><rect x="86.1371%" y="1013" width="0.2833%" height="15" fill="rgb(242,38,37)" fg:x="308257" fg:w="1014"/><text x="86.3871%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (44 samples, 0.01%)</title><rect x="86.4081%" y="997" width="0.0123%" height="15" fill="rgb(242,69,53)" fg:x="309227" fg:w="44"/><text x="86.6581%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,426 samples, 0.40%)</title><rect x="86.0228%" y="1029" width="0.3985%" height="15" fill="rgb(249,80,16)" fg:x="307848" fg:w="1426"/><text x="86.2728%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (92 samples, 0.03%)</title><rect x="86.4308%" y="1013" width="0.0257%" height="15" fill="rgb(206,128,11)" fg:x="309308" fg:w="92"/><text x="86.6808%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (89 samples, 0.02%)</title><rect x="86.4707%" y="997" width="0.0249%" height="15" fill="rgb(212,35,20)" fg:x="309451" fg:w="89"/><text x="86.7207%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (66 samples, 0.02%)</title><rect x="86.4771%" y="981" width="0.0184%" height="15" fill="rgb(236,79,13)" fg:x="309474" fg:w="66"/><text x="86.7271%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (155 samples, 0.04%)</title><rect x="86.4593%" y="1013" width="0.0433%" height="15" fill="rgb(233,123,3)" fg:x="309410" fg:w="155"/><text x="86.7093%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,512 samples, 0.98%)</title><rect x="85.5232%" y="1061" width="0.9814%" height="15" fill="rgb(214,93,52)" fg:x="306060" fg:w="3512"/><text x="85.7732%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,349 samples, 0.66%)</title><rect x="85.8481%" y="1045" width="0.6564%" height="15" fill="rgb(251,37,40)" fg:x="307223" fg:w="2349"/><text x="86.0981%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (293 samples, 0.08%)</title><rect x="86.4226%" y="1029" width="0.0819%" height="15" fill="rgb(227,80,54)" fg:x="309279" fg:w="293"/><text x="86.6726%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,859 samples, 1.08%)</title><rect x="85.4270%" y="1077" width="1.0783%" height="15" fill="rgb(254,48,11)" fg:x="305716" fg:w="3859"/><text x="85.6770%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,103 samples, 2.26%)</title><rect x="84.2464%" y="1157" width="2.2642%" height="15" fill="rgb(235,193,26)" fg:x="301491" fg:w="8103"/><text x="84.4964%" y="1167.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,731 samples, 2.16%)</title><rect x="84.3504%" y="1141" width="2.1603%" height="15" fill="rgb(229,99,21)" fg:x="301863" fg:w="7731"/><text x="84.6004%" y="1151.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,064 samples, 1.97%)</title><rect x="84.5368%" y="1125" width="1.9739%" height="15" fill="rgb(211,140,41)" fg:x="302530" fg:w="7064"/><text x="84.7868%" y="1135.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,702 samples, 1.59%)</title><rect x="84.9173%" y="1109" width="1.5933%" height="15" fill="rgb(240,227,30)" fg:x="303892" fg:w="5702"/><text x="85.1673%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,296 samples, 1.20%)</title><rect x="85.3102%" y="1093" width="1.2004%" height="15" fill="rgb(215,224,45)" fg:x="305298" fg:w="4296"/><text x="85.5602%" y="1103.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (405 samples, 0.11%)</title><rect x="86.5118%" y="1141" width="0.1132%" height="15" fill="rgb(206,123,31)" fg:x="309598" fg:w="405"/><text x="86.7618%" y="1151.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (258 samples, 0.07%)</title><rect x="86.6386%" y="1125" width="0.0721%" height="15" fill="rgb(210,138,16)" fg:x="310052" fg:w="258"/><text x="86.8886%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_free (42 samples, 0.01%)</title><rect x="86.7309%" y="1093" width="0.0117%" height="15" fill="rgb(228,57,28)" fg:x="310382" fg:w="42"/><text x="86.9809%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_free (89 samples, 0.02%)</title><rect x="86.7599%" y="1077" width="0.0249%" height="15" fill="rgb(242,170,10)" fg:x="310486" fg:w="89"/><text x="87.0099%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (97 samples, 0.03%)</title><rect x="86.7848%" y="1077" width="0.0271%" height="15" fill="rgb(228,214,39)" fg:x="310575" fg:w="97"/><text x="87.0348%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.01%)</title><rect x="86.8418%" y="1061" width="0.0148%" height="15" fill="rgb(218,179,33)" fg:x="310779" fg:w="53"/><text x="87.0918%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (142 samples, 0.04%)</title><rect x="86.8208%" y="1077" width="0.0397%" height="15" fill="rgb(235,193,39)" fg:x="310704" fg:w="142"/><text x="87.0708%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_free (89 samples, 0.02%)</title><rect x="86.8804%" y="1061" width="0.0249%" height="15" fill="rgb(219,221,36)" fg:x="310917" fg:w="89"/><text x="87.1304%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (178 samples, 0.05%)</title><rect x="86.9052%" y="1061" width="0.0497%" height="15" fill="rgb(248,218,19)" fg:x="311006" fg:w="178"/><text x="87.1552%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (188 samples, 0.05%)</title><rect x="87.0067%" y="1045" width="0.0525%" height="15" fill="rgb(205,50,9)" fg:x="311369" fg:w="188"/><text x="87.2567%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (139 samples, 0.04%)</title><rect x="87.0204%" y="1029" width="0.0388%" height="15" fill="rgb(238,81,28)" fg:x="311418" fg:w="139"/><text x="87.2704%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (40 samples, 0.01%)</title><rect x="87.0480%" y="1013" width="0.0112%" height="15" fill="rgb(235,110,19)" fg:x="311517" fg:w="40"/><text x="87.2980%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (352 samples, 0.10%)</title><rect x="86.9689%" y="1061" width="0.0984%" height="15" fill="rgb(214,7,14)" fg:x="311234" fg:w="352"/><text x="87.2189%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_free (170 samples, 0.05%)</title><rect x="87.0852%" y="1045" width="0.0475%" height="15" fill="rgb(211,77,3)" fg:x="311650" fg:w="170"/><text x="87.3352%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (240 samples, 0.07%)</title><rect x="87.1327%" y="1045" width="0.0671%" height="15" fill="rgb(229,5,9)" fg:x="311820" fg:w="240"/><text x="87.3827%" y="1055.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (67 samples, 0.02%)</title><rect x="87.2095%" y="1045" width="0.0187%" height="15" fill="rgb(225,90,11)" fg:x="312095" fg:w="67"/><text x="87.4595%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (37 samples, 0.01%)</title><rect x="87.2688%" y="1029" width="0.0103%" height="15" fill="rgb(242,56,8)" fg:x="312307" fg:w="37"/><text x="87.5188%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (42 samples, 0.01%)</title><rect x="87.3526%" y="997" width="0.0117%" height="15" fill="rgb(249,212,39)" fg:x="312607" fg:w="42"/><text x="87.6026%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (327 samples, 0.09%)</title><rect x="87.2791%" y="1029" width="0.0914%" height="15" fill="rgb(236,90,9)" fg:x="312344" fg:w="327"/><text x="87.5291%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (212 samples, 0.06%)</title><rect x="87.3112%" y="1013" width="0.0592%" height="15" fill="rgb(206,88,35)" fg:x="312459" fg:w="212"/><text x="87.5612%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (574 samples, 0.16%)</title><rect x="87.2310%" y="1045" width="0.1604%" height="15" fill="rgb(205,126,30)" fg:x="312172" fg:w="574"/><text x="87.4810%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (62 samples, 0.02%)</title><rect x="87.3741%" y="1029" width="0.0173%" height="15" fill="rgb(230,176,12)" fg:x="312684" fg:w="62"/><text x="87.6241%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (37 samples, 0.01%)</title><rect x="87.4015%" y="1013" width="0.0103%" height="15" fill="rgb(243,19,9)" fg:x="312782" fg:w="37"/><text x="87.6515%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (113 samples, 0.03%)</title><rect x="87.3914%" y="1045" width="0.0316%" height="15" fill="rgb(245,171,17)" fg:x="312746" fg:w="113"/><text x="87.6414%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (83 samples, 0.02%)</title><rect x="87.3998%" y="1029" width="0.0232%" height="15" fill="rgb(227,52,21)" fg:x="312776" fg:w="83"/><text x="87.6498%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_free (47 samples, 0.01%)</title><rect x="87.4484%" y="1029" width="0.0131%" height="15" fill="rgb(238,69,14)" fg:x="312950" fg:w="47"/><text x="87.6984%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (370 samples, 0.10%)</title><rect x="87.4616%" y="1029" width="0.1034%" height="15" fill="rgb(241,156,39)" fg:x="312997" fg:w="370"/><text x="87.7116%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (280 samples, 0.08%)</title><rect x="87.6248%" y="1013" width="0.0782%" height="15" fill="rgb(212,227,28)" fg:x="313581" fg:w="280"/><text x="87.8748%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (195 samples, 0.05%)</title><rect x="87.6485%" y="997" width="0.0545%" height="15" fill="rgb(209,118,27)" fg:x="313666" fg:w="195"/><text x="87.8985%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (70 samples, 0.02%)</title><rect x="87.6834%" y="981" width="0.0196%" height="15" fill="rgb(226,102,5)" fg:x="313791" fg:w="70"/><text x="87.9334%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (477 samples, 0.13%)</title><rect x="87.5865%" y="1029" width="0.1333%" height="15" fill="rgb(223,34,3)" fg:x="313444" fg:w="477"/><text x="87.8365%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.01%)</title><rect x="87.7092%" y="1013" width="0.0106%" height="15" fill="rgb(221,81,38)" fg:x="313883" fg:w="38"/><text x="87.9592%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (69 samples, 0.02%)</title><rect x="87.7407%" y="1013" width="0.0193%" height="15" fill="rgb(236,219,28)" fg:x="313996" fg:w="69"/><text x="87.9907%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.02%)</title><rect x="87.7695%" y="997" width="0.0168%" height="15" fill="rgb(213,200,14)" fg:x="314099" fg:w="60"/><text x="88.0195%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.01%)</title><rect x="87.7762%" y="981" width="0.0101%" height="15" fill="rgb(240,33,19)" fg:x="314123" fg:w="36"/><text x="88.0262%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (104 samples, 0.03%)</title><rect x="87.7611%" y="1013" width="0.0291%" height="15" fill="rgb(233,113,27)" fg:x="314069" fg:w="104"/><text x="88.0111%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_free (155 samples, 0.04%)</title><rect x="87.7949%" y="997" width="0.0433%" height="15" fill="rgb(220,221,18)" fg:x="314190" fg:w="155"/><text x="88.0449%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (50 samples, 0.01%)</title><rect x="87.8383%" y="997" width="0.0140%" height="15" fill="rgb(238,92,8)" fg:x="314345" fg:w="50"/><text x="88.0883%" y="1007.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (61 samples, 0.02%)</title><rect x="87.8522%" y="997" width="0.0170%" height="15" fill="rgb(222,164,16)" fg:x="314395" fg:w="61"/><text x="88.1022%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_free (42 samples, 0.01%)</title><rect x="87.8872%" y="981" width="0.0117%" height="15" fill="rgb(241,119,3)" fg:x="314520" fg:w="42"/><text x="88.1372%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (373 samples, 0.10%)</title><rect x="87.8989%" y="981" width="0.1042%" height="15" fill="rgb(241,44,8)" fg:x="314562" fg:w="373"/><text x="88.1489%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.01%)</title><rect x="88.0095%" y="981" width="0.0129%" height="15" fill="rgb(230,36,40)" fg:x="314958" fg:w="46"/><text x="88.2595%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (149 samples, 0.04%)</title><rect x="88.0543%" y="965" width="0.0416%" height="15" fill="rgb(243,16,36)" fg:x="315118" fg:w="149"/><text x="88.3043%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.03%)</title><rect x="88.0682%" y="949" width="0.0277%" height="15" fill="rgb(231,4,26)" fg:x="315168" fg:w="99"/><text x="88.3182%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (281 samples, 0.08%)</title><rect x="88.0258%" y="981" width="0.0785%" height="15" fill="rgb(240,9,31)" fg:x="315016" fg:w="281"/><text x="88.2758%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_free (48 samples, 0.01%)</title><rect x="88.1244%" y="965" width="0.0134%" height="15" fill="rgb(207,173,15)" fg:x="315369" fg:w="48"/><text x="88.3744%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (75 samples, 0.02%)</title><rect x="88.1378%" y="965" width="0.0210%" height="15" fill="rgb(224,192,53)" fg:x="315417" fg:w="75"/><text x="88.3878%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (139 samples, 0.04%)</title><rect x="88.1884%" y="949" width="0.0388%" height="15" fill="rgb(223,67,28)" fg:x="315598" fg:w="139"/><text x="88.4384%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (88 samples, 0.02%)</title><rect x="88.2026%" y="933" width="0.0246%" height="15" fill="rgb(211,20,47)" fg:x="315649" fg:w="88"/><text x="88.4526%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (222 samples, 0.06%)</title><rect x="88.1702%" y="965" width="0.0620%" height="15" fill="rgb(240,228,2)" fg:x="315533" fg:w="222"/><text x="88.4202%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (86 samples, 0.02%)</title><rect x="88.2454%" y="949" width="0.0240%" height="15" fill="rgb(248,151,12)" fg:x="315802" fg:w="86"/><text x="88.4954%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (70 samples, 0.02%)</title><rect x="88.2694%" y="949" width="0.0196%" height="15" fill="rgb(244,8,39)" fg:x="315888" fg:w="70"/><text x="88.5194%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$free (61 samples, 0.02%)</title><rect x="88.2907%" y="949" width="0.0170%" height="15" fill="rgb(222,26,8)" fg:x="315964" fg:w="61"/><text x="88.5407%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (244 samples, 0.07%)</title><rect x="88.3306%" y="933" width="0.0682%" height="15" fill="rgb(213,106,44)" fg:x="316107" fg:w="244"/><text x="88.5806%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (216 samples, 0.06%)</title><rect x="88.4393%" y="917" width="0.0604%" height="15" fill="rgb(214,129,20)" fg:x="316496" fg:w="216"/><text x="88.6893%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (143 samples, 0.04%)</title><rect x="88.4597%" y="901" width="0.0400%" height="15" fill="rgb(212,32,13)" fg:x="316569" fg:w="143"/><text x="88.7097%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (344 samples, 0.10%)</title><rect x="88.4136%" y="933" width="0.0961%" height="15" fill="rgb(208,168,33)" fg:x="316404" fg:w="344"/><text x="88.6636%" y="943.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (713 samples, 0.20%)</title><rect x="88.3161%" y="949" width="0.1992%" height="15" fill="rgb(231,207,8)" fg:x="316055" fg:w="713"/><text x="88.5661%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,014 samples, 0.28%)</title><rect x="88.2323%" y="965" width="0.2833%" height="15" fill="rgb(235,219,23)" fg:x="315755" fg:w="1014"/><text x="88.4823%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (49 samples, 0.01%)</title><rect x="88.5226%" y="949" width="0.0137%" height="15" fill="rgb(226,216,26)" fg:x="316794" fg:w="49"/><text x="88.7726%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (89 samples, 0.02%)</title><rect x="88.5472%" y="933" width="0.0249%" height="15" fill="rgb(239,137,16)" fg:x="316882" fg:w="89"/><text x="88.7972%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.02%)</title><rect x="88.5556%" y="917" width="0.0165%" height="15" fill="rgb(207,12,36)" fg:x="316912" fg:w="59"/><text x="88.8056%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (139 samples, 0.04%)</title><rect x="88.5380%" y="949" width="0.0388%" height="15" fill="rgb(210,214,24)" fg:x="316849" fg:w="139"/><text x="88.7880%" y="959.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,820 samples, 0.79%)</title><rect x="87.7902%" y="1013" width="0.7880%" height="15" fill="rgb(206,56,30)" fg:x="314173" fg:w="2820"/><text x="88.0402%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,509 samples, 0.70%)</title><rect x="87.8771%" y="997" width="0.7011%" height="15" fill="rgb(228,143,26)" fg:x="314484" fg:w="2509"/><text x="88.1271%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,691 samples, 0.47%)</title><rect x="88.1057%" y="981" width="0.4725%" height="15" fill="rgb(216,218,46)" fg:x="315302" fg:w="1691"/><text x="88.3557%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (217 samples, 0.06%)</title><rect x="88.5176%" y="965" width="0.0606%" height="15" fill="rgb(206,6,19)" fg:x="316776" fg:w="217"/><text x="88.7676%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,525 samples, 1.82%)</title><rect x="86.7574%" y="1093" width="1.8233%" height="15" fill="rgb(239,177,51)" fg:x="310477" fg:w="6525"/><text x="87.0074%" y="1103.50">s..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,156 samples, 1.72%)</title><rect x="86.8605%" y="1077" width="1.7202%" height="15" fill="rgb(216,55,25)" fg:x="310846" fg:w="6156"/><text x="87.1105%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,416 samples, 1.51%)</title><rect x="87.0673%" y="1061" width="1.5134%" height="15" fill="rgb(231,163,29)" fg:x="311586" fg:w="5416"/><text x="87.3173%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,143 samples, 1.16%)</title><rect x="87.4230%" y="1045" width="1.1577%" height="15" fill="rgb(232,149,50)" fg:x="312859" fg:w="4143"/><text x="87.6730%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,076 samples, 0.86%)</title><rect x="87.7212%" y="1029" width="0.8595%" height="15" fill="rgb(223,142,48)" fg:x="313926" fg:w="3076"/><text x="87.9712%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,623 samples, 1.85%)</title><rect x="86.7303%" y="1109" width="1.8507%" height="15" fill="rgb(245,83,23)" fg:x="310380" fg:w="6623"/><text x="86.9803%" y="1119.50">s..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (179 samples, 0.05%)</title><rect x="88.5950%" y="1093" width="0.0500%" height="15" fill="rgb(224,63,2)" fg:x="317053" fg:w="179"/><text x="88.8450%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (213 samples, 0.06%)</title><rect x="88.6511%" y="1093" width="0.0595%" height="15" fill="rgb(218,65,53)" fg:x="317254" fg:w="213"/><text x="88.9011%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.03%)</title><rect x="88.7106%" y="1093" width="0.0338%" height="15" fill="rgb(221,84,29)" fg:x="317467" fg:w="121"/><text x="88.9606%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (110 samples, 0.03%)</title><rect x="88.7735%" y="1077" width="0.0307%" height="15" fill="rgb(234,0,32)" fg:x="317692" fg:w="110"/><text x="89.0235%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 0.10%)</title><rect x="88.8059%" y="1077" width="0.0961%" height="15" fill="rgb(206,20,16)" fg:x="317808" fg:w="344"/><text x="89.0559%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (175 samples, 0.05%)</title><rect x="88.9448%" y="1045" width="0.0489%" height="15" fill="rgb(244,172,18)" fg:x="318305" fg:w="175"/><text x="89.1948%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (145 samples, 0.04%)</title><rect x="88.9532%" y="1029" width="0.0405%" height="15" fill="rgb(254,133,1)" fg:x="318335" fg:w="145"/><text x="89.2032%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (87 samples, 0.02%)</title><rect x="88.9694%" y="1013" width="0.0243%" height="15" fill="rgb(222,206,41)" fg:x="318393" fg:w="87"/><text x="89.2194%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (231 samples, 0.06%)</title><rect x="88.9325%" y="1061" width="0.0645%" height="15" fill="rgb(212,3,42)" fg:x="318261" fg:w="231"/><text x="89.1825%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (345 samples, 0.10%)</title><rect x="88.9026%" y="1077" width="0.0964%" height="15" fill="rgb(241,11,4)" fg:x="318154" fg:w="345"/><text x="89.1526%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (925 samples, 0.26%)</title><rect x="88.7470%" y="1093" width="0.2585%" height="15" fill="rgb(205,19,26)" fg:x="317597" fg:w="925"/><text x="88.9970%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (74 samples, 0.02%)</title><rect x="89.0208%" y="1093" width="0.0207%" height="15" fill="rgb(210,179,32)" fg:x="318577" fg:w="74"/><text x="89.2708%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (97 samples, 0.03%)</title><rect x="89.0608%" y="1077" width="0.0271%" height="15" fill="rgb(227,116,49)" fg:x="318720" fg:w="97"/><text x="89.3108%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (50 samples, 0.01%)</title><rect x="89.0879%" y="1077" width="0.0140%" height="15" fill="rgb(211,146,6)" fg:x="318817" fg:w="50"/><text x="89.3379%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (38 samples, 0.01%)</title><rect x="89.1555%" y="1013" width="0.0106%" height="15" fill="rgb(219,44,39)" fg:x="319059" fg:w="38"/><text x="89.4055%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (112 samples, 0.03%)</title><rect x="89.1480%" y="1045" width="0.0313%" height="15" fill="rgb(234,128,11)" fg:x="319032" fg:w="112"/><text x="89.3980%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (92 samples, 0.03%)</title><rect x="89.1535%" y="1029" width="0.0257%" height="15" fill="rgb(220,183,53)" fg:x="319052" fg:w="92"/><text x="89.4035%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (47 samples, 0.01%)</title><rect x="89.1661%" y="1013" width="0.0131%" height="15" fill="rgb(213,219,32)" fg:x="319097" fg:w="47"/><text x="89.4161%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (187 samples, 0.05%)</title><rect x="89.1365%" y="1061" width="0.0523%" height="15" fill="rgb(232,156,16)" fg:x="318991" fg:w="187"/><text x="89.3865%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (302 samples, 0.08%)</title><rect x="89.1088%" y="1077" width="0.0844%" height="15" fill="rgb(246,135,34)" fg:x="318892" fg:w="302"/><text x="89.3588%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.02%)</title><rect x="89.2069%" y="1061" width="0.0173%" height="15" fill="rgb(241,99,0)" fg:x="319243" fg:w="62"/><text x="89.4569%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (55 samples, 0.02%)</title><rect x="89.2242%" y="1061" width="0.0154%" height="15" fill="rgb(222,103,45)" fg:x="319305" fg:w="55"/><text x="89.4742%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (139 samples, 0.04%)</title><rect x="89.2396%" y="1061" width="0.0388%" height="15" fill="rgb(212,57,4)" fg:x="319360" fg:w="139"/><text x="89.4896%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (71 samples, 0.02%)</title><rect x="89.3097%" y="1045" width="0.0198%" height="15" fill="rgb(215,68,47)" fg:x="319611" fg:w="71"/><text x="89.5597%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (60 samples, 0.02%)</title><rect x="89.3296%" y="1045" width="0.0168%" height="15" fill="rgb(230,84,2)" fg:x="319682" fg:w="60"/><text x="89.5796%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.03%)</title><rect x="89.4034%" y="1013" width="0.0293%" height="15" fill="rgb(220,102,14)" fg:x="319946" fg:w="105"/><text x="89.6534%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (88 samples, 0.02%)</title><rect x="89.4081%" y="997" width="0.0246%" height="15" fill="rgb(240,10,32)" fg:x="319963" fg:w="88"/><text x="89.6581%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.02%)</title><rect x="89.4168%" y="981" width="0.0159%" height="15" fill="rgb(215,47,27)" fg:x="319994" fg:w="57"/><text x="89.6668%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (185 samples, 0.05%)</title><rect x="89.3880%" y="1029" width="0.0517%" height="15" fill="rgb(233,188,43)" fg:x="319891" fg:w="185"/><text x="89.6380%" y="1039.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (326 samples, 0.09%)</title><rect x="89.3581%" y="1045" width="0.0911%" height="15" fill="rgb(253,190,1)" fg:x="319784" fg:w="326"/><text x="89.6081%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="89.4679%" y="1029" width="0.0112%" height="15" fill="rgb(206,114,52)" fg:x="320177" fg:w="40"/><text x="89.7179%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (39 samples, 0.01%)</title><rect x="89.4791%" y="1029" width="0.0109%" height="15" fill="rgb(233,120,37)" fg:x="320217" fg:w="39"/><text x="89.7291%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (272 samples, 0.08%)</title><rect x="89.4900%" y="1029" width="0.0760%" height="15" fill="rgb(214,52,39)" fg:x="320256" fg:w="272"/><text x="89.7400%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (47 samples, 0.01%)</title><rect x="89.5883%" y="1013" width="0.0131%" height="15" fill="rgb(223,80,29)" fg:x="320608" fg:w="47"/><text x="89.8383%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (183 samples, 0.05%)</title><rect x="89.6456%" y="981" width="0.0511%" height="15" fill="rgb(230,101,40)" fg:x="320813" fg:w="183"/><text x="89.8956%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (144 samples, 0.04%)</title><rect x="89.6565%" y="965" width="0.0402%" height="15" fill="rgb(219,211,8)" fg:x="320852" fg:w="144"/><text x="89.9065%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (72 samples, 0.02%)</title><rect x="89.6766%" y="949" width="0.0201%" height="15" fill="rgb(252,126,28)" fg:x="320924" fg:w="72"/><text x="89.9266%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (230 samples, 0.06%)</title><rect x="89.6367%" y="997" width="0.0643%" height="15" fill="rgb(215,56,38)" fg:x="320781" fg:w="230"/><text x="89.8867%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (304 samples, 0.08%)</title><rect x="89.6188%" y="1013" width="0.0849%" height="15" fill="rgb(249,55,44)" fg:x="320717" fg:w="304"/><text x="89.8688%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (116 samples, 0.03%)</title><rect x="89.7320%" y="997" width="0.0324%" height="15" fill="rgb(220,221,32)" fg:x="321122" fg:w="116"/><text x="89.9820%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (136 samples, 0.04%)</title><rect x="89.7672%" y="997" width="0.0380%" height="15" fill="rgb(212,216,41)" fg:x="321248" fg:w="136"/><text x="90.0172%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 0.10%)</title><rect x="89.8052%" y="997" width="0.1017%" height="15" fill="rgb(228,213,43)" fg:x="321384" fg:w="364"/><text x="90.0552%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (62 samples, 0.02%)</title><rect x="89.9200%" y="997" width="0.0173%" height="15" fill="rgb(211,31,26)" fg:x="321795" fg:w="62"/><text x="90.1700%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (71 samples, 0.02%)</title><rect x="89.9605%" y="981" width="0.0198%" height="15" fill="rgb(229,202,19)" fg:x="321940" fg:w="71"/><text x="90.2105%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (148 samples, 0.04%)</title><rect x="89.9804%" y="981" width="0.0414%" height="15" fill="rgb(229,105,46)" fg:x="322011" fg:w="148"/><text x="90.2304%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (92 samples, 0.03%)</title><rect x="90.0217%" y="981" width="0.0257%" height="15" fill="rgb(235,108,1)" fg:x="322159" fg:w="92"/><text x="90.2717%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (94 samples, 0.03%)</title><rect x="90.0474%" y="981" width="0.0263%" height="15" fill="rgb(245,111,35)" fg:x="322251" fg:w="94"/><text x="90.2974%" y="991.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (36 samples, 0.01%)</title><rect x="90.0813%" y="981" width="0.0101%" height="15" fill="rgb(219,185,31)" fg:x="322372" fg:w="36"/><text x="90.3313%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.01%)</title><rect x="90.1483%" y="965" width="0.0101%" height="15" fill="rgb(214,4,43)" fg:x="322612" fg:w="36"/><text x="90.3983%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (122 samples, 0.03%)</title><rect x="90.2145%" y="917" width="0.0341%" height="15" fill="rgb(235,227,40)" fg:x="322849" fg:w="122"/><text x="90.4645%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (376 samples, 0.11%)</title><rect x="90.1860%" y="949" width="0.1051%" height="15" fill="rgb(230,88,30)" fg:x="322747" fg:w="376"/><text x="90.4360%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (323 samples, 0.09%)</title><rect x="90.2009%" y="933" width="0.0903%" height="15" fill="rgb(216,217,1)" fg:x="322800" fg:w="323"/><text x="90.4509%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (152 samples, 0.04%)</title><rect x="90.2486%" y="917" width="0.0425%" height="15" fill="rgb(248,139,50)" fg:x="322971" fg:w="152"/><text x="90.4986%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (514 samples, 0.14%)</title><rect x="90.1634%" y="965" width="0.1436%" height="15" fill="rgb(233,1,21)" fg:x="322666" fg:w="514"/><text x="90.4134%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (44 samples, 0.01%)</title><rect x="90.2947%" y="949" width="0.0123%" height="15" fill="rgb(215,183,12)" fg:x="323136" fg:w="44"/><text x="90.5447%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (781 samples, 0.22%)</title><rect x="90.0994%" y="981" width="0.2182%" height="15" fill="rgb(229,104,42)" fg:x="322437" fg:w="781"/><text x="90.3494%" y="991.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (38 samples, 0.01%)</title><rect x="90.3070%" y="965" width="0.0106%" height="15" fill="rgb(243,34,48)" fg:x="323180" fg:w="38"/><text x="90.5570%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="90.3551%" y="965" width="0.0115%" height="15" fill="rgb(239,11,44)" fg:x="323352" fg:w="41"/><text x="90.6051%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (212 samples, 0.06%)</title><rect x="90.3668%" y="965" width="0.0592%" height="15" fill="rgb(231,98,35)" fg:x="323394" fg:w="212"/><text x="90.6168%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.03%)</title><rect x="90.4319%" y="965" width="0.0291%" height="15" fill="rgb(233,28,25)" fg:x="323627" fg:w="104"/><text x="90.6819%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (75 samples, 0.02%)</title><rect x="90.4979%" y="949" width="0.0210%" height="15" fill="rgb(234,123,11)" fg:x="323863" fg:w="75"/><text x="90.7479%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (137 samples, 0.04%)</title><rect x="90.5309%" y="917" width="0.0383%" height="15" fill="rgb(220,69,3)" fg:x="323981" fg:w="137"/><text x="90.7809%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (119 samples, 0.03%)</title><rect x="90.5359%" y="901" width="0.0333%" height="15" fill="rgb(214,64,36)" fg:x="323999" fg:w="119"/><text x="90.7859%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (76 samples, 0.02%)</title><rect x="90.5479%" y="885" width="0.0212%" height="15" fill="rgb(211,138,32)" fg:x="324042" fg:w="76"/><text x="90.7979%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (160 samples, 0.04%)</title><rect x="90.5267%" y="933" width="0.0447%" height="15" fill="rgb(213,118,47)" fg:x="323966" fg:w="160"/><text x="90.7767%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (178 samples, 0.05%)</title><rect x="90.5222%" y="949" width="0.0497%" height="15" fill="rgb(243,124,49)" fg:x="323950" fg:w="178"/><text x="90.7722%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (418 samples, 0.12%)</title><rect x="90.4764%" y="965" width="0.1168%" height="15" fill="rgb(221,30,28)" fg:x="323786" fg:w="418"/><text x="90.7264%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (69 samples, 0.02%)</title><rect x="90.5739%" y="949" width="0.0193%" height="15" fill="rgb(246,37,13)" fg:x="324135" fg:w="69"/><text x="90.8239%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (51 samples, 0.01%)</title><rect x="90.5789%" y="933" width="0.0143%" height="15" fill="rgb(249,66,14)" fg:x="324153" fg:w="51"/><text x="90.8289%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (113 samples, 0.03%)</title><rect x="90.6063%" y="949" width="0.0316%" height="15" fill="rgb(213,166,5)" fg:x="324251" fg:w="113"/><text x="90.8563%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (232 samples, 0.06%)</title><rect x="90.6379%" y="949" width="0.0648%" height="15" fill="rgb(221,66,24)" fg:x="324364" fg:w="232"/><text x="90.8879%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 0.06%)</title><rect x="90.7027%" y="949" width="0.0606%" height="15" fill="rgb(210,132,17)" fg:x="324596" fg:w="217"/><text x="90.9527%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (39 samples, 0.01%)</title><rect x="90.7770%" y="949" width="0.0109%" height="15" fill="rgb(243,202,5)" fg:x="324862" fg:w="39"/><text x="91.0270%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.01%)</title><rect x="90.8095%" y="933" width="0.0129%" height="15" fill="rgb(233,70,48)" fg:x="324978" fg:w="46"/><text x="91.0595%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (151 samples, 0.04%)</title><rect x="90.8223%" y="933" width="0.0422%" height="15" fill="rgb(238,41,26)" fg:x="325024" fg:w="151"/><text x="91.0723%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (182 samples, 0.05%)</title><rect x="90.8645%" y="933" width="0.0509%" height="15" fill="rgb(241,19,31)" fg:x="325175" fg:w="182"/><text x="91.1145%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (185 samples, 0.05%)</title><rect x="90.9154%" y="933" width="0.0517%" height="15" fill="rgb(214,76,10)" fg:x="325357" fg:w="185"/><text x="91.1654%" y="943.50"></text></g><g><title>sk-gen`DYLD-STUB$$memcmp (43 samples, 0.01%)</title><rect x="90.9766%" y="933" width="0.0120%" height="15" fill="rgb(254,202,22)" fg:x="325576" fg:w="43"/><text x="91.2266%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (52 samples, 0.01%)</title><rect x="91.0962%" y="869" width="0.0145%" height="15" fill="rgb(214,72,24)" fg:x="326004" fg:w="52"/><text x="91.3462%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (152 samples, 0.04%)</title><rect x="91.0822%" y="901" width="0.0425%" height="15" fill="rgb(221,92,46)" fg:x="325954" fg:w="152"/><text x="91.3322%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (126 samples, 0.04%)</title><rect x="91.0895%" y="885" width="0.0352%" height="15" fill="rgb(246,13,50)" fg:x="325980" fg:w="126"/><text x="91.3395%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (50 samples, 0.01%)</title><rect x="91.1107%" y="869" width="0.0140%" height="15" fill="rgb(240,165,38)" fg:x="326056" fg:w="50"/><text x="91.3607%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (290 samples, 0.08%)</title><rect x="91.0607%" y="917" width="0.0810%" height="15" fill="rgb(241,24,51)" fg:x="325877" fg:w="290"/><text x="91.3107%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (58 samples, 0.02%)</title><rect x="91.1255%" y="901" width="0.0162%" height="15" fill="rgb(227,51,44)" fg:x="326109" fg:w="58"/><text x="91.3755%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (585 samples, 0.16%)</title><rect x="90.9917%" y="933" width="0.1635%" height="15" fill="rgb(231,121,3)" fg:x="325630" fg:w="585"/><text x="91.2417%" y="943.50"></text></g><g><title>sk-gen`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (48 samples, 0.01%)</title><rect x="91.1417%" y="917" width="0.0134%" height="15" fill="rgb(245,3,41)" fg:x="326167" fg:w="48"/><text x="91.3917%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.02%)</title><rect x="91.1995%" y="917" width="0.0176%" height="15" fill="rgb(214,13,26)" fg:x="326374" fg:w="63"/><text x="91.4495%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (97 samples, 0.03%)</title><rect x="91.2172%" y="917" width="0.0271%" height="15" fill="rgb(252,75,11)" fg:x="326437" fg:w="97"/><text x="91.4672%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (72 samples, 0.02%)</title><rect x="91.2443%" y="917" width="0.0201%" height="15" fill="rgb(218,226,17)" fg:x="326534" fg:w="72"/><text x="91.4943%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (180 samples, 0.05%)</title><rect x="91.2644%" y="917" width="0.0503%" height="15" fill="rgb(248,89,38)" fg:x="326606" fg:w="180"/><text x="91.5144%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (51 samples, 0.01%)</title><rect x="91.3186%" y="917" width="0.0143%" height="15" fill="rgb(237,73,46)" fg:x="326800" fg:w="51"/><text x="91.5686%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (39 samples, 0.01%)</title><rect x="91.3577%" y="901" width="0.0109%" height="15" fill="rgb(242,78,33)" fg:x="326940" fg:w="39"/><text x="91.6077%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (60 samples, 0.02%)</title><rect x="91.4153%" y="837" width="0.0168%" height="15" fill="rgb(235,60,3)" fg:x="327146" fg:w="60"/><text x="91.6653%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (185 samples, 0.05%)</title><rect x="91.4005%" y="869" width="0.0517%" height="15" fill="rgb(216,172,19)" fg:x="327093" fg:w="185"/><text x="91.6505%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (161 samples, 0.04%)</title><rect x="91.4072%" y="853" width="0.0450%" height="15" fill="rgb(227,6,42)" fg:x="327117" fg:w="161"/><text x="91.6572%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (72 samples, 0.02%)</title><rect x="91.4320%" y="837" width="0.0201%" height="15" fill="rgb(223,207,42)" fg:x="327206" fg:w="72"/><text x="91.6820%" y="847.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (224 samples, 0.06%)</title><rect x="91.3924%" y="885" width="0.0626%" height="15" fill="rgb(246,138,30)" fg:x="327064" fg:w="224"/><text x="91.6424%" y="895.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (262 samples, 0.07%)</title><rect x="91.3823%" y="901" width="0.0732%" height="15" fill="rgb(251,199,47)" fg:x="327028" fg:w="262"/><text x="91.6323%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.03%)</title><rect x="91.4798%" y="885" width="0.0263%" height="15" fill="rgb(228,218,44)" fg:x="327377" fg:w="94"/><text x="91.7298%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="91.5491%" y="837" width="0.0154%" height="15" fill="rgb(220,68,6)" fg:x="327625" fg:w="55"/><text x="91.7991%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.01%)</title><rect x="91.5528%" y="821" width="0.0117%" height="15" fill="rgb(240,60,26)" fg:x="327638" fg:w="42"/><text x="91.8028%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (75 samples, 0.02%)</title><rect x="91.5452%" y="853" width="0.0210%" height="15" fill="rgb(211,200,19)" fg:x="327611" fg:w="75"/><text x="91.7952%" y="863.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (104 samples, 0.03%)</title><rect x="91.5379%" y="869" width="0.0291%" height="15" fill="rgb(242,145,30)" fg:x="327585" fg:w="104"/><text x="91.7879%" y="879.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (397 samples, 0.11%)</title><rect x="91.5100%" y="885" width="0.1109%" height="15" fill="rgb(225,64,13)" fg:x="327485" fg:w="397"/><text x="91.7600%" y="895.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (187 samples, 0.05%)</title><rect x="91.5687%" y="869" width="0.0523%" height="15" fill="rgb(218,103,35)" fg:x="327695" fg:w="187"/><text x="91.8187%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (173 samples, 0.05%)</title><rect x="91.5726%" y="853" width="0.0483%" height="15" fill="rgb(216,93,46)" fg:x="327709" fg:w="173"/><text x="91.8226%" y="863.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (983 samples, 0.27%)</title><rect x="91.3476%" y="917" width="0.2747%" height="15" fill="rgb(225,159,27)" fg:x="326904" fg:w="983"/><text x="91.5976%" y="927.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (583 samples, 0.16%)</title><rect x="91.4594%" y="901" width="0.1629%" height="15" fill="rgb(225,204,11)" fg:x="327304" fg:w="583"/><text x="91.7094%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.02%)</title><rect x="91.6424%" y="901" width="0.0232%" height="15" fill="rgb(205,56,4)" fg:x="327959" fg:w="83"/><text x="91.8924%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (74 samples, 0.02%)</title><rect x="91.6740%" y="901" width="0.0207%" height="15" fill="rgb(206,6,35)" fg:x="328072" fg:w="74"/><text x="91.9240%" y="911.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (329 samples, 0.09%)</title><rect x="91.6947%" y="901" width="0.0919%" height="15" fill="rgb(247,73,52)" fg:x="328146" fg:w="329"/><text x="91.9447%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (43 samples, 0.01%)</title><rect x="91.7939%" y="901" width="0.0120%" height="15" fill="rgb(246,97,4)" fg:x="328501" fg:w="43"/><text x="92.0439%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.02%)</title><rect x="91.8165%" y="885" width="0.0173%" height="15" fill="rgb(212,37,15)" fg:x="328582" fg:w="62"/><text x="92.0665%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (85 samples, 0.02%)</title><rect x="91.8339%" y="885" width="0.0238%" height="15" fill="rgb(208,130,40)" fg:x="328644" fg:w="85"/><text x="92.0839%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (201 samples, 0.06%)</title><rect x="91.8632%" y="885" width="0.0562%" height="15" fill="rgb(236,55,29)" fg:x="328749" fg:w="201"/><text x="92.1132%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (52 samples, 0.01%)</title><rect x="91.9993%" y="821" width="0.0145%" height="15" fill="rgb(209,156,45)" fg:x="329236" fg:w="52"/><text x="92.2493%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (282 samples, 0.08%)</title><rect x="91.9730%" y="853" width="0.0788%" height="15" fill="rgb(249,107,4)" fg:x="329142" fg:w="282"/><text x="92.2230%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (235 samples, 0.07%)</title><rect x="91.9862%" y="837" width="0.0657%" height="15" fill="rgb(227,7,13)" fg:x="329189" fg:w="235"/><text x="92.2362%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (136 samples, 0.04%)</title><rect x="92.0138%" y="821" width="0.0380%" height="15" fill="rgb(250,129,14)" fg:x="329288" fg:w="136"/><text x="92.2638%" y="831.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (374 samples, 0.10%)</title><rect x="91.9543%" y="869" width="0.1045%" height="15" fill="rgb(229,92,13)" fg:x="329075" fg:w="374"/><text x="92.2043%" y="879.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (499 samples, 0.14%)</title><rect x="91.9272%" y="885" width="0.1394%" height="15" fill="rgb(245,98,39)" fg:x="328978" fg:w="499"/><text x="92.1772%" y="895.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,117 samples, 0.31%)</title><rect x="91.8059%" y="901" width="0.3121%" height="15" fill="rgb(234,135,48)" fg:x="328544" fg:w="1117"/><text x="92.0559%" y="911.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (163 samples, 0.05%)</title><rect x="92.0725%" y="885" width="0.0455%" height="15" fill="rgb(230,98,28)" fg:x="329498" fg:w="163"/><text x="92.3225%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (123 samples, 0.03%)</title><rect x="92.0837%" y="869" width="0.0344%" height="15" fill="rgb(223,121,0)" fg:x="329538" fg:w="123"/><text x="92.3337%" y="879.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (4,791 samples, 1.34%)</title><rect x="90.7879%" y="949" width="1.3388%" height="15" fill="rgb(234,173,33)" fg:x="324901" fg:w="4791"/><text x="91.0379%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3,443 samples, 0.96%)</title><rect x="91.1646%" y="933" width="0.9621%" height="15" fill="rgb(245,47,8)" fg:x="326249" fg:w="3443"/><text x="91.4146%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,805 samples, 0.50%)</title><rect x="91.6223%" y="917" width="0.5044%" height="15" fill="rgb(205,17,20)" fg:x="327887" fg:w="1805"/><text x="91.8723%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (7,876 samples, 2.20%)</title><rect x="89.9374%" y="997" width="2.2008%" height="15" fill="rgb(232,151,16)" fg:x="321857" fg:w="7876"/><text x="90.1874%" y="1007.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6,481 samples, 1.81%)</title><rect x="90.3272%" y="981" width="1.8110%" height="15" fill="rgb(208,30,32)" fg:x="323252" fg:w="6481"/><text x="90.5772%" y="991.50">s..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5,529 samples, 1.54%)</title><rect x="90.5932%" y="965" width="1.5450%" height="15" fill="rgb(254,26,3)" fg:x="324204" fg:w="5529"/><text x="90.8432%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 0.01%)</title><rect x="92.1267%" y="949" width="0.0115%" height="15" fill="rgb(240,177,30)" fg:x="329692" fg:w="41"/><text x="92.3767%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (9,191 samples, 2.57%)</title><rect x="89.5805%" y="1029" width="2.5683%" height="15" fill="rgb(248,76,44)" fg:x="320580" fg:w="9191"/><text x="89.8305%" y="1039.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8,725 samples, 2.44%)</title><rect x="89.7107%" y="1013" width="2.4380%" height="15" fill="rgb(241,186,54)" fg:x="321046" fg:w="8725"/><text x="89.9607%" y="1023.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 0.01%)</title><rect x="92.1382%" y="997" width="0.0106%" height="15" fill="rgb(249,171,29)" fg:x="329733" fg:w="38"/><text x="92.3882%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (46 samples, 0.01%)</title><rect x="92.1952%" y="997" width="0.0129%" height="15" fill="rgb(237,151,44)" fg:x="329937" fg:w="46"/><text x="92.4452%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (189 samples, 0.05%)</title><rect x="92.1731%" y="1013" width="0.0528%" height="15" fill="rgb(228,174,30)" fg:x="329858" fg:w="189"/><text x="92.4231%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (60 samples, 0.02%)</title><rect x="92.2091%" y="997" width="0.0168%" height="15" fill="rgb(252,14,37)" fg:x="329987" fg:w="60"/><text x="92.4591%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="92.2103%" y="981" width="0.0156%" height="15" fill="rgb(207,111,40)" fg:x="329991" fg:w="56"/><text x="92.4603%" y="991.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (10,509 samples, 2.94%)</title><rect x="89.2919%" y="1061" width="2.9366%" height="15" fill="rgb(248,171,54)" fg:x="319547" fg:w="10509"/><text x="89.5419%" y="1071.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9,913 samples, 2.77%)</title><rect x="89.4584%" y="1045" width="2.7700%" height="15" fill="rgb(211,127,2)" fg:x="320143" fg:w="9913"/><text x="89.7084%" y="1055.50">sk..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (285 samples, 0.08%)</title><rect x="92.1488%" y="1029" width="0.0796%" height="15" fill="rgb(236,87,47)" fg:x="329771" fg:w="285"/><text x="92.3988%" y="1039.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (11,415 samples, 3.19%)</title><rect x="89.0429%" y="1093" width="3.1897%" height="15" fill="rgb(223,190,45)" fg:x="318656" fg:w="11415"/><text x="89.2929%" y="1103.50">sk-..</text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10,851 samples, 3.03%)</title><rect x="89.2005%" y="1077" width="3.0321%" height="15" fill="rgb(215,5,16)" fg:x="319220" fg:w="10851"/><text x="89.4505%" y="1087.50">sk-..</text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13,065 samples, 3.65%)</title><rect x="88.5843%" y="1109" width="3.6508%" height="15" fill="rgb(252,82,33)" fg:x="317015" fg:w="13065"/><text x="88.8343%" y="1119.50">sk-g..</text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.01%)</title><rect x="92.2402%" y="1093" width="0.0106%" height="15" fill="rgb(247,213,44)" fg:x="330098" fg:w="38"/><text x="92.4902%" y="1103.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (70 samples, 0.02%)</title><rect x="92.2930%" y="1061" width="0.0196%" height="15" fill="rgb(205,196,44)" fg:x="330287" fg:w="70"/><text x="92.5430%" y="1071.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (175 samples, 0.05%)</title><rect x="92.3435%" y="1045" width="0.0489%" height="15" fill="rgb(237,96,54)" fg:x="330468" fg:w="175"/><text x="92.5935%" y="1055.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (170 samples, 0.05%)</title><rect x="92.4908%" y="1013" width="0.0475%" height="15" fill="rgb(230,113,34)" fg:x="330995" fg:w="170"/><text x="92.7408%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.01%)</title><rect x="92.5721%" y="997" width="0.0145%" height="15" fill="rgb(221,224,12)" fg:x="331286" fg:w="52"/><text x="92.8221%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (247 samples, 0.07%)</title><rect x="92.5917%" y="997" width="0.0690%" height="15" fill="rgb(219,112,44)" fg:x="331356" fg:w="247"/><text x="92.8417%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.01%)</title><rect x="92.7021%" y="981" width="0.0115%" height="15" fill="rgb(210,31,13)" fg:x="331751" fg:w="41"/><text x="92.9521%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (67 samples, 0.02%)</title><rect x="92.7135%" y="981" width="0.0187%" height="15" fill="rgb(230,25,16)" fg:x="331792" fg:w="67"/><text x="92.9635%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (49 samples, 0.01%)</title><rect x="92.7490%" y="965" width="0.0137%" height="15" fill="rgb(246,108,53)" fg:x="331919" fg:w="49"/><text x="92.9990%" y="975.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (138 samples, 0.04%)</title><rect x="92.7700%" y="965" width="0.0386%" height="15" fill="rgb(241,172,50)" fg:x="331994" fg:w="138"/><text x="93.0200%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.02%)</title><rect x="92.8404%" y="949" width="0.0151%" height="15" fill="rgb(235,141,10)" fg:x="332246" fg:w="54"/><text x="93.0904%" y="959.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (292 samples, 0.08%)</title><rect x="92.8585%" y="949" width="0.0816%" height="15" fill="rgb(220,174,43)" fg:x="332311" fg:w="292"/><text x="93.1085%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (72 samples, 0.02%)</title><rect x="93.0156%" y="933" width="0.0201%" height="15" fill="rgb(215,181,40)" fg:x="332873" fg:w="72"/><text x="93.2656%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="93.0533%" y="917" width="0.0101%" height="15" fill="rgb(230,97,2)" fg:x="333008" fg:w="36"/><text x="93.3033%" y="927.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (210 samples, 0.06%)</title><rect x="93.0712%" y="917" width="0.0587%" height="15" fill="rgb(211,25,27)" fg:x="333072" fg:w="210"/><text x="93.3212%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="93.1735%" y="901" width="0.0190%" height="15" fill="rgb(230,87,26)" fg:x="333438" fg:w="68"/><text x="93.4235%" y="911.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (254 samples, 0.07%)</title><rect x="93.1947%" y="901" width="0.0710%" height="15" fill="rgb(227,160,17)" fg:x="333514" fg:w="254"/><text x="93.4447%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.01%)</title><rect x="93.3034%" y="885" width="0.0101%" height="15" fill="rgb(244,85,34)" fg:x="333903" fg:w="36"/><text x="93.5534%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (43 samples, 0.01%)</title><rect x="93.3285%" y="869" width="0.0120%" height="15" fill="rgb(207,70,0)" fg:x="333993" fg:w="43"/><text x="93.5785%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.02%)</title><rect x="93.3501%" y="853" width="0.0193%" height="15" fill="rgb(223,129,7)" fg:x="334070" fg:w="69"/><text x="93.6001%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.03%)</title><rect x="93.3406%" y="869" width="0.0349%" height="15" fill="rgb(246,105,7)" fg:x="334036" fg:w="125"/><text x="93.5906%" y="879.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (207 samples, 0.06%)</title><rect x="93.3193%" y="885" width="0.0578%" height="15" fill="rgb(215,154,42)" fg:x="333960" fg:w="207"/><text x="93.5693%" y="895.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (74 samples, 0.02%)</title><rect x="93.3948%" y="869" width="0.0207%" height="15" fill="rgb(220,215,30)" fg:x="334230" fg:w="74"/><text x="93.6448%" y="879.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (215 samples, 0.06%)</title><rect x="93.4875%" y="837" width="0.0601%" height="15" fill="rgb(228,81,51)" fg:x="334562" fg:w="215"/><text x="93.7375%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_free (39 samples, 0.01%)</title><rect x="93.5767%" y="821" width="0.0109%" height="15" fill="rgb(247,71,54)" fg:x="334881" fg:w="39"/><text x="93.8267%" y="831.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="93.5957%" y="821" width="0.0156%" height="15" fill="rgb(234,176,34)" fg:x="334949" fg:w="56"/><text x="93.8457%" y="831.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (329 samples, 0.09%)</title><rect x="93.6147%" y="821" width="0.0919%" height="15" fill="rgb(241,103,54)" fg:x="335017" fg:w="329"/><text x="93.8647%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (65 samples, 0.02%)</title><rect x="93.7592%" y="805" width="0.0182%" height="15" fill="rgb(228,22,34)" fg:x="335534" fg:w="65"/><text x="94.0092%" y="815.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.01%)</title><rect x="93.8008%" y="789" width="0.0115%" height="15" fill="rgb(241,179,48)" fg:x="335683" fg:w="41"/><text x="94.0508%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.01%)</title><rect x="93.8226%" y="773" width="0.0143%" height="15" fill="rgb(235,167,37)" fg:x="335761" fg:w="51"/><text x="94.0726%" y="783.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (113 samples, 0.03%)</title><rect x="93.8377%" y="773" width="0.0316%" height="15" fill="rgb(213,109,30)" fg:x="335815" fg:w="113"/><text x="94.0877%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.02%)</title><rect x="93.9008%" y="741" width="0.0207%" height="15" fill="rgb(222,172,16)" fg:x="336041" fg:w="74"/><text x="94.1508%" y="751.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (133 samples, 0.04%)</title><rect x="93.8863%" y="757" width="0.0372%" height="15" fill="rgb(233,192,5)" fg:x="335989" fg:w="133"/><text x="94.1363%" y="767.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (213 samples, 0.06%)</title><rect x="93.8692%" y="773" width="0.0595%" height="15" fill="rgb(247,189,41)" fg:x="335928" fg:w="213"/><text x="94.1192%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (422 samples, 0.12%)</title><rect x="93.8122%" y="789" width="0.1179%" height="15" fill="rgb(218,134,47)" fg:x="335724" fg:w="422"/><text x="94.0622%" y="799.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (513 samples, 0.14%)</title><rect x="93.7879%" y="805" width="0.1433%" height="15" fill="rgb(216,29,3)" fg:x="335637" fg:w="513"/><text x="94.0379%" y="815.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (137 samples, 0.04%)</title><rect x="93.9603%" y="789" width="0.0383%" height="15" fill="rgb(246,140,12)" fg:x="336254" fg:w="137"/><text x="94.2103%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (58 samples, 0.02%)</title><rect x="94.0366%" y="773" width="0.0162%" height="15" fill="rgb(230,136,11)" fg:x="336527" fg:w="58"/><text x="94.2866%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="94.0679%" y="757" width="0.0117%" height="15" fill="rgb(247,22,47)" fg:x="336639" fg:w="42"/><text x="94.3179%" y="767.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (129 samples, 0.04%)</title><rect x="94.0850%" y="757" width="0.0360%" height="15" fill="rgb(218,84,22)" fg:x="336700" fg:w="129"/><text x="94.3350%" y="767.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (302 samples, 0.08%)</title><rect x="94.1554%" y="741" width="0.0844%" height="15" fill="rgb(216,87,39)" fg:x="336952" fg:w="302"/><text x="94.4054%" y="751.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (463 samples, 0.13%)</title><rect x="94.1210%" y="757" width="0.1294%" height="15" fill="rgb(221,178,8)" fg:x="336829" fg:w="463"/><text x="94.3710%" y="767.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (38 samples, 0.01%)</title><rect x="94.2398%" y="741" width="0.0106%" height="15" fill="rgb(230,42,11)" fg:x="337254" fg:w="38"/><text x="94.4898%" y="751.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (712 samples, 0.20%)</title><rect x="94.0562%" y="773" width="0.1990%" height="15" fill="rgb(237,229,4)" fg:x="336597" fg:w="712"/><text x="94.3062%" y="783.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.01%)</title><rect x="94.2551%" y="773" width="0.0123%" height="15" fill="rgb(222,31,33)" fg:x="337309" fg:w="44"/><text x="94.5051%" y="783.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (975 samples, 0.27%)</title><rect x="93.9986%" y="789" width="0.2724%" height="15" fill="rgb(210,17,39)" fg:x="336391" fg:w="975"/><text x="94.2486%" y="799.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,219 samples, 0.34%)</title><rect x="93.9313%" y="805" width="0.3406%" height="15" fill="rgb(244,93,20)" fg:x="336150" fg:w="1219"/><text x="94.1813%" y="815.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (2,058 samples, 0.58%)</title><rect x="93.7075%" y="821" width="0.5751%" height="15" fill="rgb(210,40,47)" fg:x="335349" fg:w="2058"/><text x="93.9575%" y="831.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,669 samples, 0.75%)</title><rect x="93.5476%" y="837" width="0.7458%" height="15" fill="rgb(239,211,47)" fg:x="334777" fg:w="2669"/><text x="93.7976%" y="847.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,982 samples, 0.83%)</title><rect x="93.4671%" y="853" width="0.8333%" height="15" fill="rgb(251,223,49)" fg:x="334489" fg:w="2982"/><text x="93.7171%" y="863.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.02%)</title><rect x="94.3004%" y="853" width="0.0162%" height="15" fill="rgb(221,149,5)" fg:x="337471" fg:w="58"/><text x="94.5504%" y="863.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (3,230 samples, 0.90%)</title><rect x="93.4154%" y="869" width="0.9026%" height="15" fill="rgb(219,224,51)" fg:x="334304" fg:w="3230"/><text x="93.6654%" y="879.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,369 samples, 0.94%)</title><rect x="93.3772%" y="885" width="0.9414%" height="15" fill="rgb(223,7,8)" fg:x="334167" fg:w="3369"/><text x="93.6272%" y="895.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (3,781 samples, 1.06%)</title><rect x="93.2662%" y="901" width="1.0565%" height="15" fill="rgb(241,217,22)" fg:x="333770" fg:w="3781"/><text x="93.5162%" y="911.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,288 samples, 1.20%)</title><rect x="93.1299%" y="917" width="1.1982%" height="15" fill="rgb(248,209,0)" fg:x="333282" fg:w="4288"/><text x="93.3799%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,613 samples, 1.29%)</title><rect x="93.0435%" y="933" width="1.2890%" height="15" fill="rgb(217,205,4)" fg:x="332973" fg:w="4613"/><text x="93.2935%" y="943.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.02%)</title><rect x="94.3325%" y="933" width="0.0212%" height="15" fill="rgb(228,124,39)" fg:x="337586" fg:w="76"/><text x="94.5825%" y="943.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (5,067 samples, 1.42%)</title><rect x="92.9401%" y="949" width="1.4159%" height="15" fill="rgb(250,116,42)" fg:x="332603" fg:w="5067"/><text x="93.1901%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,550 samples, 1.55%)</title><rect x="92.8085%" y="965" width="1.5509%" height="15" fill="rgb(223,202,9)" fg:x="332132" fg:w="5550"/><text x="93.0585%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,817 samples, 1.63%)</title><rect x="92.7373%" y="981" width="1.6255%" height="15" fill="rgb(242,222,40)" fg:x="331877" fg:w="5817"/><text x="92.9873%" y="991.50"></text></g><g><title>sk-gen`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.01%)</title><rect x="94.3868%" y="917" width="0.0101%" height="15" fill="rgb(229,99,46)" fg:x="337780" fg:w="36"/><text x="94.6368%" y="927.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.02%)</title><rect x="94.3820%" y="933" width="0.0179%" height="15" fill="rgb(225,56,46)" fg:x="337763" fg:w="64"/><text x="94.6320%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (96 samples, 0.03%)</title><rect x="94.3742%" y="949" width="0.0268%" height="15" fill="rgb(227,94,5)" fg:x="337735" fg:w="96"/><text x="94.6242%" y="959.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (148 samples, 0.04%)</title><rect x="94.3627%" y="981" width="0.0414%" height="15" fill="rgb(205,112,38)" fg:x="337694" fg:w="148"/><text x="94.6127%" y="991.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (131 samples, 0.04%)</title><rect x="94.3675%" y="965" width="0.0366%" height="15" fill="rgb(231,133,46)" fg:x="337711" fg:w="131"/><text x="94.6175%" y="975.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="94.4041%" y="981" width="0.0156%" height="15" fill="rgb(217,16,9)" fg:x="337842" fg:w="56"/><text x="94.6541%" y="991.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (6,305 samples, 1.76%)</title><rect x="92.6607%" y="997" width="1.7618%" height="15" fill="rgb(249,173,9)" fg:x="331603" fg:w="6305"/><text x="92.9107%" y="1007.50"></text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,766 samples, 1.89%)</title><rect x="92.5383%" y="1013" width="1.8906%" height="15" fill="rgb(205,163,53)" fg:x="331165" fg:w="6766"/><text x="92.7883%" y="1023.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,045 samples, 1.97%)</title><rect x="92.4690%" y="1029" width="1.9686%" height="15" fill="rgb(217,54,41)" fg:x="330917" fg:w="7045"/><text x="92.7190%" y="1039.50">s..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.02%)</title><rect x="94.4376%" y="1029" width="0.0173%" height="15" fill="rgb(228,216,12)" fg:x="337962" fg:w="62"/><text x="94.6876%" y="1039.50"></text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (7,384 samples, 2.06%)</title><rect x="92.3924%" y="1045" width="2.0633%" height="15" fill="rgb(244,228,15)" fg:x="330643" fg:w="7384"/><text x="92.6424%" y="1055.50">s..</text></g><g><title>sk-gen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,675 samples, 2.14%)</title><rect x="92.3125%" y="1061" width="2.1446%" height="15" fill="rgb(221,176,53)" fg:x="330357" fg:w="7675"/><text x="92.5625%" y="1071.50">s..</text></g><g><title>sk-gen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,802 samples, 2.18%)</title><rect x="92.2796%" y="1077" width="2.1801%" height="15" fill="rgb(205,94,34)" fg:x="330239" fg:w="7802"/><text x="92.5296%" y="1087.50">s..</text></g><g><title>sk-gen`&lt;sk_core::jsonutils::OrderedHashableJsonValue as core::hash::Hash&gt;::hash (7,941 samples, 2.22%)</title><rect x="92.2508%" y="1093" width="2.2190%" height="15" fill="rgb(213,110,48)" fg:x="330136" fg:w="7941"/><text x="92.5008%" y="1103.50">s..</text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::hash::Hash&gt;::hash (27,769 samples, 7.76%)</title><rect x="86.7107%" y="1125" width="7.7596%" height="15" fill="rgb(236,142,28)" fg:x="310310" fg:w="27769"/><text x="86.9607%" y="1135.50">sk-gen`&lt;sk_..</text></g><g><title>sk-gen`sk_core::jsonutils::ordered_hash (7,999 samples, 2.24%)</title><rect x="92.2351%" y="1109" width="2.2352%" height="15" fill="rgb(225,135,29)" fg:x="330080" fg:w="7999"/><text x="92.4851%" y="1119.50">s..</text></g><g><title>sk-gen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28,490 samples, 7.96%)</title><rect x="86.5109%" y="1157" width="7.9610%" height="15" fill="rgb(252,45,31)" fg:x="309595" fg:w="28490"/><text x="86.7609%" y="1167.50">sk-gen`hash..</text></g><g><title>sk-gen`core::hash::BuildHasher::hash_one (28,077 samples, 7.85%)</title><rect x="86.6264%" y="1141" width="7.8456%" height="15" fill="rgb(211,187,50)" fg:x="310008" fg:w="28077"/><text x="86.8764%" y="1151.50">sk-gen`core..</text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (59 samples, 0.02%)</title><rect x="94.4781%" y="1141" width="0.0165%" height="15" fill="rgb(229,109,7)" fg:x="338107" fg:w="59"/><text x="94.7281%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (59 samples, 0.02%)</title><rect x="94.4781%" y="1125" width="0.0165%" height="15" fill="rgb(251,131,51)" fg:x="338107" fg:w="59"/><text x="94.7281%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (55 samples, 0.02%)</title><rect x="94.4792%" y="1109" width="0.0154%" height="15" fill="rgb(251,180,35)" fg:x="338111" fg:w="55"/><text x="94.7292%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (49 samples, 0.01%)</title><rect x="94.4809%" y="1093" width="0.0137%" height="15" fill="rgb(211,46,32)" fg:x="338117" fg:w="49"/><text x="94.7309%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (39 samples, 0.01%)</title><rect x="94.4837%" y="1077" width="0.0109%" height="15" fill="rgb(248,123,17)" fg:x="338127" fg:w="39"/><text x="94.7337%" y="1087.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (72 samples, 0.02%)</title><rect x="94.5231%" y="981" width="0.0201%" height="15" fill="rgb(227,141,18)" fg:x="338268" fg:w="72"/><text x="94.7731%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (44 samples, 0.01%)</title><rect x="94.5309%" y="965" width="0.0123%" height="15" fill="rgb(216,102,9)" fg:x="338296" fg:w="44"/><text x="94.7809%" y="975.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (112 samples, 0.03%)</title><rect x="94.5122%" y="1029" width="0.0313%" height="15" fill="rgb(253,47,13)" fg:x="338229" fg:w="112"/><text x="94.7622%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (89 samples, 0.02%)</title><rect x="94.5186%" y="1013" width="0.0249%" height="15" fill="rgb(226,93,23)" fg:x="338252" fg:w="89"/><text x="94.7686%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (79 samples, 0.02%)</title><rect x="94.5214%" y="997" width="0.0221%" height="15" fill="rgb(247,104,17)" fg:x="338262" fg:w="79"/><text x="94.7714%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (124 samples, 0.03%)</title><rect x="94.5091%" y="1061" width="0.0346%" height="15" fill="rgb(233,203,26)" fg:x="338218" fg:w="124"/><text x="94.7591%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (117 samples, 0.03%)</title><rect x="94.5111%" y="1045" width="0.0327%" height="15" fill="rgb(244,98,49)" fg:x="338225" fg:w="117"/><text x="94.7611%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (142 samples, 0.04%)</title><rect x="94.5055%" y="1093" width="0.0397%" height="15" fill="rgb(235,134,22)" fg:x="338205" fg:w="142"/><text x="94.7555%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (131 samples, 0.04%)</title><rect x="94.5086%" y="1077" width="0.0366%" height="15" fill="rgb(221,70,32)" fg:x="338216" fg:w="131"/><text x="94.7586%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::to_value (250 samples, 0.07%)</title><rect x="94.4756%" y="1157" width="0.0699%" height="15" fill="rgb(238,15,50)" fg:x="338098" fg:w="250"/><text x="94.7256%" y="1167.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (182 samples, 0.05%)</title><rect x="94.4946%" y="1141" width="0.0509%" height="15" fill="rgb(215,221,48)" fg:x="338166" fg:w="182"/><text x="94.7446%" y="1151.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (161 samples, 0.04%)</title><rect x="94.5005%" y="1125" width="0.0450%" height="15" fill="rgb(236,73,3)" fg:x="338187" fg:w="161"/><text x="94.7505%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (145 samples, 0.04%)</title><rect x="94.5050%" y="1109" width="0.0405%" height="15" fill="rgb(250,107,11)" fg:x="338203" fg:w="145"/><text x="94.7550%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.01%)</title><rect x="94.6246%" y="1109" width="0.0109%" height="15" fill="rgb(242,39,14)" fg:x="338631" fg:w="39"/><text x="94.8746%" y="1119.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.02%)</title><rect x="94.6355%" y="1109" width="0.0168%" height="15" fill="rgb(248,164,37)" fg:x="338670" fg:w="60"/><text x="94.8855%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (63 samples, 0.02%)</title><rect x="94.7129%" y="1029" width="0.0176%" height="15" fill="rgb(217,60,12)" fg:x="338947" fg:w="63"/><text x="94.9629%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (83 samples, 0.02%)</title><rect x="94.7092%" y="1045" width="0.0232%" height="15" fill="rgb(240,125,29)" fg:x="338934" fg:w="83"/><text x="94.9592%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (48 samples, 0.01%)</title><rect x="94.7324%" y="1045" width="0.0134%" height="15" fill="rgb(208,207,28)" fg:x="339017" fg:w="48"/><text x="94.9824%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (199 samples, 0.06%)</title><rect x="94.7006%" y="1061" width="0.0556%" height="15" fill="rgb(209,159,27)" fg:x="338903" fg:w="199"/><text x="94.9506%" y="1071.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (210 samples, 0.06%)</title><rect x="94.6983%" y="1077" width="0.0587%" height="15" fill="rgb(251,176,53)" fg:x="338895" fg:w="210"/><text x="94.9483%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (341 samples, 0.10%)</title><rect x="94.6799%" y="1093" width="0.0953%" height="15" fill="rgb(211,85,7)" fg:x="338829" fg:w="341"/><text x="94.9299%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (442 samples, 0.12%)</title><rect x="94.6598%" y="1109" width="0.1235%" height="15" fill="rgb(216,64,54)" fg:x="338757" fg:w="442"/><text x="94.9098%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (75 samples, 0.02%)</title><rect x="94.7833%" y="1109" width="0.0210%" height="15" fill="rgb(217,54,24)" fg:x="339199" fg:w="75"/><text x="95.0333%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.02%)</title><rect x="94.8218%" y="1093" width="0.0179%" height="15" fill="rgb(208,206,53)" fg:x="339337" fg:w="64"/><text x="95.0718%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (52 samples, 0.01%)</title><rect x="94.8414%" y="1093" width="0.0145%" height="15" fill="rgb(251,74,39)" fg:x="339407" fg:w="52"/><text x="95.0914%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (117 samples, 0.03%)</title><rect x="94.9146%" y="1077" width="0.0327%" height="15" fill="rgb(226,47,5)" fg:x="339669" fg:w="117"/><text x="95.1646%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (221 samples, 0.06%)</title><rect x="94.9484%" y="1077" width="0.0618%" height="15" fill="rgb(234,111,33)" fg:x="339790" fg:w="221"/><text x="95.1984%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (180 samples, 0.05%)</title><rect x="94.9599%" y="1061" width="0.0503%" height="15" fill="rgb(251,14,10)" fg:x="339831" fg:w="180"/><text x="95.2099%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (109 samples, 0.03%)</title><rect x="94.9797%" y="1045" width="0.0305%" height="15" fill="rgb(232,43,0)" fg:x="339902" fg:w="109"/><text x="95.2297%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (174 samples, 0.05%)</title><rect x="95.0116%" y="1077" width="0.0486%" height="15" fill="rgb(222,68,43)" fg:x="340016" fg:w="174"/><text x="95.2616%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (107 samples, 0.03%)</title><rect x="95.1021%" y="1061" width="0.0299%" height="15" fill="rgb(217,24,23)" fg:x="340340" fg:w="107"/><text x="95.3521%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (113 samples, 0.03%)</title><rect x="95.1337%" y="1061" width="0.0316%" height="15" fill="rgb(229,209,14)" fg:x="340453" fg:w="113"/><text x="95.3837%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (88 samples, 0.02%)</title><rect x="95.1407%" y="1045" width="0.0246%" height="15" fill="rgb(250,149,48)" fg:x="340478" fg:w="88"/><text x="95.3907%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.01%)</title><rect x="95.1532%" y="1029" width="0.0120%" height="15" fill="rgb(210,120,37)" fg:x="340523" fg:w="43"/><text x="95.4032%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.03%)</title><rect x="95.1661%" y="1061" width="0.0268%" height="15" fill="rgb(210,21,8)" fg:x="340569" fg:w="96"/><text x="95.4161%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.01%)</title><rect x="95.2186%" y="1029" width="0.0106%" height="15" fill="rgb(243,145,7)" fg:x="340757" fg:w="38"/><text x="95.4686%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (88 samples, 0.02%)</title><rect x="95.2295%" y="1029" width="0.0246%" height="15" fill="rgb(238,178,32)" fg:x="340796" fg:w="88"/><text x="95.4795%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (193 samples, 0.05%)</title><rect x="95.2541%" y="1029" width="0.0539%" height="15" fill="rgb(222,4,10)" fg:x="340884" fg:w="193"/><text x="95.5041%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (169 samples, 0.05%)</title><rect x="95.2608%" y="1013" width="0.0472%" height="15" fill="rgb(239,7,37)" fg:x="340908" fg:w="169"/><text x="95.5108%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (88 samples, 0.02%)</title><rect x="95.2835%" y="997" width="0.0246%" height="15" fill="rgb(215,31,37)" fg:x="340989" fg:w="88"/><text x="95.5335%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (77 samples, 0.02%)</title><rect x="95.2865%" y="981" width="0.0215%" height="15" fill="rgb(224,83,33)" fg:x="341000" fg:w="77"/><text x="95.5365%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (421 samples, 0.12%)</title><rect x="95.1974%" y="1045" width="0.1176%" height="15" fill="rgb(239,55,3)" fg:x="340681" fg:w="421"/><text x="95.4474%" y="1055.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (447 samples, 0.12%)</title><rect x="95.1929%" y="1061" width="0.1249%" height="15" fill="rgb(247,92,11)" fg:x="340665" fg:w="447"/><text x="95.4429%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (114 samples, 0.03%)</title><rect x="95.3838%" y="1045" width="0.0319%" height="15" fill="rgb(239,200,7)" fg:x="341348" fg:w="114"/><text x="95.6338%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (47 samples, 0.01%)</title><rect x="95.4427%" y="1013" width="0.0131%" height="15" fill="rgb(227,115,8)" fg:x="341559" fg:w="47"/><text x="95.6927%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (224 samples, 0.06%)</title><rect x="95.4170%" y="1045" width="0.0626%" height="15" fill="rgb(215,189,27)" fg:x="341467" fg:w="224"/><text x="95.6670%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (185 samples, 0.05%)</title><rect x="95.4279%" y="1029" width="0.0517%" height="15" fill="rgb(251,216,39)" fg:x="341506" fg:w="185"/><text x="95.6779%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (85 samples, 0.02%)</title><rect x="95.4559%" y="1013" width="0.0238%" height="15" fill="rgb(207,29,47)" fg:x="341606" fg:w="85"/><text x="95.7059%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (66 samples, 0.02%)</title><rect x="95.4821%" y="1045" width="0.0184%" height="15" fill="rgb(210,71,34)" fg:x="341700" fg:w="66"/><text x="95.7321%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (211 samples, 0.06%)</title><rect x="95.6082%" y="1029" width="0.0590%" height="15" fill="rgb(253,217,51)" fg:x="342151" fg:w="211"/><text x="95.8582%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (59 samples, 0.02%)</title><rect x="95.7060%" y="997" width="0.0165%" height="15" fill="rgb(222,117,46)" fg:x="342501" fg:w="59"/><text x="95.9560%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (288 samples, 0.08%)</title><rect x="95.6685%" y="1029" width="0.0805%" height="15" fill="rgb(226,132,6)" fg:x="342367" fg:w="288"/><text x="95.9185%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (229 samples, 0.06%)</title><rect x="95.6850%" y="1013" width="0.0640%" height="15" fill="rgb(254,145,51)" fg:x="342426" fg:w="229"/><text x="95.9350%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (95 samples, 0.03%)</title><rect x="95.7224%" y="997" width="0.0265%" height="15" fill="rgb(231,199,27)" fg:x="342560" fg:w="95"/><text x="95.9724%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (319 samples, 0.09%)</title><rect x="95.7535%" y="1029" width="0.0891%" height="15" fill="rgb(245,158,14)" fg:x="342671" fg:w="319"/><text x="96.0035%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (56 samples, 0.02%)</title><rect x="95.8541%" y="1013" width="0.0156%" height="15" fill="rgb(240,113,14)" fg:x="343031" fg:w="56"/><text x="96.1041%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (184 samples, 0.05%)</title><rect x="95.9653%" y="997" width="0.0514%" height="15" fill="rgb(210,20,13)" fg:x="343429" fg:w="184"/><text x="96.2153%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (168 samples, 0.05%)</title><rect x="96.0181%" y="997" width="0.0469%" height="15" fill="rgb(241,144,13)" fg:x="343618" fg:w="168"/><text x="96.2681%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (133 samples, 0.04%)</title><rect x="96.0279%" y="981" width="0.0372%" height="15" fill="rgb(235,43,34)" fg:x="343653" fg:w="133"/><text x="96.2779%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (71 samples, 0.02%)</title><rect x="96.0452%" y="965" width="0.0198%" height="15" fill="rgb(208,36,20)" fg:x="343715" fg:w="71"/><text x="96.2952%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (347 samples, 0.10%)</title><rect x="96.0659%" y="997" width="0.0970%" height="15" fill="rgb(239,204,10)" fg:x="343789" fg:w="347"/><text x="96.3159%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (57 samples, 0.02%)</title><rect x="96.1774%" y="981" width="0.0159%" height="15" fill="rgb(217,84,43)" fg:x="344188" fg:w="57"/><text x="96.4274%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (114 samples, 0.03%)</title><rect x="96.1933%" y="981" width="0.0319%" height="15" fill="rgb(241,170,50)" fg:x="344245" fg:w="114"/><text x="96.4433%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (53 samples, 0.01%)</title><rect x="96.2103%" y="965" width="0.0148%" height="15" fill="rgb(226,205,29)" fg:x="344306" fg:w="53"/><text x="96.4603%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (39 samples, 0.01%)</title><rect x="96.2268%" y="981" width="0.0109%" height="15" fill="rgb(233,113,1)" fg:x="344365" fg:w="39"/><text x="96.4768%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (147 samples, 0.04%)</title><rect x="96.3185%" y="965" width="0.0411%" height="15" fill="rgb(253,98,13)" fg:x="344693" fg:w="147"/><text x="96.5685%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (63 samples, 0.02%)</title><rect x="96.3839%" y="933" width="0.0176%" height="15" fill="rgb(211,115,12)" fg:x="344927" fg:w="63"/><text x="96.6339%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (250 samples, 0.07%)</title><rect x="96.3609%" y="965" width="0.0699%" height="15" fill="rgb(208,12,16)" fg:x="344845" fg:w="250"/><text x="96.6109%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (212 samples, 0.06%)</title><rect x="96.3716%" y="949" width="0.0592%" height="15" fill="rgb(237,193,54)" fg:x="344883" fg:w="212"/><text x="96.6216%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (104 samples, 0.03%)</title><rect x="96.4017%" y="933" width="0.0291%" height="15" fill="rgb(243,22,42)" fg:x="344991" fg:w="104"/><text x="96.6517%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (332 samples, 0.09%)</title><rect x="96.4333%" y="965" width="0.0928%" height="15" fill="rgb(233,151,36)" fg:x="345104" fg:w="332"/><text x="96.6833%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (698 samples, 0.20%)</title><rect x="96.5261%" y="965" width="0.1950%" height="15" fill="rgb(237,57,45)" fg:x="345436" fg:w="698"/><text x="96.7761%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (638 samples, 0.18%)</title><rect x="96.5429%" y="949" width="0.1783%" height="15" fill="rgb(221,88,17)" fg:x="345496" fg:w="638"/><text x="96.7929%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (404 samples, 0.11%)</title><rect x="96.6082%" y="933" width="0.1129%" height="15" fill="rgb(230,79,15)" fg:x="345730" fg:w="404"/><text x="96.8582%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (340 samples, 0.10%)</title><rect x="96.6261%" y="917" width="0.0950%" height="15" fill="rgb(213,57,13)" fg:x="345794" fg:w="340"/><text x="96.8761%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,793 samples, 0.50%)</title><rect x="96.2377%" y="981" width="0.5010%" height="15" fill="rgb(222,116,39)" fg:x="344404" fg:w="1793"/><text x="96.4877%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (95 samples, 0.03%)</title><rect x="96.7387%" y="981" width="0.0265%" height="15" fill="rgb(245,107,2)" fg:x="346197" fg:w="95"/><text x="96.9887%" y="991.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (2,179 samples, 0.61%)</title><rect x="96.1628%" y="997" width="0.6089%" height="15" fill="rgb(238,1,10)" fg:x="344136" fg:w="2179"/><text x="96.4128%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.01%)</title><rect x="96.8220%" y="981" width="0.0109%" height="15" fill="rgb(249,4,48)" fg:x="346495" fg:w="39"/><text x="97.0720%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (137 samples, 0.04%)</title><rect x="96.8332%" y="981" width="0.0383%" height="15" fill="rgb(223,151,18)" fg:x="346535" fg:w="137"/><text x="97.0832%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (107 samples, 0.03%)</title><rect x="96.8416%" y="965" width="0.0299%" height="15" fill="rgb(227,65,43)" fg:x="346565" fg:w="107"/><text x="97.0916%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.01%)</title><rect x="96.8595%" y="949" width="0.0120%" height="15" fill="rgb(218,40,45)" fg:x="346629" fg:w="43"/><text x="97.1095%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (93 samples, 0.03%)</title><rect x="96.8718%" y="981" width="0.0260%" height="15" fill="rgb(252,121,31)" fg:x="346673" fg:w="93"/><text x="97.1218%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (85 samples, 0.02%)</title><rect x="96.9302%" y="965" width="0.0238%" height="15" fill="rgb(219,158,43)" fg:x="346882" fg:w="85"/><text x="97.1802%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.02%)</title><rect x="96.9355%" y="949" width="0.0184%" height="15" fill="rgb(231,162,42)" fg:x="346901" fg:w="66"/><text x="97.1855%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.02%)</title><rect x="96.9587%" y="965" width="0.0168%" height="15" fill="rgb(217,179,25)" fg:x="346984" fg:w="60"/><text x="97.2087%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (244 samples, 0.07%)</title><rect x="96.9754%" y="965" width="0.0682%" height="15" fill="rgb(206,212,31)" fg:x="347044" fg:w="244"/><text x="97.2254%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (197 samples, 0.06%)</title><rect x="96.9886%" y="949" width="0.0550%" height="15" fill="rgb(235,144,12)" fg:x="347091" fg:w="197"/><text x="97.2386%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (126 samples, 0.04%)</title><rect x="97.0084%" y="933" width="0.0352%" height="15" fill="rgb(213,51,10)" fg:x="347162" fg:w="126"/><text x="97.2584%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (112 samples, 0.03%)</title><rect x="97.0123%" y="917" width="0.0313%" height="15" fill="rgb(231,145,14)" fg:x="347176" fg:w="112"/><text x="97.2623%" y="927.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (533 samples, 0.15%)</title><rect x="96.8977%" y="981" width="0.1489%" height="15" fill="rgb(235,15,28)" fg:x="346766" fg:w="533"/><text x="97.1477%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (192 samples, 0.05%)</title><rect x="97.0467%" y="981" width="0.0537%" height="15" fill="rgb(237,206,10)" fg:x="347299" fg:w="192"/><text x="97.2967%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (166 samples, 0.05%)</title><rect x="97.0539%" y="965" width="0.0464%" height="15" fill="rgb(236,227,27)" fg:x="347325" fg:w="166"/><text x="97.3039%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (107 samples, 0.03%)</title><rect x="97.0704%" y="949" width="0.0299%" height="15" fill="rgb(246,83,35)" fg:x="347384" fg:w="107"/><text x="97.3204%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (97 samples, 0.03%)</title><rect x="97.0732%" y="933" width="0.0271%" height="15" fill="rgb(220,136,24)" fg:x="347394" fg:w="97"/><text x="97.3232%" y="943.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,200 samples, 0.34%)</title><rect x="96.7717%" y="997" width="0.3353%" height="15" fill="rgb(217,3,25)" fg:x="346315" fg:w="1200"/><text x="97.0217%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (742 samples, 0.21%)</title><rect x="97.1070%" y="997" width="0.2073%" height="15" fill="rgb(239,24,14)" fg:x="347515" fg:w="742"/><text x="97.3570%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (658 samples, 0.18%)</title><rect x="97.1305%" y="981" width="0.1839%" height="15" fill="rgb(244,16,53)" fg:x="347599" fg:w="658"/><text x="97.3805%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (408 samples, 0.11%)</title><rect x="97.2004%" y="965" width="0.1140%" height="15" fill="rgb(208,175,44)" fg:x="347849" fg:w="408"/><text x="97.4504%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (349 samples, 0.10%)</title><rect x="97.2169%" y="949" width="0.0975%" height="15" fill="rgb(252,18,48)" fg:x="347908" fg:w="349"/><text x="97.4669%" y="959.50"></text></g><g><title>sk-gen`DYLD-STUB$$malloc (38 samples, 0.01%)</title><rect x="97.3144%" y="997" width="0.0106%" height="15" fill="rgb(234,199,32)" fg:x="348257" fg:w="38"/><text x="97.5644%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,242 samples, 1.46%)</title><rect x="95.8759%" y="1013" width="1.4648%" height="15" fill="rgb(225,77,54)" fg:x="343109" fg:w="5242"/><text x="96.1259%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (54 samples, 0.02%)</title><rect x="97.3406%" y="1013" width="0.0151%" height="15" fill="rgb(225,42,25)" fg:x="348351" fg:w="54"/><text x="97.5906%" y="1023.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (5,418 samples, 1.51%)</title><rect x="95.8426%" y="1029" width="1.5140%" height="15" fill="rgb(242,227,46)" fg:x="342990" fg:w="5418"/><text x="96.0926%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.01%)</title><rect x="97.3812%" y="1013" width="0.0101%" height="15" fill="rgb(246,197,35)" fg:x="348496" fg:w="36"/><text x="97.6312%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (93 samples, 0.03%)</title><rect x="97.3918%" y="1013" width="0.0260%" height="15" fill="rgb(215,159,26)" fg:x="348534" fg:w="93"/><text x="97.6418%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (80 samples, 0.02%)</title><rect x="97.3954%" y="997" width="0.0224%" height="15" fill="rgb(212,194,50)" fg:x="348547" fg:w="80"/><text x="97.6454%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.01%)</title><rect x="97.4049%" y="981" width="0.0129%" height="15" fill="rgb(246,132,1)" fg:x="348581" fg:w="46"/><text x="97.6549%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (114 samples, 0.03%)</title><rect x="97.4180%" y="1013" width="0.0319%" height="15" fill="rgb(217,71,7)" fg:x="348628" fg:w="114"/><text x="97.6680%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (190 samples, 0.05%)</title><rect x="97.4499%" y="1013" width="0.0531%" height="15" fill="rgb(252,59,32)" fg:x="348742" fg:w="190"/><text x="97.6999%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (169 samples, 0.05%)</title><rect x="97.4558%" y="997" width="0.0472%" height="15" fill="rgb(253,204,25)" fg:x="348763" fg:w="169"/><text x="97.7058%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (101 samples, 0.03%)</title><rect x="97.4748%" y="981" width="0.0282%" height="15" fill="rgb(232,21,16)" fg:x="348831" fg:w="101"/><text x="97.7248%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (85 samples, 0.02%)</title><rect x="97.4792%" y="965" width="0.0238%" height="15" fill="rgb(248,90,29)" fg:x="348847" fg:w="85"/><text x="97.7292%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (546 samples, 0.15%)</title><rect x="97.3566%" y="1029" width="0.1526%" height="15" fill="rgb(249,223,7)" fg:x="348408" fg:w="546"/><text x="97.6066%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (880 samples, 0.25%)</title><rect x="97.5091%" y="1029" width="0.2459%" height="15" fill="rgb(231,119,42)" fg:x="348954" fg:w="880"/><text x="97.7591%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (772 samples, 0.22%)</title><rect x="97.5393%" y="1013" width="0.2157%" height="15" fill="rgb(215,41,35)" fg:x="349062" fg:w="772"/><text x="97.7893%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (495 samples, 0.14%)</title><rect x="97.6167%" y="997" width="0.1383%" height="15" fill="rgb(220,44,45)" fg:x="349339" fg:w="495"/><text x="97.8667%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (444 samples, 0.12%)</title><rect x="97.6310%" y="981" width="0.1241%" height="15" fill="rgb(253,197,36)" fg:x="349390" fg:w="444"/><text x="97.8810%" y="991.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,140 samples, 2.27%)</title><rect x="95.5025%" y="1045" width="2.2746%" height="15" fill="rgb(245,225,54)" fg:x="341773" fg:w="8140"/><text x="95.7525%" y="1055.50">s..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (350 samples, 0.10%)</title><rect x="97.7771%" y="1045" width="0.0978%" height="15" fill="rgb(239,94,37)" fg:x="349913" fg:w="350"/><text x="98.0271%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (271 samples, 0.08%)</title><rect x="97.7992%" y="1029" width="0.0757%" height="15" fill="rgb(242,217,10)" fg:x="349992" fg:w="271"/><text x="98.0492%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (189 samples, 0.05%)</title><rect x="97.8221%" y="1013" width="0.0528%" height="15" fill="rgb(250,193,7)" fg:x="350074" fg:w="189"/><text x="98.0721%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (180 samples, 0.05%)</title><rect x="97.8246%" y="997" width="0.0503%" height="15" fill="rgb(230,104,19)" fg:x="350083" fg:w="180"/><text x="98.0746%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,193 samples, 2.57%)</title><rect x="95.3178%" y="1061" width="2.5688%" height="15" fill="rgb(230,181,4)" fg:x="341112" fg:w="9193"/><text x="95.5678%" y="1071.50">sk..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (287 samples, 0.08%)</title><rect x="97.8867%" y="1061" width="0.0802%" height="15" fill="rgb(216,219,49)" fg:x="350305" fg:w="287"/><text x="98.1367%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (246 samples, 0.07%)</title><rect x="97.8981%" y="1045" width="0.0687%" height="15" fill="rgb(254,144,0)" fg:x="350346" fg:w="246"/><text x="98.1481%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (146 samples, 0.04%)</title><rect x="97.9261%" y="1029" width="0.0408%" height="15" fill="rgb(205,209,38)" fg:x="350446" fg:w="146"/><text x="98.1761%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (120 samples, 0.03%)</title><rect x="97.9333%" y="1013" width="0.0335%" height="15" fill="rgb(240,21,42)" fg:x="350472" fg:w="120"/><text x="98.1833%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,436 samples, 2.92%)</title><rect x="95.0605%" y="1077" width="2.9162%" height="15" fill="rgb(241,132,3)" fg:x="340191" fg:w="10436"/><text x="95.3105%" y="1087.50">sk..</text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (358 samples, 0.10%)</title><rect x="97.9766%" y="1077" width="0.1000%" height="15" fill="rgb(225,14,2)" fg:x="350627" fg:w="358"/><text x="98.2266%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (309 samples, 0.09%)</title><rect x="97.9903%" y="1061" width="0.0863%" height="15" fill="rgb(210,141,35)" fg:x="350676" fg:w="309"/><text x="98.2403%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (174 samples, 0.05%)</title><rect x="98.0280%" y="1045" width="0.0486%" height="15" fill="rgb(251,14,44)" fg:x="350811" fg:w="174"/><text x="98.2780%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (137 samples, 0.04%)</title><rect x="98.0384%" y="1029" width="0.0383%" height="15" fill="rgb(247,48,18)" fg:x="350848" fg:w="137"/><text x="98.2884%" y="1039.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11,572 samples, 3.23%)</title><rect x="94.8559%" y="1093" width="3.2336%" height="15" fill="rgb(225,0,40)" fg:x="339459" fg:w="11572"/><text x="95.1059%" y="1103.50">sk-..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (117 samples, 0.03%)</title><rect x="98.1169%" y="1061" width="0.0327%" height="15" fill="rgb(221,31,33)" fg:x="351129" fg:w="117"/><text x="98.3669%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (108 samples, 0.03%)</title><rect x="98.1194%" y="1045" width="0.0302%" height="15" fill="rgb(237,42,40)" fg:x="351138" fg:w="108"/><text x="98.3694%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (216 samples, 0.06%)</title><rect x="98.0895%" y="1093" width="0.0604%" height="15" fill="rgb(233,51,29)" fg:x="351031" fg:w="216"/><text x="98.3395%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (172 samples, 0.05%)</title><rect x="98.1018%" y="1077" width="0.0481%" height="15" fill="rgb(226,58,20)" fg:x="351075" fg:w="172"/><text x="98.3518%" y="1087.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (11,992 samples, 3.35%)</title><rect x="94.8042%" y="1109" width="3.3510%" height="15" fill="rgb(208,98,7)" fg:x="339274" fg:w="11992"/><text x="95.0542%" y="1119.50">sk-..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.01%)</title><rect x="98.1574%" y="1093" width="0.0101%" height="15" fill="rgb(228,143,44)" fg:x="351274" fg:w="36"/><text x="98.4074%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (79 samples, 0.02%)</title><rect x="98.1678%" y="1093" width="0.0221%" height="15" fill="rgb(246,55,38)" fg:x="351311" fg:w="79"/><text x="98.4178%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (137 samples, 0.04%)</title><rect x="98.1898%" y="1093" width="0.0383%" height="15" fill="rgb(247,87,16)" fg:x="351390" fg:w="137"/><text x="98.4398%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (112 samples, 0.03%)</title><rect x="98.1968%" y="1077" width="0.0313%" height="15" fill="rgb(234,129,42)" fg:x="351415" fg:w="112"/><text x="98.4468%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (59 samples, 0.02%)</title><rect x="98.2116%" y="1061" width="0.0165%" height="15" fill="rgb(220,82,16)" fg:x="351468" fg:w="59"/><text x="98.4616%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (50 samples, 0.01%)</title><rect x="98.2141%" y="1045" width="0.0140%" height="15" fill="rgb(211,88,4)" fg:x="351477" fg:w="50"/><text x="98.4641%" y="1055.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (277 samples, 0.08%)</title><rect x="98.1552%" y="1109" width="0.0774%" height="15" fill="rgb(248,151,21)" fg:x="351266" fg:w="277"/><text x="98.4052%" y="1119.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,053 samples, 3.65%)</title><rect x="94.5863%" y="1125" width="3.6474%" height="15" fill="rgb(238,163,6)" fg:x="338494" fg:w="13053"/><text x="94.8363%" y="1135.50">sk-g..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.01%)</title><rect x="98.3335%" y="1045" width="0.0120%" height="15" fill="rgb(209,183,11)" fg:x="351904" fg:w="43"/><text x="98.5835%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.01%)</title><rect x="98.3740%" y="1013" width="0.0137%" height="15" fill="rgb(219,37,20)" fg:x="352049" fg:w="49"/><text x="98.6240%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (70 samples, 0.02%)</title><rect x="98.4167%" y="981" width="0.0196%" height="15" fill="rgb(210,158,4)" fg:x="352202" fg:w="70"/><text x="98.6667%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (59 samples, 0.02%)</title><rect x="98.4198%" y="965" width="0.0165%" height="15" fill="rgb(221,167,53)" fg:x="352213" fg:w="59"/><text x="98.6698%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (38 samples, 0.01%)</title><rect x="98.4257%" y="949" width="0.0106%" height="15" fill="rgb(237,151,45)" fg:x="352234" fg:w="38"/><text x="98.6757%" y="959.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (154 samples, 0.04%)</title><rect x="98.3944%" y="997" width="0.0430%" height="15" fill="rgb(231,39,3)" fg:x="352122" fg:w="154"/><text x="98.6444%" y="1007.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (192 samples, 0.05%)</title><rect x="98.3877%" y="1013" width="0.0537%" height="15" fill="rgb(212,167,28)" fg:x="352098" fg:w="192"/><text x="98.6377%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (69 samples, 0.02%)</title><rect x="98.4584%" y="997" width="0.0193%" height="15" fill="rgb(232,178,8)" fg:x="352351" fg:w="69"/><text x="98.7084%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (147 samples, 0.04%)</title><rect x="98.4413%" y="1013" width="0.0411%" height="15" fill="rgb(225,151,20)" fg:x="352290" fg:w="147"/><text x="98.6913%" y="1023.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (111 samples, 0.03%)</title><rect x="98.4824%" y="1013" width="0.0310%" height="15" fill="rgb(238,3,37)" fg:x="352437" fg:w="111"/><text x="98.7324%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (101 samples, 0.03%)</title><rect x="98.4852%" y="997" width="0.0282%" height="15" fill="rgb(251,147,42)" fg:x="352447" fg:w="101"/><text x="98.7352%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (67 samples, 0.02%)</title><rect x="98.4947%" y="981" width="0.0187%" height="15" fill="rgb(208,173,10)" fg:x="352481" fg:w="67"/><text x="98.7447%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (57 samples, 0.02%)</title><rect x="98.4975%" y="965" width="0.0159%" height="15" fill="rgb(246,225,4)" fg:x="352491" fg:w="57"/><text x="98.7475%" y="975.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (603 samples, 0.17%)</title><rect x="98.3477%" y="1029" width="0.1685%" height="15" fill="rgb(248,102,6)" fg:x="351955" fg:w="603"/><text x="98.5977%" y="1039.50"></text></g><g><title>sk-gen`&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (612 samples, 0.17%)</title><rect x="98.3455%" y="1045" width="0.1710%" height="15" fill="rgb(232,6,21)" fg:x="351947" fg:w="612"/><text x="98.5955%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (60 samples, 0.02%)</title><rect x="98.5165%" y="1045" width="0.0168%" height="15" fill="rgb(221,179,22)" fg:x="352559" fg:w="60"/><text x="98.7665%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (143 samples, 0.04%)</title><rect x="98.5333%" y="1045" width="0.0400%" height="15" fill="rgb(252,50,20)" fg:x="352619" fg:w="143"/><text x="98.7833%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (123 samples, 0.03%)</title><rect x="98.5388%" y="1029" width="0.0344%" height="15" fill="rgb(222,56,38)" fg:x="352639" fg:w="123"/><text x="98.7888%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (82 samples, 0.02%)</title><rect x="98.5503%" y="1013" width="0.0229%" height="15" fill="rgb(206,193,29)" fg:x="352680" fg:w="82"/><text x="98.8003%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (72 samples, 0.02%)</title><rect x="98.5531%" y="997" width="0.0201%" height="15" fill="rgb(239,192,45)" fg:x="352690" fg:w="72"/><text x="98.8031%" y="1007.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (988 samples, 0.28%)</title><rect x="98.3005%" y="1061" width="0.2761%" height="15" fill="rgb(254,18,36)" fg:x="351786" fg:w="988"/><text x="98.5505%" y="1071.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (50 samples, 0.01%)</title><rect x="98.5766%" y="1061" width="0.0140%" height="15" fill="rgb(221,127,11)" fg:x="352774" fg:w="50"/><text x="98.8266%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (41 samples, 0.01%)</title><rect x="98.5791%" y="1045" width="0.0115%" height="15" fill="rgb(234,146,35)" fg:x="352783" fg:w="41"/><text x="98.8291%" y="1055.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,125 samples, 0.31%)</title><rect x="98.2776%" y="1077" width="0.3144%" height="15" fill="rgb(254,201,37)" fg:x="351704" fg:w="1125"/><text x="98.5276%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,209 samples, 0.34%)</title><rect x="98.2644%" y="1093" width="0.3378%" height="15" fill="rgb(211,202,23)" fg:x="351657" fg:w="1209"/><text x="98.5144%" y="1103.50"></text></g><g><title>sk-gen`&lt;alloc::string::String as core::clone::Clone&gt;::clone (51 samples, 0.01%)</title><rect x="98.6023%" y="1093" width="0.0143%" height="15" fill="rgb(237,91,2)" fg:x="352866" fg:w="51"/><text x="98.8523%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (47 samples, 0.01%)</title><rect x="98.6034%" y="1077" width="0.0131%" height="15" fill="rgb(226,228,36)" fg:x="352870" fg:w="47"/><text x="98.8534%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,340 samples, 0.37%)</title><rect x="98.2443%" y="1109" width="0.3744%" height="15" fill="rgb(213,63,50)" fg:x="351585" fg:w="1340"/><text x="98.4943%" y="1119.50"></text></g><g><title>sk-gen`&lt;sk_gen::DynamicObjectNewType as core::clone::Clone&gt;::clone (1,398 samples, 0.39%)</title><rect x="98.2362%" y="1125" width="0.3906%" height="15" fill="rgb(235,194,19)" fg:x="351556" fg:w="1398"/><text x="98.4862%" y="1135.50"></text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::clone::Clone&gt;::clone (69 samples, 0.02%)</title><rect x="98.6269%" y="1125" width="0.0193%" height="15" fill="rgb(207,204,18)" fg:x="352954" fg:w="69"/><text x="98.8769%" y="1135.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,612 samples, 4.08%)</title><rect x="94.5650%" y="1141" width="4.0831%" height="15" fill="rgb(248,8,7)" fg:x="338418" fg:w="14612"/><text x="94.8150%" y="1151.50">sk-g..</text></g><g><title>sk-gen`&lt;sk_gen::ObjectKey as core::convert::From&lt;&amp;kube_core::dynamic::DynamicObject&gt;&gt;::from (70 samples, 0.02%)</title><rect x="98.6503%" y="1125" width="0.0196%" height="15" fill="rgb(223,145,47)" fg:x="353038" fg:w="70"/><text x="98.9003%" y="1135.50"></text></g><g><title>sk-gen`sk_core::k8s::gvk::GVK::from_dynamic_obj (66 samples, 0.02%)</title><rect x="98.6515%" y="1109" width="0.0184%" height="15" fill="rgb(228,84,11)" fg:x="353042" fg:w="66"/><text x="98.9015%" y="1119.50"></text></g><g><title>sk-gen`&lt;kube_core::gvk::GroupVersionKind as core::convert::TryFrom&lt;&amp;kube_core::metadata::TypeMeta&gt;&gt;::try_from (55 samples, 0.02%)</title><rect x="98.6545%" y="1093" width="0.0154%" height="15" fill="rgb(218,76,45)" fg:x="353053" fg:w="55"/><text x="98.9045%" y="1103.50"></text></g><g><title>sk-gen`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (103 samples, 0.03%)</title><rect x="98.6492%" y="1141" width="0.0288%" height="15" fill="rgb(223,80,15)" fg:x="353034" fg:w="103"/><text x="98.8992%" y="1151.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (44 samples, 0.01%)</title><rect x="98.7269%" y="1109" width="0.0123%" height="15" fill="rgb(219,218,33)" fg:x="353312" fg:w="44"/><text x="98.9769%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (55 samples, 0.02%)</title><rect x="98.7959%" y="1029" width="0.0154%" height="15" fill="rgb(208,51,11)" fg:x="353559" fg:w="55"/><text x="99.0459%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (37 samples, 0.01%)</title><rect x="98.8010%" y="1013" width="0.0103%" height="15" fill="rgb(229,165,39)" fg:x="353577" fg:w="37"/><text x="99.0510%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (164 samples, 0.05%)</title><rect x="98.7691%" y="1061" width="0.0458%" height="15" fill="rgb(241,100,24)" fg:x="353463" fg:w="164"/><text x="99.0191%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (95 samples, 0.03%)</title><rect x="98.7884%" y="1045" width="0.0265%" height="15" fill="rgb(228,14,23)" fg:x="353532" fg:w="95"/><text x="99.0384%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (417 samples, 0.12%)</title><rect x="98.6987%" y="1141" width="0.1165%" height="15" fill="rgb(247,116,52)" fg:x="353211" fg:w="417"/><text x="98.9487%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (364 samples, 0.10%)</title><rect x="98.7135%" y="1125" width="0.1017%" height="15" fill="rgb(216,149,33)" fg:x="353264" fg:w="364"/><text x="98.9635%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (258 samples, 0.07%)</title><rect x="98.7431%" y="1109" width="0.0721%" height="15" fill="rgb(238,142,29)" fg:x="353370" fg:w="258"/><text x="98.9931%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (199 samples, 0.06%)</title><rect x="98.7596%" y="1093" width="0.0556%" height="15" fill="rgb(224,83,40)" fg:x="353429" fg:w="199"/><text x="99.0096%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (181 samples, 0.05%)</title><rect x="98.7646%" y="1077" width="0.0506%" height="15" fill="rgb(234,165,11)" fg:x="353447" fg:w="181"/><text x="99.0146%" y="1087.50"></text></g><g><title>sk-gen`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.01%)</title><rect x="98.8186%" y="1125" width="0.0120%" height="15" fill="rgb(215,96,23)" fg:x="353640" fg:w="43"/><text x="99.0686%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta&gt; (57 samples, 0.02%)</title><rect x="98.8152%" y="1141" width="0.0159%" height="15" fill="rgb(233,179,26)" fg:x="353628" fg:w="57"/><text x="99.0652%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (40 samples, 0.01%)</title><rect x="98.8490%" y="1093" width="0.0112%" height="15" fill="rgb(225,129,33)" fg:x="353749" fg:w="40"/><text x="99.0990%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.01%)</title><rect x="98.8951%" y="1061" width="0.0101%" height="15" fill="rgb(237,49,13)" fg:x="353914" fg:w="36"/><text x="99.1451%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (54 samples, 0.02%)</title><rect x="98.8915%" y="1077" width="0.0151%" height="15" fill="rgb(211,3,31)" fg:x="353901" fg:w="54"/><text x="99.1415%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (51 samples, 0.01%)</title><rect x="98.9166%" y="1061" width="0.0143%" height="15" fill="rgb(216,152,19)" fg:x="353991" fg:w="51"/><text x="99.1666%" y="1071.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (54 samples, 0.02%)</title><rect x="98.9320%" y="1061" width="0.0151%" height="15" fill="rgb(251,121,35)" fg:x="354046" fg:w="54"/><text x="99.1820%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (56 samples, 0.02%)</title><rect x="98.9686%" y="1013" width="0.0156%" height="15" fill="rgb(210,217,47)" fg:x="354177" fg:w="56"/><text x="99.2186%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.01%)</title><rect x="99.0167%" y="965" width="0.0101%" height="15" fill="rgb(244,116,22)" fg:x="354349" fg:w="36"/><text x="99.2667%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (41 samples, 0.01%)</title><rect x="99.0301%" y="965" width="0.0115%" height="15" fill="rgb(228,17,21)" fg:x="354397" fg:w="41"/><text x="99.2801%" y="975.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (119 samples, 0.03%)</title><rect x="99.0102%" y="997" width="0.0333%" height="15" fill="rgb(240,149,34)" fg:x="354326" fg:w="119"/><text x="99.2602%" y="1007.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (103 samples, 0.03%)</title><rect x="99.0147%" y="981" width="0.0288%" height="15" fill="rgb(208,125,47)" fg:x="354342" fg:w="103"/><text x="99.2647%" y="991.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (328 samples, 0.09%)</title><rect x="98.9583%" y="1045" width="0.0917%" height="15" fill="rgb(249,186,39)" fg:x="354140" fg:w="328"/><text x="99.2083%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (299 samples, 0.08%)</title><rect x="98.9664%" y="1029" width="0.0836%" height="15" fill="rgb(240,220,33)" fg:x="354169" fg:w="299"/><text x="99.2164%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (192 samples, 0.05%)</title><rect x="98.9963%" y="1013" width="0.0537%" height="15" fill="rgb(243,110,23)" fg:x="354276" fg:w="192"/><text x="99.2463%" y="1023.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (784 samples, 0.22%)</title><rect x="98.8311%" y="1141" width="0.2191%" height="15" fill="rgb(219,163,46)" fg:x="353685" fg:w="784"/><text x="99.0811%" y="1151.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (772 samples, 0.22%)</title><rect x="98.8345%" y="1125" width="0.2157%" height="15" fill="rgb(216,126,30)" fg:x="353697" fg:w="772"/><text x="99.0845%" y="1135.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (736 samples, 0.21%)</title><rect x="98.8445%" y="1109" width="0.2057%" height="15" fill="rgb(208,139,11)" fg:x="353733" fg:w="736"/><text x="99.0945%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (647 samples, 0.18%)</title><rect x="98.8694%" y="1093" width="0.1808%" height="15" fill="rgb(213,118,36)" fg:x="353822" fg:w="647"/><text x="99.1194%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (495 samples, 0.14%)</title><rect x="98.9119%" y="1077" width="0.1383%" height="15" fill="rgb(226,43,17)" fg:x="353974" fg:w="495"/><text x="99.1619%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (369 samples, 0.10%)</title><rect x="98.9471%" y="1061" width="0.1031%" height="15" fill="rgb(254,217,4)" fg:x="354100" fg:w="369"/><text x="99.1971%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="99.0695%" y="1109" width="0.0101%" height="15" fill="rgb(210,134,47)" fg:x="354538" fg:w="36"/><text x="99.3195%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (56 samples, 0.02%)</title><rect x="99.0865%" y="1093" width="0.0156%" height="15" fill="rgb(237,24,49)" fg:x="354599" fg:w="56"/><text x="99.3365%" y="1103.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (71 samples, 0.02%)</title><rect x="99.0826%" y="1109" width="0.0198%" height="15" fill="rgb(251,39,46)" fg:x="354585" fg:w="71"/><text x="99.3326%" y="1119.50"></text></g><g><title>sk-gen`&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (127 samples, 0.04%)</title><rect x="99.0673%" y="1125" width="0.0355%" height="15" fill="rgb(251,220,3)" fg:x="354530" fg:w="127"/><text x="99.3173%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (42 samples, 0.01%)</title><rect x="99.1103%" y="1109" width="0.0117%" height="15" fill="rgb(228,105,12)" fg:x="354684" fg:w="42"/><text x="99.3603%" y="1119.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (51 samples, 0.01%)</title><rect x="99.1542%" y="1077" width="0.0143%" height="15" fill="rgb(215,196,1)" fg:x="354841" fg:w="51"/><text x="99.4042%" y="1087.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (38 samples, 0.01%)</title><rect x="99.1894%" y="1045" width="0.0106%" height="15" fill="rgb(214,33,39)" fg:x="354967" fg:w="38"/><text x="99.4394%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 0.01%)</title><rect x="99.2098%" y="1029" width="0.0117%" height="15" fill="rgb(220,19,52)" fg:x="355040" fg:w="42"/><text x="99.4598%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (58 samples, 0.02%)</title><rect x="99.2296%" y="1013" width="0.0162%" height="15" fill="rgb(221,78,38)" fg:x="355111" fg:w="58"/><text x="99.4796%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.01%)</title><rect x="99.2682%" y="981" width="0.0115%" height="15" fill="rgb(253,30,16)" fg:x="355249" fg:w="41"/><text x="99.5182%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.01%)</title><rect x="99.2693%" y="965" width="0.0103%" height="15" fill="rgb(242,65,0)" fg:x="355253" fg:w="37"/><text x="99.5193%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (73 samples, 0.02%)</title><rect x="99.2603%" y="997" width="0.0204%" height="15" fill="rgb(235,201,12)" fg:x="355221" fg:w="73"/><text x="99.5103%" y="1007.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (97 samples, 0.03%)</title><rect x="99.2548%" y="1013" width="0.0271%" height="15" fill="rgb(233,161,9)" fg:x="355201" fg:w="97"/><text x="99.5048%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (48 samples, 0.01%)</title><rect x="99.2869%" y="997" width="0.0134%" height="15" fill="rgb(241,207,41)" fg:x="355316" fg:w="48"/><text x="99.5369%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (49 samples, 0.01%)</title><rect x="99.3056%" y="997" width="0.0137%" height="15" fill="rgb(212,69,46)" fg:x="355383" fg:w="49"/><text x="99.5556%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (42 samples, 0.01%)</title><rect x="99.3252%" y="981" width="0.0117%" height="15" fill="rgb(239,69,45)" fg:x="355453" fg:w="42"/><text x="99.5752%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (53 samples, 0.01%)</title><rect x="99.3512%" y="965" width="0.0148%" height="15" fill="rgb(242,117,48)" fg:x="355546" fg:w="53"/><text x="99.6012%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (70 samples, 0.02%)</title><rect x="99.3788%" y="965" width="0.0196%" height="15" fill="rgb(228,41,36)" fg:x="355645" fg:w="70"/><text x="99.6288%" y="975.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (43 samples, 0.01%)</title><rect x="99.3864%" y="949" width="0.0120%" height="15" fill="rgb(212,3,32)" fg:x="355672" fg:w="43"/><text x="99.6364%" y="959.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (39 samples, 0.01%)</title><rect x="99.4308%" y="933" width="0.0109%" height="15" fill="rgb(233,41,49)" fg:x="355831" fg:w="39"/><text x="99.6808%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (63 samples, 0.02%)</title><rect x="99.4481%" y="917" width="0.0176%" height="15" fill="rgb(252,170,49)" fg:x="355893" fg:w="63"/><text x="99.6981%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (148 samples, 0.04%)</title><rect x="99.4249%" y="949" width="0.0414%" height="15" fill="rgb(229,53,26)" fg:x="355810" fg:w="148"/><text x="99.6749%" y="959.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (86 samples, 0.02%)</title><rect x="99.4423%" y="933" width="0.0240%" height="15" fill="rgb(217,157,12)" fg:x="355872" fg:w="86"/><text x="99.6923%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (36 samples, 0.01%)</title><rect x="99.4856%" y="917" width="0.0101%" height="15" fill="rgb(227,17,9)" fg:x="356027" fg:w="36"/><text x="99.7356%" y="927.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (60 samples, 0.02%)</title><rect x="99.5096%" y="901" width="0.0168%" height="15" fill="rgb(218,84,12)" fg:x="356113" fg:w="60"/><text x="99.7596%" y="911.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (78 samples, 0.02%)</title><rect x="99.5048%" y="917" width="0.0218%" height="15" fill="rgb(212,79,24)" fg:x="356096" fg:w="78"/><text x="99.7548%" y="927.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (179 samples, 0.05%)</title><rect x="99.4850%" y="933" width="0.0500%" height="15" fill="rgb(217,222,37)" fg:x="356025" fg:w="179"/><text x="99.7350%" y="943.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (674 samples, 0.19%)</title><rect x="99.3475%" y="981" width="0.1883%" height="15" fill="rgb(246,208,8)" fg:x="355533" fg:w="674"/><text x="99.5975%" y="991.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (487 samples, 0.14%)</title><rect x="99.3998%" y="965" width="0.1361%" height="15" fill="rgb(244,133,10)" fg:x="355720" fg:w="487"/><text x="99.6498%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (249 samples, 0.07%)</title><rect x="99.4663%" y="949" width="0.0696%" height="15" fill="rgb(209,219,41)" fg:x="355958" fg:w="249"/><text x="99.7163%" y="959.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,107 samples, 0.31%)</title><rect x="99.2271%" y="1029" width="0.3093%" height="15" fill="rgb(253,175,45)" fg:x="355102" fg:w="1107"/><text x="99.4771%" y="1039.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (907 samples, 0.25%)</title><rect x="99.2830%" y="1013" width="0.2534%" height="15" fill="rgb(235,100,37)" fg:x="355302" fg:w="907"/><text x="99.5330%" y="1023.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (777 samples, 0.22%)</title><rect x="99.3193%" y="997" width="0.2171%" height="15" fill="rgb(225,87,19)" fg:x="355432" fg:w="777"/><text x="99.5693%" y="1007.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,279 samples, 0.36%)</title><rect x="99.1801%" y="1061" width="0.3574%" height="15" fill="rgb(217,152,17)" fg:x="354934" fg:w="1279"/><text x="99.4301%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,199 samples, 0.34%)</title><rect x="99.2025%" y="1045" width="0.3350%" height="15" fill="rgb(235,72,13)" fg:x="355014" fg:w="1199"/><text x="99.4525%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,485 samples, 0.41%)</title><rect x="99.1396%" y="1093" width="0.4150%" height="15" fill="rgb(233,140,18)" fg:x="354789" fg:w="1485"/><text x="99.3896%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,379 samples, 0.39%)</title><rect x="99.1692%" y="1077" width="0.3853%" height="15" fill="rgb(207,212,28)" fg:x="354895" fg:w="1379"/><text x="99.4192%" y="1087.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (61 samples, 0.02%)</title><rect x="99.5375%" y="1061" width="0.0170%" height="15" fill="rgb(220,130,25)" fg:x="356213" fg:w="61"/><text x="99.7875%" y="1071.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (45 samples, 0.01%)</title><rect x="99.5420%" y="1045" width="0.0126%" height="15" fill="rgb(205,55,34)" fg:x="356229" fg:w="45"/><text x="99.7920%" y="1055.50"></text></g><g><title>sk-gen`serde::ser::SerializeMap::serialize_entry (1,603 samples, 0.45%)</title><rect x="99.1069%" y="1125" width="0.4479%" height="15" fill="rgb(237,54,35)" fg:x="354672" fg:w="1603"/><text x="99.3569%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1,510 samples, 0.42%)</title><rect x="99.1329%" y="1109" width="0.4219%" height="15" fill="rgb(208,67,23)" fg:x="354765" fg:w="1510"/><text x="99.3829%" y="1119.50"></text></g><g><title>sk-gen`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1,801 samples, 0.50%)</title><rect x="99.0519%" y="1141" width="0.5033%" height="15" fill="rgb(206,207,50)" fg:x="354475" fg:w="1801"/><text x="99.3019%" y="1151.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (37 samples, 0.01%)</title><rect x="99.6080%" y="981" width="0.0103%" height="15" fill="rgb(213,211,42)" fg:x="356465" fg:w="37"/><text x="99.8580%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (79 samples, 0.02%)</title><rect x="99.6004%" y="1013" width="0.0221%" height="15" fill="rgb(252,197,50)" fg:x="356438" fg:w="79"/><text x="99.8504%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (75 samples, 0.02%)</title><rect x="99.6015%" y="997" width="0.0210%" height="15" fill="rgb(251,211,41)" fg:x="356442" fg:w="75"/><text x="99.8515%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (72 samples, 0.02%)</title><rect x="99.6574%" y="869" width="0.0201%" height="15" fill="rgb(229,211,5)" fg:x="356642" fg:w="72"/><text x="99.9074%" y="879.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (79 samples, 0.02%)</title><rect x="99.6563%" y="885" width="0.0221%" height="15" fill="rgb(239,36,31)" fg:x="356638" fg:w="79"/><text x="99.9063%" y="895.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (121 samples, 0.03%)</title><rect x="99.6538%" y="901" width="0.0338%" height="15" fill="rgb(248,67,31)" fg:x="356629" fg:w="121"/><text x="99.9038%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (167 samples, 0.05%)</title><rect x="99.6440%" y="917" width="0.0467%" height="15" fill="rgb(249,55,44)" fg:x="356594" fg:w="167"/><text x="99.8940%" y="927.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (241 samples, 0.07%)</title><rect x="99.6306%" y="933" width="0.0673%" height="15" fill="rgb(216,82,12)" fg:x="356546" fg:w="241"/><text x="99.8806%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (248 samples, 0.07%)</title><rect x="99.6292%" y="949" width="0.0693%" height="15" fill="rgb(242,174,1)" fg:x="356541" fg:w="248"/><text x="99.8792%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (252 samples, 0.07%)</title><rect x="99.6286%" y="965" width="0.0704%" height="15" fill="rgb(208,120,29)" fg:x="356539" fg:w="252"/><text x="99.8786%" y="975.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (48 samples, 0.01%)</title><rect x="99.7094%" y="917" width="0.0134%" height="15" fill="rgb(221,105,43)" fg:x="356828" fg:w="48"/><text x="99.9594%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (56 samples, 0.02%)</title><rect x="99.7074%" y="949" width="0.0156%" height="15" fill="rgb(234,124,22)" fg:x="356821" fg:w="56"/><text x="99.9574%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (49 samples, 0.01%)</title><rect x="99.7094%" y="933" width="0.0137%" height="15" fill="rgb(212,23,30)" fg:x="356828" fg:w="49"/><text x="99.9594%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (89 samples, 0.02%)</title><rect x="99.6991%" y="965" width="0.0249%" height="15" fill="rgb(219,122,53)" fg:x="356791" fg:w="89"/><text x="99.9491%" y="975.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (379 samples, 0.11%)</title><rect x="99.6236%" y="1013" width="0.1059%" height="15" fill="rgb(248,84,24)" fg:x="356521" fg:w="379"/><text x="99.8736%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (376 samples, 0.11%)</title><rect x="99.6244%" y="997" width="0.1051%" height="15" fill="rgb(245,115,18)" fg:x="356524" fg:w="376"/><text x="99.8744%" y="1007.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (373 samples, 0.10%)</title><rect x="99.6253%" y="981" width="0.1042%" height="15" fill="rgb(227,176,51)" fg:x="356527" fg:w="373"/><text x="99.8753%" y="991.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (487 samples, 0.14%)</title><rect x="99.5993%" y="1029" width="0.1361%" height="15" fill="rgb(229,63,42)" fg:x="356434" fg:w="487"/><text x="99.8493%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (522 samples, 0.15%)</title><rect x="99.5898%" y="1045" width="0.1459%" height="15" fill="rgb(247,202,24)" fg:x="356400" fg:w="522"/><text x="99.8398%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (537 samples, 0.15%)</title><rect x="99.5884%" y="1061" width="0.1501%" height="15" fill="rgb(244,173,20)" fg:x="356395" fg:w="537"/><text x="99.8384%" y="1071.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (571 samples, 0.16%)</title><rect x="99.5850%" y="1077" width="0.1596%" height="15" fill="rgb(242,81,47)" fg:x="356383" fg:w="571"/><text x="99.8350%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (574 samples, 0.16%)</title><rect x="99.5845%" y="1093" width="0.1604%" height="15" fill="rgb(231,185,54)" fg:x="356381" fg:w="574"/><text x="99.8345%" y="1103.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (590 samples, 0.16%)</title><rect x="99.5834%" y="1109" width="0.1649%" height="15" fill="rgb(243,55,32)" fg:x="356377" fg:w="590"/><text x="99.8334%" y="1119.50"></text></g><g><title>sk-gen`serde::de::impls::_&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (54 samples, 0.02%)</title><rect x="99.7670%" y="1061" width="0.0151%" height="15" fill="rgb(208,167,19)" fg:x="357034" fg:w="54"/><text x="100.0170%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (50 samples, 0.01%)</title><rect x="99.7681%" y="1045" width="0.0140%" height="15" fill="rgb(231,72,35)" fg:x="357038" fg:w="50"/><text x="100.0181%" y="1055.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (48 samples, 0.01%)</title><rect x="99.7686%" y="1029" width="0.0134%" height="15" fill="rgb(250,173,51)" fg:x="357040" fg:w="48"/><text x="100.0186%" y="1039.50"></text></g><g><title>sk-gen`&lt;&lt;k8s_openapi::v1_31::apimachinery::pkg::apis::meta::v1::object_meta::ObjectMeta as serde::de::Deserialize&gt;::deserialize::Visitor as serde::de::Visitor&gt;::visit_map (95 samples, 0.03%)</title><rect x="99.7558%" y="1077" width="0.0265%" height="15" fill="rgb(209,5,22)" fg:x="356994" fg:w="95"/><text x="100.0058%" y="1087.50"></text></g><g><title>sk-gen`&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (105 samples, 0.03%)</title><rect x="99.7544%" y="1109" width="0.0293%" height="15" fill="rgb(250,174,19)" fg:x="356989" fg:w="105"/><text x="100.0044%" y="1119.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (103 samples, 0.03%)</title><rect x="99.7549%" y="1093" width="0.0288%" height="15" fill="rgb(217,3,49)" fg:x="356991" fg:w="103"/><text x="100.0049%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (296 samples, 0.08%)</title><rect x="99.7865%" y="1109" width="0.0827%" height="15" fill="rgb(218,225,5)" fg:x="357104" fg:w="296"/><text x="100.0365%" y="1119.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (276 samples, 0.08%)</title><rect x="99.7921%" y="1093" width="0.0771%" height="15" fill="rgb(236,89,11)" fg:x="357124" fg:w="276"/><text x="100.0421%" y="1103.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (219 samples, 0.06%)</title><rect x="99.8080%" y="1077" width="0.0612%" height="15" fill="rgb(206,33,28)" fg:x="357181" fg:w="219"/><text x="100.0580%" y="1087.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (166 samples, 0.05%)</title><rect x="99.8228%" y="1061" width="0.0464%" height="15" fill="rgb(241,56,42)" fg:x="357234" fg:w="166"/><text x="100.0728%" y="1071.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (120 samples, 0.03%)</title><rect x="99.8357%" y="1045" width="0.0335%" height="15" fill="rgb(222,44,11)" fg:x="357280" fg:w="120"/><text x="100.0857%" y="1055.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (76 samples, 0.02%)</title><rect x="99.8480%" y="1029" width="0.0212%" height="15" fill="rgb(234,111,20)" fg:x="357324" fg:w="76"/><text x="100.0980%" y="1039.50"></text></g><g><title>sk-gen`core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (37 samples, 0.01%)</title><rect x="99.8589%" y="1013" width="0.0103%" height="15" fill="rgb(237,77,6)" fg:x="357363" fg:w="37"/><text x="100.1089%" y="1023.50"></text></g><g><title>sk-gen`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (40 samples, 0.01%)</title><rect x="99.9064%" y="1013" width="0.0112%" height="15" fill="rgb(235,111,23)" fg:x="357533" fg:w="40"/><text x="100.1564%" y="1023.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (85 samples, 0.02%)</title><rect x="99.9385%" y="949" width="0.0238%" height="15" fill="rgb(251,135,29)" fg:x="357648" fg:w="85"/><text x="100.1885%" y="959.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (64 samples, 0.02%)</title><rect x="99.9444%" y="933" width="0.0179%" height="15" fill="rgb(217,57,1)" fg:x="357669" fg:w="64"/><text x="100.1944%" y="943.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (52 samples, 0.01%)</title><rect x="99.9477%" y="917" width="0.0145%" height="15" fill="rgb(249,119,31)" fg:x="357681" fg:w="52"/><text x="100.1977%" y="927.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (51 samples, 0.01%)</title><rect x="99.9480%" y="901" width="0.0143%" height="15" fill="rgb(233,164,33)" fg:x="357682" fg:w="51"/><text x="100.1980%" y="911.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (45 samples, 0.01%)</title><rect x="99.9623%" y="933" width="0.0126%" height="15" fill="rgb(250,217,43)" fg:x="357733" fg:w="45"/><text x="100.2123%" y="943.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (174 samples, 0.05%)</title><rect x="99.9271%" y="965" width="0.0486%" height="15" fill="rgb(232,154,50)" fg:x="357607" fg:w="174"/><text x="100.1771%" y="975.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (48 samples, 0.01%)</title><rect x="99.9623%" y="949" width="0.0134%" height="15" fill="rgb(227,190,8)" fg:x="357733" fg:w="48"/><text x="100.2123%" y="959.50"></text></g><g><title>sk-gen`serde::de::Deserializer::__deserialize_content (211 samples, 0.06%)</title><rect x="99.9176%" y="1013" width="0.0590%" height="15" fill="rgb(209,217,32)" fg:x="357573" fg:w="211"/><text x="100.1676%" y="1023.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (187 samples, 0.05%)</title><rect x="99.9243%" y="997" width="0.0523%" height="15" fill="rgb(243,203,50)" fg:x="357597" fg:w="187"/><text x="100.1743%" y="1007.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (179 samples, 0.05%)</title><rect x="99.9265%" y="981" width="0.0500%" height="15" fill="rgb(232,152,27)" fg:x="357605" fg:w="179"/><text x="100.1765%" y="991.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (296 samples, 0.08%)</title><rect x="99.8983%" y="1029" width="0.0827%" height="15" fill="rgb(240,34,29)" fg:x="357504" fg:w="296"/><text x="100.1483%" y="1039.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (341 samples, 0.10%)</title><rect x="99.8871%" y="1061" width="0.0953%" height="15" fill="rgb(215,185,52)" fg:x="357464" fg:w="341"/><text x="100.1371%" y="1071.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (308 samples, 0.09%)</title><rect x="99.8963%" y="1045" width="0.0861%" height="15" fill="rgb(240,89,49)" fg:x="357497" fg:w="308"/><text x="100.1463%" y="1055.50"></text></g><g><title>sk-gen`&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (402 samples, 0.11%)</title><rect x="99.8706%" y="1093" width="0.1123%" height="15" fill="rgb(225,12,52)" fg:x="357405" fg:w="402"/><text x="100.1206%" y="1103.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (348 samples, 0.10%)</title><rect x="99.8857%" y="1077" width="0.0972%" height="15" fill="rgb(239,128,45)" fg:x="357459" fg:w="348"/><text x="100.1357%" y="1087.50"></text></g><g><title>sk-gen`sk_gen::Node::apply_patch (19,461 samples, 5.44%)</title><rect x="94.5455%" y="1157" width="5.4380%" height="15" fill="rgb(211,78,47)" fg:x="338348" fg:w="19461"/><text x="94.7955%" y="1167.50">sk-gen`..</text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1,531 samples, 0.43%)</title><rect x="99.5557%" y="1141" width="0.4278%" height="15" fill="rgb(232,31,21)" fg:x="356278" fg:w="1531"/><text x="99.8057%" y="1151.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (1,516 samples, 0.42%)</title><rect x="99.5599%" y="1125" width="0.4236%" height="15" fill="rgb(222,168,14)" fg:x="356293" fg:w="1516"/><text x="99.8099%" y="1135.50"></text></g><g><title>sk-gen`serde_json::value::de::_&lt;impl serde::de::Deserializer for serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;::deserialize_any (406 samples, 0.11%)</title><rect x="99.8701%" y="1109" width="0.1134%" height="15" fill="rgb(209,128,24)" fg:x="357403" fg:w="406"/><text x="100.1201%" y="1119.50"></text></g><g><title>sk-gen`&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::event (45 samples, 0.01%)</title><rect x="99.9871%" y="1141" width="0.0126%" height="15" fill="rgb(249,35,13)" fg:x="357822" fg:w="45"/><text x="100.2371%" y="1151.50"></text></g><g><title>sk-gen`std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.01%)</title><rect x="99.9874%" y="1125" width="0.0123%" height="15" fill="rgb(218,7,2)" fg:x="357823" fg:w="44"/><text x="100.2374%" y="1135.50"></text></g><g><title>all (357,868 samples, 100%)</title><rect x="0.0000%" y="1301" width="100.0000%" height="15" fill="rgb(238,107,27)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1311.50"></text></g><g><title>dyld`start (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(217,88,38)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1295.50">dyld`start</text></g><g><title>sk-gen`main (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(230,207,0)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1279.50">sk-gen`main</text></g><g><title>sk-gen`std::rt::lang_start_internal (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(249,64,54)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1263.50">sk-gen`std::rt::lang_start_internal</text></g><g><title>sk-gen`std::rt::lang_start::_{{closure}} (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(231,7,11)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1247.50">sk-gen`std::rt::lang_start::_{{closure}}</text></g><g><title>sk-gen`std::sys::backtrace::__rust_begin_short_backtrace (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(205,149,21)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1231.50">sk-gen`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>sk-gen`sk_gen::main (357,868 samples, 100.00%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(215,126,34)" fg:x="0" fg:w="357868"/><text x="0.2500%" y="1215.50">sk-gen`sk_gen::main</text></g><g><title>sk-gen`sk_gen::Simulation::run (357,857 samples, 100.00%)</title><rect x="0.0031%" y="1189" width="99.9969%" height="15" fill="rgb(241,132,45)" fg:x="11" fg:w="357857"/><text x="0.2531%" y="1199.50">sk-gen`sk_gen::Simulation::run</text></g><g><title>sk-gen`sk_gen::Simulation::expand_graph (357,737 samples, 99.96%)</title><rect x="0.0366%" y="1173" width="99.9634%" height="15" fill="rgb(252,69,32)" fg:x="131" fg:w="357737"/><text x="0.2866%" y="1183.50">sk-gen`sk_gen::Simulation::expand_graph</text></g><g><title>sk-gen`tracing_core::event::Event::dispatch (46 samples, 0.01%)</title><rect x="99.9871%" y="1157" width="0.0129%" height="15" fill="rgb(232,204,19)" fg:x="357822" fg:w="46"/><text x="100.2371%" y="1167.50"></text></g></svg></svg>